// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "DSP DevOps",
            "email": "dsp-devops@broadinstitute.org"
        },
        "license": {
            "name": "BSD-3-Clause",
            "url": "https://github.com/broadinstitute/sherlock/blob/main/LICENSE.txt"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/app-versions/procedures/v3/changelog": {
            "get": {
                "description": "Get the path through parent references from a child AppVersion (inclusive) to a parent AppVersion (exclusive), if possible. Because parent references point from newer children to older parents, the newer AppVersion should be the child. The result will always exclude the parent.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVersions"
                ],
                "summary": "Get a changelog between two AppVersions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the newer AppVersion for the changelog",
                        "name": "child",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The selector of the older AppVersion for the changelog",
                        "name": "parent",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.AppVersionV3ChangelogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/app-versions/v3": {
            "get": {
                "description": "List AppVersions matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVersions"
                ],
                "summary": "List AppVersions matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "appVersion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "authoredBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "chart",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Generally the Git commit message",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "gitBranch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "gitCommit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parentAppVersion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many AppVersions are returned (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned AppVersions (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.AppVersionV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsert a AppVersion.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVersions"
                ],
                "summary": "Upsert a AppVersion",
                "parameters": [
                    {
                        "description": "The AppVersion to upsert",
                        "name": "appVersion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.AppVersionV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.AppVersionV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/app-versions/v3/{selector}": {
            "get": {
                "description": "Get an individual AppVersion.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVersions"
                ],
                "summary": "Get an individual AppVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the AppVersion, which can be either a numeric ID or chart/version.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.AppVersionV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual AppVersion.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVersions"
                ],
                "summary": "Edit an individual AppVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the AppVersion, which can be either a numeric ID or chart/version.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the AppVersion",
                        "name": "appVersion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.AppVersionV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.AppVersionV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/changesets/procedures/v3/apply": {
            "post": {
                "description": "Looks up and applies previously-planned version diffs given by the ID. Other stored plans against the same Chart Releases are marked as superseded.\nMultiple Changesets can be specified simply by passing multiple IDs in the list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Changesets"
                ],
                "summary": "Apply previously planned version changes to Chart Releases",
                "parameters": [
                    {
                        "description": "String IDs of the Changesets to apply",
                        "name": "apply-request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "If full information about the changesets should be returned, defaults to true. If false, only the IDs will be returned.",
                        "name": "verbose-output",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/changesets/procedures/v3/chart-release-history/{chart-release}": {
            "get": {
                "description": "List existing applied Changesets for a particular Chart Release, ordered by most recently applied.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Changesets"
                ],
                "summary": "List applied Changesets for a Chart Release",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Selector of the Chart Release to find applied Changesets for",
                        "name": "chart-release",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "An optional offset to skip a number of latest Changesets",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "An optional limit to the number of entries returned",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/changesets/procedures/v3/plan": {
            "post": {
                "description": "Refreshes and calculates version diffs for Chart Releases. If there's a diff, the plan is stored and returned so it can be applied later.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Changesets"
                ],
                "summary": "Plan--but do not apply--version changes to Chart Releases",
                "parameters": [
                    {
                        "description": "Info on what version changes or refreshes to plan",
                        "name": "changeset-plan-request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChangesetV3PlanRequest"
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "If full information about the changesets should be returned, defaults to true. If false, only the IDs will be returned.",
                        "name": "verbose-output",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/changesets/procedures/v3/plan-and-apply": {
            "post": {
                "description": "Like calling the plan procedure immediately followed by the apply procedure. See those endpoints for more information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Changesets"
                ],
                "summary": "Plan and apply version changes in one step",
                "parameters": [
                    {
                        "description": "Info on what version changes or refreshes to apply.",
                        "name": "changeset-plan-request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChangesetV3PlanRequest"
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "If full information about the changesets should be returned, defaults to true. If false, only the IDs will be returned.",
                        "name": "verbose-output",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/changesets/procedures/v3/version-history/{version-type}/{chart}/{version}": {
            "get": {
                "description": "List existing applied Changesets that newly deployed a given App Version or Chart Version, ordered by most recently applied.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Changesets"
                ],
                "summary": "List applied Changesets for an App or Chart Version",
                "parameters": [
                    {
                        "enum": [
                            "app",
                            "chart"
                        ],
                        "type": "string",
                        "description": "The type of the version, either 'app' or 'chart'",
                        "name": "version-type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The chart the version belongs to",
                        "name": "chart",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The version to look for",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/changesets/v3": {
            "get": {
                "description": "List Changesets matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Changesets"
                ],
                "summary": "List Changesets matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "appliedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "appliedBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "chartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromAppVersionBranch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromAppVersionCommit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromAppVersionExact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromAppVersionFollowChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromAppVersionReference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromAppVersionResolver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromChartVersionExact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromChartVersionFollowChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromChartVersionReference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromChartVersionResolver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "fromHelmfileRef",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "fromHelmfileRefEnabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "fromResolvedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "plannedBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "supersededAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toAppVersionBranch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toAppVersionCommit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toAppVersionExact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toAppVersionFollowChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toAppVersionReference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toAppVersionResolver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toChartVersionExact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toChartVersionFollowChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toChartVersionReference",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toChartVersionResolver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "toHelmfileRef",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "toHelmfileRefEnabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "toResolvedAt",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Get specific changesets by their IDs, can be passed multiple times and/or be comma-separated",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many Changesets are returned (default 100), ignored if specific IDs are passed",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned Changesets (default 0), ignored if specific IDs are passed",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChangesetV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/changesets/v3/{id}": {
            "get": {
                "description": "Get an individual Changeset.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Changesets"
                ],
                "summary": "Get an individual Changeset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the changeset",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChangesetV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chart-releases/v3": {
            "get": {
                "description": "List ChartReleases matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartReleases"
                ],
                "summary": "List ChartReleases matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "When creating, will default to the app's mainline branch if no other app version info is present",
                        "name": "appVersionBranch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "appVersionCommit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "appVersionExact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "appVersionFollowChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "appVersionReference",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "branch",
                            "commit",
                            "exact",
                            "follow",
                            "none"
                        ],
                        "type": "string",
                        "description": "// When creating, will default to automatically reference any provided app version fields",
                        "name": "appVersionResolver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "chart",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "chartVersionExact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "chartVersionFollowChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "chartVersionReference",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "latest",
                            "exact",
                            "follow"
                        ],
                        "type": "string",
                        "description": "When creating, will default to automatically reference any provided chart version",
                        "name": "chartVersionResolver",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will default the environment's default cluster, if provided. Either this or environment must be provided.",
                        "name": "cluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Calculated field",
                        "name": "destinationType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Either this or cluster must be provided.",
                        "name": "environment",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "HEAD",
                        "name": "helmfileRef",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "name": "helmfileRefEnabled",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "name": "includedInBulkChangesets",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will be calculated if left empty",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will default to the environment's default namespace, if provided",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "pagerdutyIntegration",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "When creating, will use the chart's default if left empty",
                        "name": "port",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will use the chart's default if left empty",
                        "name": "protocol",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "resolvedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will use the chart's default if left empty",
                        "name": "subdomain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many ChartReleases are returned (default 0, meaning all)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned ChartReleases (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChartReleaseV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a ChartRelease.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartReleases"
                ],
                "summary": "Create a ChartRelease",
                "parameters": [
                    {
                        "description": "The ChartRelease to create",
                        "name": "chartRelease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartReleaseV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartReleaseV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chart-releases/v3/{selector}": {
            "get": {
                "description": "Get an individual ChartRelease.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartReleases"
                ],
                "summary": "Get an individual ChartRelease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the ChartRelease, which can be either a numeric ID, the name, environment + '/' + chart, or cluster + '/' + namespace + '/' + chart.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartReleaseV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual ChartRelease by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartReleases"
                ],
                "summary": "Delete an individual ChartRelease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the ChartRelease, which can be either a numeric ID, the name, environment + '/' + chart, or cluster + '/' + namespace + '/' + chart.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartReleaseV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual ChartRelease.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartReleases"
                ],
                "summary": "Edit an individual ChartRelease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the ChartRelease, which can be either a numeric ID, the name, environment + '/' + chart, or cluster + '/' + namespace + '/' + chart.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the ChartRelease",
                        "name": "chartRelease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartReleaseV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartReleaseV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chart-versions/procedures/v3/changelog": {
            "get": {
                "description": "Get the path through parent references from a child ChartVersion (inclusive) to a parent ChartVersion (exclusive), if possible. Because parent references point from newer children to older parents, the newer ChartVersion should be the child. The result will always exclude the parent.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartVersions"
                ],
                "summary": "Get a changelog between two ChartVersions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the newer ChartVersion for the changelog",
                        "name": "child",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The selector of the older ChartVersion for the changelog",
                        "name": "parent",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartVersionV3ChangelogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chart-versions/v3": {
            "get": {
                "description": "List ChartVersions matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartVersions"
                ],
                "summary": "List ChartVersions matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "authoredBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "chart",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "chartVersion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Generally the Git commit message",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "parentChartVersion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many ChartVersions are returned (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned ChartVersions (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChartVersionV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsert a ChartVersion.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartVersions"
                ],
                "summary": "Upsert a ChartVersion",
                "parameters": [
                    {
                        "description": "The ChartVersion to upsert",
                        "name": "chartVersion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartVersionV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartVersionV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/chart-versions/v3/{selector}": {
            "get": {
                "description": "Get an individual ChartVersion.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartVersions"
                ],
                "summary": "Get an individual ChartVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the ChartVersion, which can be either a numeric ID or chart/version.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartVersionV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual ChartVersion.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ChartVersions"
                ],
                "summary": "Edit an individual ChartVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the ChartVersion, which can be either a numeric ID or chart/version.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the ChartVersion",
                        "name": "chartVersion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartVersionV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartVersionV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/charts/v3": {
            "get": {
                "description": "List Charts matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charts"
                ],
                "summary": "List Charts matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "appImageGitMainBranch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "appImageGitRepo",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates if the default subdomain, protocol, and port fields are relevant for this chart",
                        "name": "chartExposesEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "terra-helm",
                        "name": "chartRepo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 443,
                        "name": "defaultPort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "https",
                        "name": "defaultProtocol",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will default to the name of the chart",
                        "name": "defaultSubdomain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "name": "pactParticipant",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "playbookURL",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many Charts are returned (default 0, meaning all)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned Charts (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ChartV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Chart.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charts"
                ],
                "summary": "Create a Chart",
                "parameters": [
                    {
                        "description": "The Chart to create",
                        "name": "chart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/charts/v3/{selector}": {
            "get": {
                "description": "Get an individual Chart.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charts"
                ],
                "summary": "Get an individual Chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Chart, which can be either a numeric ID or the name.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual Chart by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charts"
                ],
                "summary": "Delete an individual Chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Chart, which can be either a numeric ID or the name.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual Chart.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charts"
                ],
                "summary": "Edit an individual Chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Chart, which can be either a numeric ID or the name.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the Chart",
                        "name": "chart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ChartV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ci-identifiers/v3": {
            "get": {
                "description": "List CiIdentifiers matching a filter. The CiRuns would have to re-queried directly to load the CiRuns.\nThis is mainly helpful for debugging and directly querying the existence of a CiIdentifier. Results are\nordered by creation date, starting at most recent.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CiIdentifiers"
                ],
                "summary": "List CiIdentifiers matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "resourceID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Available only when querying a CiIdentifier via a CiRun, indicates the status of the run for that resource",
                        "name": "resourceStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "resourceType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many CiIdentifiers are returned (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned CiIdentifiers (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.CiIdentifierV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ci-identifiers/v3/{selector}": {
            "get": {
                "description": "Get CiRuns for a resource by its CiIdentifier, which can be referenced by '{type}/{selector...}'.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CiIdentifiers"
                ],
                "summary": "Get CiRuns for a resource by its CiIdentifier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of CiIdentifier, which can be referenced either by numeric ID or indirectly by '{type}/{selector...}'",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Control how many CiRuns are returned (default 10)",
                        "name": "limitCiRuns",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned CiRuns (default 0)",
                        "name": "offsetCiRuns",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Allow stub CiRuns potentially lacking fields like status or startedAt to be returned (default false)",
                        "name": "allowStubCiRuns",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.CiIdentifierV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ci-runs/procedures/v3/github-info": {
            "get": {
                "description": "List info about GitHub repos and their workflow files as determined by CiRuns from the past 90 days.\nThis is a useful proxy for figuring out what repos Sherlock probably has access to: workflows listed\nhere can probably successfully called by a GitHub Actions deploy hook.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CiRuns"
                ],
                "summary": "List GitHub info gleaned from CiRuns",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ci-runs/v3": {
            "get": {
                "description": "List CiRuns matching a filter. The CiRuns would have to re-queried directly to load any related resources.\nResults are ordered by start time, starting at most recent.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CiRuns"
                ],
                "summary": "List CiRuns matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "argoWorkflowsName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "argoWorkflowsNamespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "argoWorkflowsTemplate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "githubActionsAttemptNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsOwner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsRepo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "githubActionsRunID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsWorkflowPath",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Slack channels to notify if this CiRun fails. This field is always appended to when mutated.",
                        "name": "notifySlackChannelsUponFailure",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Slack channels to notify if this CiRun is retried. This field is always appended to when mutated. It will de-dupe with the other notify fields.",
                        "name": "notifySlackChannelsUponRetry",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Slack channels to notify if this CiRun succeeds. This field is always appended to when mutated.",
                        "name": "notifySlackChannelsUponSuccess",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Icon to use for success or failure Slack notifications. Can be given either as a URL to an image or as a Slack emoji (using colon shortcodes, like :smiley:).\nAn empty string is ignored to facilitate calling from GitHub Actions (where it's easier to pass an empty string than not send the field at all).",
                        "name": "notifySlackCustomIcon",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Available only when querying a CiRun via a CiIdentifier, indicates the status of the run for that resource",
                        "name": "resourceStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "terminalAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "terminationHooksDispatchedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many CiRuns are returned (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned CiRuns (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.CiRunV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Create or update a CiRun with timing, status, and related resource information. This endpoint is idempotent.\nThe fields for clusters, charts, chart releases, environments, etc. all accept selectors, and they will\nbe smart about \"spreading\" to indirect relations. More info is available on the CiRunV3Upsert data type,\nbut the gist is that specifying a changeset implies its chart release (and optionally app/chart versions),\nspecifying or implying a chart release implies its environment/cluster, and specifying an environment/cluster\nimplies all chart releases they contain.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CiRuns"
                ],
                "summary": "Create or update a CiRun",
                "parameters": [
                    {
                        "description": "The CiRun to upsert",
                        "name": "ciRun",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.CiRunV3Upsert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.CiRunV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ci-runs/v3/{selector}": {
            "get": {
                "description": "Get a CiRun, including CiIdentifiers representing related resources or resources it affected.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CiRuns"
                ],
                "summary": "Get a CiRun, including CiIdentifiers for related resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the CiRun, which can be either its numeric ID, 'github-actions/{owner}/{repo}/{run ID}/{attempt}', or 'argo-workflows/{namespace}/{name}'",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.CiRunV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/clusters/v3": {
            "get": {
                "description": "List Clusters matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clusters"
                ],
                "summary": "List Clusters matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating if provider is 'azure'",
                        "name": "azureSubscription",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "base",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating if provider is 'google'",
                        "name": "googleProject",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "HEAD",
                        "name": "helmfileRef",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "us-central1-a",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "google",
                            "azure"
                        ],
                        "type": "string",
                        "default": "google",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "name": "requiresSuitability",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many Clusters are returned (default 0, meaning all)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned Clusters (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.ClusterV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clusters"
                ],
                "summary": "Create a Cluster",
                "parameters": [
                    {
                        "description": "The Cluster to create",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ClusterV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ClusterV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/clusters/v3/{selector}": {
            "get": {
                "description": "Get an individual Cluster.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clusters"
                ],
                "summary": "Get an individual Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Cluster, which can be either a numeric ID or the name.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ClusterV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual Cluster by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clusters"
                ],
                "summary": "Delete an individual Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Cluster, which can be either a numeric ID or the name.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ClusterV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual Cluster.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clusters"
                ],
                "summary": "Edit an individual Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Cluster, which can be either a numeric ID or the name.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the Cluster",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.ClusterV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.ClusterV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/database-instances/v3": {
            "get": {
                "description": "List DatabaseInstances matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DatabaseInstances"
                ],
                "summary": "List DatabaseInstances matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "chartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, defaults to the chart name",
                        "name": "defaultDatabase",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required if platform is 'google'",
                        "name": "googleProject",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required if platform is 'google' or 'azure'",
                        "name": "instanceName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "kubernetes",
                        "description": "'google', 'azure', or default 'kubernetes'",
                        "name": "platform",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many DatabaseInstances are returned (default 0, meaning all)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned DatabaseInstances (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.DatabaseInstanceV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Create or edit a DatabaseInstance, depending on whether one already exists for the chart release",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DatabaseInstances"
                ],
                "summary": "Create or edit a DatabaseInstance",
                "parameters": [
                    {
                        "description": "The DatabaseInstance to create or edit. Defaults will only be set if creating.",
                        "name": "databaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3Create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a DatabaseInstance.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DatabaseInstances"
                ],
                "summary": "Create a DatabaseInstance",
                "parameters": [
                    {
                        "description": "The DatabaseInstance to create",
                        "name": "databaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/database-instances/v3/{selector}": {
            "get": {
                "description": "Get an individual DatabaseInstance by its selector.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DatabaseInstances"
                ],
                "summary": "Get an individual DatabaseInstance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the DatabaseInstance, which can be either a numeric ID or 'chart-release/' followed by a chart release selector.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual DatabaseInstance by its selector.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DatabaseInstances"
                ],
                "summary": "Delete an individual DatabaseInstance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the DatabaseInstance, which can be either a numeric ID or 'chart-release/' followed by a chart release selector.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual DatabaseInstance by its selector.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DatabaseInstances"
                ],
                "summary": "Edit an individual DatabaseInstance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the DatabaseInstance, which can be either a numeric ID or 'chart-release/' followed by a chart release selector.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the DatabaseInstance",
                        "name": "databaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.DatabaseInstanceV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/deploy-hooks/github-actions/procedures/v3/test/{selector}": {
            "post": {
                "description": "Run a GitHub Action to simulate a GithubActionsDeployHook",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Test a GithubActionsDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the GithubActionsDeployHook",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Whether to fully execute the hook (JSON body helps with CSRF protection)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookTestRunRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookTestRunResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/deploy-hooks/github-actions/v3": {
            "get": {
                "description": "List GithubActionsDeployHooks matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "List GithubActionsDeployHooks matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsDefaultRef",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsOwner",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "always-use-default-ref",
                            "use-app-version-as-ref",
                            "use-app-version-commit-as-ref"
                        ],
                        "type": "string",
                        "default": "always-use-default-ref",
                        "description": "This field determines what git ref the workflow will be run on. The default of always-use-default-ref always uses the default ref; use-app-version-as-ref will use the app version (when available) as the ref, useful when versions are always commit hashes or tags; use-app-version-commit-as-ref will use the app version's commit (when available) as the ref, useful when the repo is configured to fully report app versions to Sherlock.",
                        "name": "githubActionsRefBehavior",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsRepo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsWorkflowPath",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "onChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "onEnvironment",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onFailure",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onSuccess",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many GithubActionsDeployHooks are returned (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned GithubActionsDeployHooks (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.GithubActionsDeployHookV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a GithubActionsDeployHook.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Create a GithubActionsDeployHook",
                "parameters": [
                    {
                        "description": "The GithubActionsDeployHook to create",
                        "name": "githubActionsDeployHook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/deploy-hooks/github-actions/v3/{selector}": {
            "get": {
                "description": "Get an individual GithubActionsDeployHook by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Get an individual GithubActionsDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the GithubActionsDeployHook",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual GithubActionsDeployHook by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Delete an individual GithubActionsDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the GithubActionsDeployHook",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual GithubActionsDeployHook by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Edit an individual GithubActionsDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the GithubActionsDeployHook to edit",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the GithubActionsDeployHook",
                        "name": "githubActionsDeployHook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/deploy-hooks/slack/procedures/v3/test/{selector}": {
            "post": {
                "description": "Send a Slack message to simulate a SlackDeployHook",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Test a SlackDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the SlackDeployHook to test",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Whether to fully execute the hook (JSON body helps with CSRF protection)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookTestRunRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookTestRunResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/deploy-hooks/slack/v3": {
            "get": {
                "description": "List SlackDeployHooks matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "List SlackDeployHooks matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "mentionPeople",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "onChartRelease",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "onEnvironment",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onFailure",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onSuccess",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "slackChannel",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many SlackDeployHooks are returned (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned SlackDeployHooks (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.SlackDeployHookV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a SlackDeployHook.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Create a SlackDeployHook",
                "parameters": [
                    {
                        "description": "The SlackDeployHook to create",
                        "name": "slackDeployHook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/deploy-hooks/slack/v3/{selector}": {
            "get": {
                "description": "Get an individual SlackDeployHook by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Get an individual SlackDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the SlackDeployHook",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual SlackDeployHook by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Delete an individual SlackDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the SlackDeployHook",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual SlackDeployHook by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeployHooks"
                ],
                "summary": "Edit an individual SlackDeployHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the SlackDeployHook to edit",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the SlackDeployHook",
                        "name": "slackDeployHook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.SlackDeployHookV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/environments/v3": {
            "get": {
                "description": "List Environments matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "List Environments matching a filter",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "If true when creating, dynamic environments copy from template and template environments get the honeycomb chart",
                        "name": "autoPopulateChartReleases",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required when creating",
                        "name": "base",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "bee.envs-terra.bio",
                        "name": "baseDomain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "defaultCluster",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will be calculated if left empty",
                        "name": "defaultNamespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "If set, the BEE will be automatically deleted after this time. Can be set to \"\" or Go's zero time value to clear the field.",
                        "name": "deleteAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "HEAD",
                        "name": "helmfileRef",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "dynamic",
                        "name": "lifecycle",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will be calculated if dynamic, required otherwise",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "name": "namePrefixesDomain",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Applicable for BEEs only, whether Thelma should render the BEE as \"offline\" zero replicas (this field is a target state, not a status)",
                        "name": "offline",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "When enabled, the BEE will be slated to go offline around the begin time each day",
                        "name": "offlineScheduleBeginEnabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Stored with timezone to determine day of the week",
                        "name": "offlineScheduleBeginTime",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "When enabled, the BEE will be slated to come online around the end time each weekday (each day if weekends enabled)",
                        "name": "offlineScheduleEndEnabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Stored with timezone to determine day of the week",
                        "name": "offlineScheduleEndTime",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "offlineScheduleEndWeekends",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will default to you",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "PactIdentifier",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "pagerdutyIntegration",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Used to protect specific BEEs from deletion (thelma checks this field)",
                        "name": "preventDeletion",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "name": "requiresSuitability",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Required for dynamic environments",
                        "name": "templateEnvironment",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, will be calculated if left empty",
                        "name": "uniqueResourcePrefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "When creating, defaults to template name or environment name",
                        "name": "valuesName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many Environments are returned (default 0, meaning all)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned Environments (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.EnvironmentV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Environment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Create a Environment",
                "parameters": [
                    {
                        "description": "The Environment to create",
                        "name": "environment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.EnvironmentV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.EnvironmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/environments/v3/{selector}": {
            "get": {
                "description": "Get an individual Environment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Get an individual Environment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Environment, which can be either a numeric ID, the name, or 'resource-prefix' + / + the unique resource prefix.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.EnvironmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual Environment by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Delete an individual Environment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Environment, which can be either a numeric ID, the name, or 'resource-prefix' + / + the unique resource prefix.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.EnvironmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual Environment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Edit an individual Environment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the Environment, which can be either a numeric ID, the name, or 'resource-prefix' + / + the unique resource prefix.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the Environment",
                        "name": "environment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.EnvironmentV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.EnvironmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/git-commits/v3": {
            "put": {
                "description": "Upsert a GitCommit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GitCommits"
                ],
                "summary": "Upsert a GitCommit",
                "parameters": [
                    {
                        "description": "The GitCommit to upsert",
                        "name": "gitCommit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.GitCommitV3Upsert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GitCommitV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github-actions-jobs/v3": {
            "get": {
                "description": "List GithubActionsJobs matching a filter.\nResults are ordered by start time, starting at most recent.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GithubActionsJobs"
                ],
                "summary": "List GithubActionsJobs matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "githubActionsAttemptNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "githubActionsJobID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsOwner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubActionsRepo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "githubActionsRunID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "jobCreatedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "jobStartedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "jobTerminalAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many GithubActionsJobs are returned (default 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned GithubActionsJobs (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.GithubActionsJobV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsert GithubActionsJob.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GithubActionsJobs"
                ],
                "summary": "Upsert GithubActionsJob",
                "parameters": [
                    {
                        "description": "The GithubActionsJob to upsert",
                        "name": "githubActionsJob",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsJobV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsJobV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/github-actions-jobs/v3/{selector}": {
            "get": {
                "description": "Get an individual GithubActionsJob.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GithubActionsJobs"
                ],
                "summary": "Get an individual GithubActionsJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the GithubActionsJob, either Sherlock ID or '{owner}/{repo}/{job ID}'",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.GithubActionsJobV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/incidents/v3": {
            "get": {
                "description": "List Incidents matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incidents"
                ],
                "summary": "List Incidents matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "remediatedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "reviewCompletedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startedAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ticket",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many Incidents are returned (default 0, meaning all)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned Incidents (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.IncidentV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Incident.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incidents"
                ],
                "summary": "Create a Incident",
                "parameters": [
                    {
                        "description": "The Incident to create",
                        "name": "incident",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.IncidentV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.IncidentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/incidents/v3/{selector}": {
            "get": {
                "description": "Get an individual Incident.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incidents"
                ],
                "summary": "Get an individual Incident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the Incident",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.IncidentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual Incident by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incidents"
                ],
                "summary": "Delete an individual Incident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the Incident",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.IncidentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual Incident.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incidents"
                ],
                "summary": "Edit an individual Incident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the Incident",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the Incident",
                        "name": "incident",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.IncidentV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.IncidentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pagerduty-integrations/procedures/v3/trigger-incident/{selector}": {
            "post": {
                "description": "Get an individual PagerdutyIntegration.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PagerdutyIntegrations"
                ],
                "summary": "Get an individual PagerdutyIntegration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the PagerdutyIntegration, which can be either a numeric ID or pd-id/\u003cpagerduty-id\u003e.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Summary of the incident",
                        "name": "summary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pagerduty.AlertSummary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pagerduty.SendAlertResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pagerduty-integrations/v3": {
            "get": {
                "description": "List PagerdutyIntegrations matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PagerdutyIntegrations"
                ],
                "summary": "List PagerdutyIntegrations matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "pagerdutyID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many PagerdutyIntegrations are returned (default 0, meaning all)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned PagerdutyIntegrations (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a PagerdutyIntegration. Duplicate Pagerduty IDs will be gracefully handled by editing the existing entry. This is partially opaque because some fields are writable but not readable.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PagerdutyIntegrations"
                ],
                "summary": "Create a PagerdutyIntegration",
                "parameters": [
                    {
                        "description": "The PagerdutyIntegration to create",
                        "name": "pagerdutyIntegration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3Create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pagerduty-integrations/v3/{selector}": {
            "get": {
                "description": "Get an individual PagerdutyIntegration.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PagerdutyIntegrations"
                ],
                "summary": "Get an individual PagerdutyIntegration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the PagerdutyIntegration, which can be either a numeric ID or pd-id/\u003cpagerduty-id\u003e.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual PagerdutyIntegration by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PagerdutyIntegrations"
                ],
                "summary": "Delete an individual PagerdutyIntegration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the PagerdutyIntegration, which can be either a numeric ID or pd-id/\u003cpagerduty-id\u003e.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual PagerdutyIntegration.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PagerdutyIntegrations"
                ],
                "summary": "Edit an individual PagerdutyIntegration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the PagerdutyIntegration, which can be either a numeric ID or pd-id/\u003cpagerduty-id\u003e.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the PagerdutyIntegration",
                        "name": "pagerdutyIntegration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/role-assignments/v3": {
            "get": {
                "description": "List RoleAssignments matching a filter. The correct way to list RoleAssignments for a particular Role or User is to get that Role or User specifically, not to use this endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RoleAssignments"
                ],
                "summary": "List RoleAssignments matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "expiresAt",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suspended",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many RoleAssignments are returned (default 0, no limit)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned RoleAssignments (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.RoleAssignmentV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/role-assignments/v3/{role-id}/{user-selector}": {
            "get": {
                "description": "Get the RoleAssignment between a given Role and User.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RoleAssignments"
                ],
                "summary": "Get a RoleAssignment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the role",
                        "name": "role-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The selector of the User, which can be either a numeric ID, the email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github numeric ID}'.",
                        "name": "user-selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleAssignmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create the RoleAssignment between a given Role and User.\nNon-super-admins may only mutate RoleAssignments for themselves, only for roles they can break-glass into, and only with an expiry no further than the role's default break-glass duration in the future.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RoleAssignments"
                ],
                "summary": "Create a RoleAssignment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the role",
                        "name": "role-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The selector of the User, which can be either a numeric ID, the email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github numeric ID}'.",
                        "name": "user-selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The initial fields to set for the new RoleAssignment",
                        "name": "role-assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleAssignmentV3Edit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleAssignmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the RoleAssignment between a given Role and User.\nNon-super-admins may only mutate RoleAssignments for themselves, only for roles they can break-glass into, and only with an expiry no further than the role's default break-glass duration in the future.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RoleAssignments"
                ],
                "summary": "Delete a RoleAssignment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the role",
                        "name": "role-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The selector of the User, which can be either a numeric ID, the email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github numeric ID}'.",
                        "name": "user-selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleAssignmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit the RoleAssignment between a given Role and User.\nNon-super-admins may only mutate RoleAssignments for themselves, only for roles they can break-glass into, and only with an expiry no further than the role's default break-glass duration in the future.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RoleAssignments"
                ],
                "summary": "Edit a RoleAssignment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the role",
                        "name": "role-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The selector of the User, which can be either a numeric ID, the email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github numeric ID}'.",
                        "name": "user-selector",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the RoleAssignment",
                        "name": "role-assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleAssignmentV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleAssignmentV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/roles/v3": {
            "get": {
                "description": "List Roles matching a filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "List Roles matching a filter",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "canBeGlassBrokenByRole",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "defaultGlassBreakDuration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "grantsDevAzureGroup",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "grantsDevFirecloudGroup",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "grantsSherlockSuperAdmin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suspendNonSuitableUsers",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many Roles are returned (default 0, no limit)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned Roles (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.RoleV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an individual Role with no one assigned to it.\nOnly super-admins may mutate Roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Create a Role",
                "parameters": [
                    {
                        "description": "The initial fields the Role should have set",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleV3Edit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/roles/v3/{id}": {
            "get": {
                "description": "Get an individual Role and the Users assigned to it.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get a Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the role",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an individual Role.\nOnly super-admins may mutate Roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Delete a Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the role",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit an individual Role.\nOnly super-admins may mutate Roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Edit a Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The numeric ID of the role",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The edits to make to the Role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleV3Edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.RoleV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/v3": {
            "get": {
                "description": "List Users matching a filter. The results will include suitability and other information.\nNote that the suitability info can't directly be filtered for at this time.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List Users matching a filter",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "githubUsername",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "googleID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "sherlock",
                            "github",
                            "slack"
                        ],
                        "type": "string",
                        "name": "nameFrom",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.\nWill be set to true if the user account has no name and a GitHub account is linked.",
                        "name": "nameInferredFromGithub",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "slackID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "slackUsername",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Available only in responses; describes the user's production-suitability",
                        "name": "suitabilityDescription",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Available only in responses; indicates whether the user is production-suitable",
                        "name": "suitable",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "name": "updatedAt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control how many Users are returned (default 0, no limit)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Control the offset for the returned Users (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sherlock.UserV3"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the calling User's information. As with all authenticated Sherlock endpoints,\nnewly-observed callers will have a User record added, meaning that this endpoint\nbehaves like an upsert.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update the calling User's information",
                "parameters": [
                    {
                        "description": "The User data to update",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/sherlock.UserV3Upsert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.UserV3"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/sherlock.UserV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/v3/{selector}": {
            "get": {
                "description": "Get an individual User. As a special case, \"me\" or \"self\" can be passed as the selector to get the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get an individual User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The selector of the User, which can be either a numeric ID, the email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github numeric ID}'. As a special case, 'me' or 'self' can be passed to get the calling user.",
                        "name": "selector",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sherlock.UserV3"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "407": {
                        "description": "Proxy Authentication Required",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/connection-check": {
            "get": {
                "description": "Get a static response from Sherlock to verify connection through proxies like IAP.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Test the client's connection to Sherlock",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/misc.ConnectionCheckResponse"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Get Sherlock's current status. Right now, this endpoint always returned OK (if the server is online).\nThis endpoint is acceptable to use for a readiness check.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Get Sherlock's current status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/misc.StatusResponse"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get the build version of this Sherlock instance.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Get Sherlock's own current version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/misc.VersionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "toBlame": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "misc.ConnectionCheckResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "description": "Always true",
                    "type": "boolean"
                }
            }
        },
        "misc.StatusResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "misc.VersionResponse": {
            "type": "object",
            "properties": {
                "buildInfo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "goVersion": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "pagerduty.AlertSummary": {
            "type": "object",
            "properties": {
                "sourceLink": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "pagerduty.SendAlertResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "sherlock.AppVersionV3": {
            "type": "object",
            "properties": {
                "appVersion": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "authoredBy": {
                    "type": "string"
                },
                "authoredByInfo": {
                    "$ref": "#/definitions/sherlock.UserV3"
                },
                "chart": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "chartInfo": {
                    "$ref": "#/definitions/sherlock.ChartV3"
                },
                "ciIdentifier": {
                    "$ref": "#/definitions/sherlock.CiIdentifierV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "Generally the Git commit message",
                    "type": "string"
                },
                "gitBranch": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parentAppVersion": {
                    "type": "string"
                },
                "parentAppVersionInfo": {
                    "type": "object"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.AppVersionV3ChangelogResponse": {
            "type": "object",
            "properties": {
                "changelog": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.AppVersionV3"
                    }
                },
                "complete": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.AppVersionV3Create": {
            "type": "object",
            "properties": {
                "appVersion": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "chart": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "description": {
                    "description": "Generally the Git commit message",
                    "type": "string"
                },
                "gitBranch": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "parentAppVersion": {
                    "type": "string"
                }
            }
        },
        "sherlock.AppVersionV3Edit": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Generally the Git commit message",
                    "type": "string"
                }
            }
        },
        "sherlock.ChangesetV3": {
            "type": "object",
            "properties": {
                "appliedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "appliedBy": {
                    "type": "string"
                },
                "appliedByInfo": {
                    "$ref": "#/definitions/sherlock.UserV3"
                },
                "chartRelease": {
                    "type": "string"
                },
                "chartReleaseInfo": {
                    "$ref": "#/definitions/sherlock.ChartReleaseV3"
                },
                "ciIdentifier": {
                    "$ref": "#/definitions/sherlock.CiIdentifierV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "fromAppVersionBranch": {
                    "type": "string"
                },
                "fromAppVersionCommit": {
                    "type": "string"
                },
                "fromAppVersionExact": {
                    "type": "string"
                },
                "fromAppVersionFollowChartRelease": {
                    "type": "string"
                },
                "fromAppVersionReference": {
                    "type": "string"
                },
                "fromAppVersionResolver": {
                    "type": "string"
                },
                "fromChartVersionExact": {
                    "type": "string"
                },
                "fromChartVersionFollowChartRelease": {
                    "type": "string"
                },
                "fromChartVersionReference": {
                    "type": "string"
                },
                "fromChartVersionResolver": {
                    "type": "string"
                },
                "fromHelmfileRef": {
                    "type": "string"
                },
                "fromHelmfileRefEnabled": {
                    "type": "boolean"
                },
                "fromResolvedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer"
                },
                "newAppVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.AppVersionV3"
                    }
                },
                "newChartVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.ChartVersionV3"
                    }
                },
                "plannedBy": {
                    "type": "string"
                },
                "plannedByInfo": {
                    "$ref": "#/definitions/sherlock.UserV3"
                },
                "supersededAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "toAppVersionBranch": {
                    "type": "string"
                },
                "toAppVersionCommit": {
                    "type": "string"
                },
                "toAppVersionExact": {
                    "type": "string"
                },
                "toAppVersionFollowChartRelease": {
                    "type": "string"
                },
                "toAppVersionReference": {
                    "type": "string"
                },
                "toAppVersionResolver": {
                    "type": "string"
                },
                "toChartVersionExact": {
                    "type": "string"
                },
                "toChartVersionFollowChartRelease": {
                    "type": "string"
                },
                "toChartVersionReference": {
                    "type": "string"
                },
                "toChartVersionResolver": {
                    "type": "string"
                },
                "toHelmfileRef": {
                    "type": "string"
                },
                "toHelmfileRefEnabled": {
                    "type": "boolean"
                },
                "toResolvedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.ChangesetV3PlanRequest": {
            "type": "object",
            "properties": {
                "chartReleases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.ChangesetV3PlanRequestChartReleaseEntry"
                    }
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.ChangesetV3PlanRequestEnvironmentEntry"
                    }
                },
                "recreateChangesets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "sherlock.ChangesetV3PlanRequestChartReleaseEntry": {
            "type": "object",
            "properties": {
                "chartRelease": {
                    "type": "string"
                },
                "followVersionsFromOtherChartRelease": {
                    "type": "string"
                },
                "toAppVersionBranch": {
                    "type": "string"
                },
                "toAppVersionCommit": {
                    "type": "string"
                },
                "toAppVersionExact": {
                    "type": "string"
                },
                "toAppVersionFollowChartRelease": {
                    "type": "string"
                },
                "toAppVersionResolver": {
                    "type": "string"
                },
                "toChartVersionExact": {
                    "type": "string"
                },
                "toChartVersionFollowChartRelease": {
                    "type": "string"
                },
                "toChartVersionResolver": {
                    "type": "string"
                },
                "toHelmfileRef": {
                    "type": "string"
                },
                "toHelmfileRefEnabled": {
                    "type": "boolean"
                },
                "useExactVersionsFromOtherChartRelease": {
                    "type": "string"
                }
            }
        },
        "sherlock.ChangesetV3PlanRequestEnvironmentEntry": {
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string"
                },
                "excludeCharts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "followVersionsFromOtherEnvironment": {
                    "type": "string"
                },
                "includeCharts": {
                    "description": "If omitted, will include all chart releases that haven't opted out of bulk updates",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "useExactVersionsFromOtherEnvironment": {
                    "type": "string"
                }
            }
        },
        "sherlock.ChartReleaseV3": {
            "type": "object",
            "properties": {
                "appVersionBranch": {
                    "description": "When creating, will default to the app's mainline branch if no other app version info is present",
                    "type": "string"
                },
                "appVersionCommit": {
                    "type": "string"
                },
                "appVersionExact": {
                    "type": "string"
                },
                "appVersionFollowChartRelease": {
                    "type": "string"
                },
                "appVersionInfo": {
                    "$ref": "#/definitions/sherlock.AppVersionV3"
                },
                "appVersionReference": {
                    "type": "string"
                },
                "appVersionResolver": {
                    "description": "// When creating, will default to automatically reference any provided app version fields",
                    "type": "string",
                    "enum": [
                        "branch",
                        "commit",
                        "exact",
                        "follow",
                        "none"
                    ]
                },
                "chart": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "chartInfo": {
                    "$ref": "#/definitions/sherlock.ChartV3"
                },
                "chartVersionExact": {
                    "type": "string"
                },
                "chartVersionFollowChartRelease": {
                    "type": "string"
                },
                "chartVersionInfo": {
                    "$ref": "#/definitions/sherlock.ChartVersionV3"
                },
                "chartVersionReference": {
                    "type": "string"
                },
                "chartVersionResolver": {
                    "description": "When creating, will default to automatically reference any provided chart version",
                    "type": "string",
                    "enum": [
                        "latest",
                        "exact",
                        "follow"
                    ]
                },
                "ciIdentifier": {
                    "$ref": "#/definitions/sherlock.CiIdentifierV3"
                },
                "cluster": {
                    "description": "When creating, will default the environment's default cluster, if provided. Either this or environment must be provided.",
                    "type": "string"
                },
                "clusterInfo": {
                    "$ref": "#/definitions/sherlock.ClusterV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "destinationType": {
                    "description": "Calculated field",
                    "type": "string"
                },
                "environment": {
                    "description": "Either this or cluster must be provided.",
                    "type": "string"
                },
                "environmentInfo": {
                    "$ref": "#/definitions/sherlock.EnvironmentV3"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "helmfileRefEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "id": {
                    "type": "integer"
                },
                "includedInBulkChangesets": {
                    "type": "boolean",
                    "default": true
                },
                "name": {
                    "description": "When creating, will be calculated if left empty",
                    "type": "string"
                },
                "namespace": {
                    "description": "When creating, will default to the environment's default namespace, if provided",
                    "type": "string"
                },
                "pagerdutyIntegration": {
                    "type": "string"
                },
                "pagerdutyIntegrationInfo": {
                    "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3"
                },
                "port": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "integer"
                },
                "protocol": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "string"
                },
                "resolvedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "subdomain": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.ChartReleaseV3Create": {
            "type": "object",
            "properties": {
                "appVersionBranch": {
                    "description": "When creating, will default to the app's mainline branch if no other app version info is present",
                    "type": "string"
                },
                "appVersionCommit": {
                    "type": "string"
                },
                "appVersionExact": {
                    "type": "string"
                },
                "appVersionFollowChartRelease": {
                    "type": "string"
                },
                "appVersionResolver": {
                    "description": "// When creating, will default to automatically reference any provided app version fields",
                    "type": "string",
                    "enum": [
                        "branch",
                        "commit",
                        "exact",
                        "follow",
                        "none"
                    ]
                },
                "chart": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "chartVersionExact": {
                    "type": "string"
                },
                "chartVersionFollowChartRelease": {
                    "type": "string"
                },
                "chartVersionResolver": {
                    "description": "When creating, will default to automatically reference any provided chart version",
                    "type": "string",
                    "enum": [
                        "latest",
                        "exact",
                        "follow"
                    ]
                },
                "cluster": {
                    "description": "When creating, will default the environment's default cluster, if provided. Either this or environment must be provided.",
                    "type": "string"
                },
                "environment": {
                    "description": "Either this or cluster must be provided.",
                    "type": "string"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "helmfileRefEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "includedInBulkChangesets": {
                    "type": "boolean",
                    "default": true
                },
                "name": {
                    "description": "When creating, will be calculated if left empty",
                    "type": "string"
                },
                "namespace": {
                    "description": "When creating, will default to the environment's default namespace, if provided",
                    "type": "string"
                },
                "pagerdutyIntegration": {
                    "type": "string"
                },
                "port": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "integer"
                },
                "protocol": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "string"
                },
                "subdomain": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "string"
                }
            }
        },
        "sherlock.ChartReleaseV3Edit": {
            "type": "object",
            "properties": {
                "includedInBulkChangesets": {
                    "type": "boolean",
                    "default": true
                },
                "pagerdutyIntegration": {
                    "type": "string"
                },
                "port": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "integer"
                },
                "protocol": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "string"
                },
                "subdomain": {
                    "description": "When creating, will use the chart's default if left empty",
                    "type": "string"
                }
            }
        },
        "sherlock.ChartV3": {
            "type": "object",
            "properties": {
                "appImageGitMainBranch": {
                    "type": "string"
                },
                "appImageGitRepo": {
                    "type": "string"
                },
                "chartExposesEndpoint": {
                    "description": "Indicates if the default subdomain, protocol, and port fields are relevant for this chart",
                    "type": "boolean",
                    "default": false
                },
                "chartRepo": {
                    "type": "string",
                    "default": "terra-helm"
                },
                "ciIdentifier": {
                    "$ref": "#/definitions/sherlock.CiIdentifierV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "defaultPort": {
                    "type": "integer",
                    "default": 443
                },
                "defaultProtocol": {
                    "type": "string",
                    "default": "https"
                },
                "defaultSubdomain": {
                    "description": "When creating, will default to the name of the chart",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "pactParticipant": {
                    "type": "boolean",
                    "default": false
                },
                "playbookURL": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.ChartV3Create": {
            "type": "object",
            "properties": {
                "appImageGitMainBranch": {
                    "type": "string"
                },
                "appImageGitRepo": {
                    "type": "string"
                },
                "chartExposesEndpoint": {
                    "description": "Indicates if the default subdomain, protocol, and port fields are relevant for this chart",
                    "type": "boolean",
                    "default": false
                },
                "chartRepo": {
                    "type": "string",
                    "default": "terra-helm"
                },
                "defaultPort": {
                    "type": "integer",
                    "default": 443
                },
                "defaultProtocol": {
                    "type": "string",
                    "default": "https"
                },
                "defaultSubdomain": {
                    "description": "When creating, will default to the name of the chart",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "pactParticipant": {
                    "type": "boolean",
                    "default": false
                },
                "playbookURL": {
                    "type": "string"
                }
            }
        },
        "sherlock.ChartV3Edit": {
            "type": "object",
            "properties": {
                "appImageGitMainBranch": {
                    "type": "string"
                },
                "appImageGitRepo": {
                    "type": "string"
                },
                "chartExposesEndpoint": {
                    "description": "Indicates if the default subdomain, protocol, and port fields are relevant for this chart",
                    "type": "boolean",
                    "default": false
                },
                "chartRepo": {
                    "type": "string",
                    "default": "terra-helm"
                },
                "defaultPort": {
                    "type": "integer",
                    "default": 443
                },
                "defaultProtocol": {
                    "type": "string",
                    "default": "https"
                },
                "defaultSubdomain": {
                    "description": "When creating, will default to the name of the chart",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "pactParticipant": {
                    "type": "boolean",
                    "default": false
                },
                "playbookURL": {
                    "type": "string"
                }
            }
        },
        "sherlock.ChartVersionV3": {
            "type": "object",
            "properties": {
                "authoredBy": {
                    "type": "string"
                },
                "authoredByInfo": {
                    "$ref": "#/definitions/sherlock.UserV3"
                },
                "chart": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "chartInfo": {
                    "$ref": "#/definitions/sherlock.ChartV3"
                },
                "chartVersion": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "ciIdentifier": {
                    "$ref": "#/definitions/sherlock.CiIdentifierV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "Generally the Git commit message",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parentChartVersion": {
                    "type": "string"
                },
                "parentChartVersionInfo": {
                    "type": "object"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.ChartVersionV3ChangelogResponse": {
            "type": "object",
            "properties": {
                "changelog": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.ChartVersionV3"
                    }
                },
                "complete": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.ChartVersionV3Create": {
            "type": "object",
            "properties": {
                "chart": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "chartVersion": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "description": {
                    "description": "Generally the Git commit message",
                    "type": "string"
                },
                "parentChartVersion": {
                    "type": "string"
                }
            }
        },
        "sherlock.ChartVersionV3Edit": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Generally the Git commit message",
                    "type": "string"
                }
            }
        },
        "sherlock.CiIdentifierV3": {
            "type": "object",
            "properties": {
                "ciRuns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.CiRunV3"
                    }
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer"
                },
                "resourceID": {
                    "type": "integer"
                },
                "resourceStatus": {
                    "description": "Available only when querying a CiIdentifier via a CiRun, indicates the status of the run for that resource",
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.CiRunV3": {
            "type": "object",
            "properties": {
                "argoWorkflowsName": {
                    "type": "string"
                },
                "argoWorkflowsNamespace": {
                    "type": "string"
                },
                "argoWorkflowsTemplate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "githubActionsAttemptNumber": {
                    "type": "integer"
                },
                "githubActionsOwner": {
                    "type": "string"
                },
                "githubActionsRepo": {
                    "type": "string"
                },
                "githubActionsRunID": {
                    "type": "integer"
                },
                "githubActionsWorkflowPath": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notifySlackChannelsUponFailure": {
                    "description": "Slack channels to notify if this CiRun fails. This field is always appended to when mutated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notifySlackChannelsUponRetry": {
                    "description": "Slack channels to notify if this CiRun is retried. This field is always appended to when mutated. It will de-dupe with the other notify fields.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notifySlackChannelsUponSuccess": {
                    "description": "Slack channels to notify if this CiRun succeeds. This field is always appended to when mutated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notifySlackCustomIcon": {
                    "description": "Icon to use for success or failure Slack notifications. Can be given either as a URL to an image or as a Slack emoji (using colon shortcodes, like :smiley:).\nAn empty string is ignored to facilitate calling from GitHub Actions (where it's easier to pass an empty string than not send the field at all).",
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "relatedResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.CiIdentifierV3"
                    }
                },
                "resourceStatus": {
                    "description": "Available only when querying a CiRun via a CiIdentifier, indicates the status of the run for that resource",
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "terminalAt": {
                    "type": "string"
                },
                "terminationHooksDispatchedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.CiRunV3Upsert": {
            "type": "object",
            "properties": {
                "appVersions": {
                    "description": "Always appends; will eliminate duplicates.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "argoWorkflowsName": {
                    "type": "string"
                },
                "argoWorkflowsNamespace": {
                    "type": "string"
                },
                "argoWorkflowsTemplate": {
                    "type": "string"
                },
                "changesets": {
                    "description": "Always appends; will eliminate duplicates. Spreads to associated chart releases, environments, and clusters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chartReleaseStatuses": {
                    "description": "Keys treated like chartReleases. Values set resource-specific statuses for chart releases and associated changesets, new app versions, and new chart versions.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "chartReleases": {
                    "description": "Always appends; will eliminate duplicates. Spreads to associated environments and clusters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chartVersions": {
                    "description": "Always appends; will eliminate duplicates.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "charts": {
                    "description": "Always appends; will eliminate duplicates.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clusters": {
                    "description": "Always appends; will eliminate duplicates. Spreads to contained chart releases and their environments.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "environments": {
                    "description": "Always appends; will eliminate duplicates. Spreads to contained chart releases and their clusters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "githubActionsAttemptNumber": {
                    "type": "integer"
                },
                "githubActionsOwner": {
                    "type": "string"
                },
                "githubActionsRepo": {
                    "type": "string"
                },
                "githubActionsRunID": {
                    "type": "integer"
                },
                "githubActionsWorkflowPath": {
                    "type": "string"
                },
                "ignoreBadSelectors": {
                    "description": "If set to true, errors handling selectors for relations should be ignored. Normally, passing an unknown chart, cluster, etc. will abort the request, but they won't if this is true.",
                    "type": "boolean",
                    "default": false
                },
                "notifySlackChannelsUponFailure": {
                    "description": "Slack channels to notify if this CiRun fails. This field is always appended to when mutated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notifySlackChannelsUponRetry": {
                    "description": "Slack channels to notify if this CiRun is retried. This field is always appended to when mutated. It will de-dupe with the other notify fields.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notifySlackChannelsUponSuccess": {
                    "description": "Slack channels to notify if this CiRun succeeds. This field is always appended to when mutated.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notifySlackCustomIcon": {
                    "description": "Icon to use for success or failure Slack notifications. Can be given either as a URL to an image or as a Slack emoji (using colon shortcodes, like :smiley:).\nAn empty string is ignored to facilitate calling from GitHub Actions (where it's easier to pass an empty string than not send the field at all).",
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "relateToChangesetNewVersions": {
                    "description": "Makes entries in the changesets field also spread to new app versions and chart versions deployed by the changeset. 'when-static' is the default and does this spreading only when the chart release is in a static environment.",
                    "type": "string",
                    "default": "when-static",
                    "enum": [
                        "always",
                        "when-static",
                        "never"
                    ]
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "terminalAt": {
                    "type": "string"
                }
            }
        },
        "sherlock.ClusterV3": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "azureSubscription": {
                    "description": "Required when creating if provider is 'azure'",
                    "type": "string"
                },
                "base": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "ciIdentifier": {
                    "$ref": "#/definitions/sherlock.CiIdentifierV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "googleProject": {
                    "description": "Required when creating if provider is 'google'",
                    "type": "string"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string",
                    "default": "us-central1-a"
                },
                "name": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "provider": {
                    "type": "string",
                    "default": "google",
                    "enum": [
                        "google",
                        "azure"
                    ]
                },
                "requiresSuitability": {
                    "type": "boolean",
                    "default": false
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.ClusterV3Create": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "azureSubscription": {
                    "description": "Required when creating if provider is 'azure'",
                    "type": "string"
                },
                "base": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "googleProject": {
                    "description": "Required when creating if provider is 'google'",
                    "type": "string"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "location": {
                    "type": "string",
                    "default": "us-central1-a"
                },
                "name": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "provider": {
                    "type": "string",
                    "default": "google",
                    "enum": [
                        "google",
                        "azure"
                    ]
                },
                "requiresSuitability": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "sherlock.ClusterV3Edit": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "base": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "requiresSuitability": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "sherlock.DatabaseInstanceV3": {
            "type": "object",
            "properties": {
                "chartRelease": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "chartReleaseInfo": {
                    "$ref": "#/definitions/sherlock.ChartReleaseV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "defaultDatabase": {
                    "description": "When creating, defaults to the chart name",
                    "type": "string"
                },
                "googleProject": {
                    "description": "Required if platform is 'google'",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instanceName": {
                    "description": "Required if platform is 'google' or 'azure'",
                    "type": "string"
                },
                "platform": {
                    "description": "'google', 'azure', or default 'kubernetes'",
                    "type": "string",
                    "default": "kubernetes"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.DatabaseInstanceV3Create": {
            "type": "object",
            "properties": {
                "chartRelease": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "defaultDatabase": {
                    "description": "When creating, defaults to the chart name",
                    "type": "string"
                },
                "googleProject": {
                    "description": "Required if platform is 'google'",
                    "type": "string"
                },
                "instanceName": {
                    "description": "Required if platform is 'google' or 'azure'",
                    "type": "string"
                },
                "platform": {
                    "description": "'google', 'azure', or default 'kubernetes'",
                    "type": "string",
                    "default": "kubernetes"
                }
            }
        },
        "sherlock.DatabaseInstanceV3Edit": {
            "type": "object",
            "properties": {
                "defaultDatabase": {
                    "description": "When creating, defaults to the chart name",
                    "type": "string"
                },
                "googleProject": {
                    "description": "Required if platform is 'google'",
                    "type": "string"
                },
                "instanceName": {
                    "description": "Required if platform is 'google' or 'azure'",
                    "type": "string"
                },
                "platform": {
                    "description": "'google', 'azure', or default 'kubernetes'",
                    "type": "string",
                    "default": "kubernetes"
                }
            }
        },
        "sherlock.EnvironmentV3": {
            "type": "object",
            "properties": {
                "autoPopulateChartReleases": {
                    "description": "If true when creating, dynamic environments copy from template and template environments get the honeycomb chart",
                    "type": "boolean",
                    "default": true
                },
                "base": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "baseDomain": {
                    "type": "string",
                    "default": "bee.envs-terra.bio"
                },
                "ciIdentifier": {
                    "$ref": "#/definitions/sherlock.CiIdentifierV3"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "defaultCluster": {
                    "type": "string"
                },
                "defaultClusterInfo": {
                    "$ref": "#/definitions/sherlock.ClusterV3"
                },
                "defaultNamespace": {
                    "description": "When creating, will be calculated if left empty",
                    "type": "string"
                },
                "deleteAfter": {
                    "description": "If set, the BEE will be automatically deleted after this time. Can be set to \"\" or Go's zero time value to clear the field.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "id": {
                    "type": "integer"
                },
                "lifecycle": {
                    "type": "string",
                    "default": "dynamic"
                },
                "name": {
                    "description": "When creating, will be calculated if dynamic, required otherwise",
                    "type": "string"
                },
                "namePrefixesDomain": {
                    "type": "boolean",
                    "default": true
                },
                "offline": {
                    "description": "Applicable for BEEs only, whether Thelma should render the BEE as \"offline\" zero replicas (this field is a target state, not a status)",
                    "type": "boolean",
                    "default": false
                },
                "offlineScheduleBeginEnabled": {
                    "description": "When enabled, the BEE will be slated to go offline around the begin time each day",
                    "type": "boolean"
                },
                "offlineScheduleBeginTime": {
                    "description": "Stored with timezone to determine day of the week",
                    "type": "string",
                    "format": "date-time"
                },
                "offlineScheduleEndEnabled": {
                    "description": "When enabled, the BEE will be slated to come online around the end time each weekday (each day if weekends enabled)",
                    "type": "boolean"
                },
                "offlineScheduleEndTime": {
                    "description": "Stored with timezone to determine day of the week",
                    "type": "string",
                    "format": "date-time"
                },
                "offlineScheduleEndWeekends": {
                    "type": "boolean"
                },
                "owner": {
                    "description": "When creating, will default to you",
                    "type": "string"
                },
                "ownerInfo": {
                    "$ref": "#/definitions/sherlock.UserV3"
                },
                "pactIdentifier": {
                    "type": "string"
                },
                "pagerdutyIntegration": {
                    "type": "string"
                },
                "pagerdutyIntegrationInfo": {
                    "$ref": "#/definitions/sherlock.PagerdutyIntegrationV3"
                },
                "preventDeletion": {
                    "description": "Used to protect specific BEEs from deletion (thelma checks this field)",
                    "type": "boolean",
                    "default": false
                },
                "requiresSuitability": {
                    "type": "boolean",
                    "default": false
                },
                "templateEnvironment": {
                    "description": "Required for dynamic environments",
                    "type": "string"
                },
                "templateEnvironmentInfo": {
                    "type": "object"
                },
                "uniqueResourcePrefix": {
                    "description": "When creating, will be calculated if left empty",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "valuesName": {
                    "description": "When creating, defaults to template name or environment name",
                    "type": "string"
                }
            }
        },
        "sherlock.EnvironmentV3Create": {
            "type": "object",
            "properties": {
                "autoPopulateChartReleases": {
                    "description": "If true when creating, dynamic environments copy from template and template environments get the honeycomb chart",
                    "type": "boolean",
                    "default": true
                },
                "base": {
                    "description": "Required when creating",
                    "type": "string"
                },
                "baseDomain": {
                    "type": "string",
                    "default": "bee.envs-terra.bio"
                },
                "defaultCluster": {
                    "type": "string"
                },
                "defaultNamespace": {
                    "description": "When creating, will be calculated if left empty",
                    "type": "string"
                },
                "deleteAfter": {
                    "description": "If set, the BEE will be automatically deleted after this time. Can be set to \"\" or Go's zero time value to clear the field.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "lifecycle": {
                    "type": "string",
                    "default": "dynamic"
                },
                "name": {
                    "description": "When creating, will be calculated if dynamic, required otherwise",
                    "type": "string"
                },
                "namePrefixesDomain": {
                    "type": "boolean",
                    "default": true
                },
                "offline": {
                    "description": "Applicable for BEEs only, whether Thelma should render the BEE as \"offline\" zero replicas (this field is a target state, not a status)",
                    "type": "boolean",
                    "default": false
                },
                "offlineScheduleBeginEnabled": {
                    "description": "When enabled, the BEE will be slated to go offline around the begin time each day",
                    "type": "boolean"
                },
                "offlineScheduleBeginTime": {
                    "description": "Stored with timezone to determine day of the week",
                    "type": "string",
                    "format": "date-time"
                },
                "offlineScheduleEndEnabled": {
                    "description": "When enabled, the BEE will be slated to come online around the end time each weekday (each day if weekends enabled)",
                    "type": "boolean"
                },
                "offlineScheduleEndTime": {
                    "description": "Stored with timezone to determine day of the week",
                    "type": "string",
                    "format": "date-time"
                },
                "offlineScheduleEndWeekends": {
                    "type": "boolean"
                },
                "owner": {
                    "description": "When creating, will default to you",
                    "type": "string"
                },
                "pactIdentifier": {
                    "type": "string"
                },
                "pagerdutyIntegration": {
                    "type": "string"
                },
                "preventDeletion": {
                    "description": "Used to protect specific BEEs from deletion (thelma checks this field)",
                    "type": "boolean",
                    "default": false
                },
                "requiresSuitability": {
                    "type": "boolean",
                    "default": false
                },
                "templateEnvironment": {
                    "description": "Required for dynamic environments",
                    "type": "string"
                },
                "uniqueResourcePrefix": {
                    "description": "When creating, will be calculated if left empty",
                    "type": "string"
                },
                "valuesName": {
                    "description": "When creating, defaults to template name or environment name",
                    "type": "string"
                }
            }
        },
        "sherlock.EnvironmentV3Edit": {
            "type": "object",
            "properties": {
                "baseDomain": {
                    "type": "string",
                    "default": "bee.envs-terra.bio"
                },
                "defaultCluster": {
                    "type": "string"
                },
                "deleteAfter": {
                    "description": "If set, the BEE will be automatically deleted after this time. Can be set to \"\" or Go's zero time value to clear the field.",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "helmfileRef": {
                    "type": "string",
                    "default": "HEAD"
                },
                "namePrefixesDomain": {
                    "type": "boolean",
                    "default": true
                },
                "offline": {
                    "description": "Applicable for BEEs only, whether Thelma should render the BEE as \"offline\" zero replicas (this field is a target state, not a status)",
                    "type": "boolean",
                    "default": false
                },
                "offlineScheduleBeginEnabled": {
                    "description": "When enabled, the BEE will be slated to go offline around the begin time each day",
                    "type": "boolean"
                },
                "offlineScheduleBeginTime": {
                    "description": "Stored with timezone to determine day of the week",
                    "type": "string",
                    "format": "date-time"
                },
                "offlineScheduleEndEnabled": {
                    "description": "When enabled, the BEE will be slated to come online around the end time each weekday (each day if weekends enabled)",
                    "type": "boolean"
                },
                "offlineScheduleEndTime": {
                    "description": "Stored with timezone to determine day of the week",
                    "type": "string",
                    "format": "date-time"
                },
                "offlineScheduleEndWeekends": {
                    "type": "boolean"
                },
                "owner": {
                    "description": "When creating, will default to you",
                    "type": "string"
                },
                "pactIdentifier": {
                    "type": "string"
                },
                "pagerdutyIntegration": {
                    "type": "string"
                },
                "preventDeletion": {
                    "description": "Used to protect specific BEEs from deletion (thelma checks this field)",
                    "type": "boolean",
                    "default": false
                },
                "requiresSuitability": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "sherlock.GitCommitV3": {
            "type": "object",
            "properties": {
                "committedAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "gitBranch": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "gitRepo": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isMainBranch": {
                    "type": "boolean"
                },
                "secSincePrev": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.GitCommitV3Upsert": {
            "type": "object",
            "properties": {
                "committedAt": {
                    "type": "string"
                },
                "gitBranch": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "gitRepo": {
                    "type": "string"
                },
                "isMainBranch": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.GithubActionsDeployHookTestRunRequest": {
            "type": "object",
            "properties": {
                "execute": {
                    "description": "Required, whether to fully run the GHA",
                    "type": "boolean"
                }
            }
        },
        "sherlock.GithubActionsDeployHookTestRunResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "sherlock.GithubActionsDeployHookV3": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "githubActionsDefaultRef": {
                    "type": "string"
                },
                "githubActionsOwner": {
                    "type": "string"
                },
                "githubActionsRefBehavior": {
                    "description": "This field determines what git ref the workflow will be run on. The default of always-use-default-ref always uses the default ref; use-app-version-as-ref will use the app version (when available) as the ref, useful when versions are always commit hashes or tags; use-app-version-commit-as-ref will use the app version's commit (when available) as the ref, useful when the repo is configured to fully report app versions to Sherlock.",
                    "type": "string",
                    "default": "always-use-default-ref",
                    "enum": [
                        "always-use-default-ref",
                        "use-app-version-as-ref",
                        "use-app-version-commit-as-ref"
                    ]
                },
                "githubActionsRepo": {
                    "type": "string"
                },
                "githubActionsWorkflowInputs": {
                    "description": "These workflow inputs will be passed statically as-is to GitHub's workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event) as the ` + "`" + `inputs` + "`" + ` parameter object.",
                    "type": "object"
                },
                "githubActionsWorkflowPath": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "onChartRelease": {
                    "type": "string"
                },
                "onEnvironment": {
                    "type": "string"
                },
                "onFailure": {
                    "type": "boolean"
                },
                "onSuccess": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.GithubActionsDeployHookV3Create": {
            "type": "object",
            "properties": {
                "githubActionsDefaultRef": {
                    "type": "string"
                },
                "githubActionsOwner": {
                    "type": "string"
                },
                "githubActionsRefBehavior": {
                    "description": "This field determines what git ref the workflow will be run on. The default of always-use-default-ref always uses the default ref; use-app-version-as-ref will use the app version (when available) as the ref, useful when versions are always commit hashes or tags; use-app-version-commit-as-ref will use the app version's commit (when available) as the ref, useful when the repo is configured to fully report app versions to Sherlock.",
                    "type": "string",
                    "default": "always-use-default-ref",
                    "enum": [
                        "always-use-default-ref",
                        "use-app-version-as-ref",
                        "use-app-version-commit-as-ref"
                    ]
                },
                "githubActionsRepo": {
                    "type": "string"
                },
                "githubActionsWorkflowInputs": {
                    "description": "These workflow inputs will be passed statically as-is to GitHub's workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event) as the ` + "`" + `inputs` + "`" + ` parameter object.",
                    "type": "object"
                },
                "githubActionsWorkflowPath": {
                    "type": "string"
                },
                "onChartRelease": {
                    "type": "string"
                },
                "onEnvironment": {
                    "type": "string"
                },
                "onFailure": {
                    "type": "boolean"
                },
                "onSuccess": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.GithubActionsDeployHookV3Edit": {
            "type": "object",
            "properties": {
                "githubActionsDefaultRef": {
                    "type": "string"
                },
                "githubActionsOwner": {
                    "type": "string"
                },
                "githubActionsRefBehavior": {
                    "description": "This field determines what git ref the workflow will be run on. The default of always-use-default-ref always uses the default ref; use-app-version-as-ref will use the app version (when available) as the ref, useful when versions are always commit hashes or tags; use-app-version-commit-as-ref will use the app version's commit (when available) as the ref, useful when the repo is configured to fully report app versions to Sherlock.",
                    "type": "string",
                    "default": "always-use-default-ref",
                    "enum": [
                        "always-use-default-ref",
                        "use-app-version-as-ref",
                        "use-app-version-commit-as-ref"
                    ]
                },
                "githubActionsRepo": {
                    "type": "string"
                },
                "githubActionsWorkflowInputs": {
                    "description": "These workflow inputs will be passed statically as-is to GitHub's workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event) as the ` + "`" + `inputs` + "`" + ` parameter object.",
                    "type": "object"
                },
                "githubActionsWorkflowPath": {
                    "type": "string"
                },
                "onFailure": {
                    "type": "boolean"
                },
                "onSuccess": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.GithubActionsJobV3": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "githubActionsAttemptNumber": {
                    "type": "integer"
                },
                "githubActionsJobID": {
                    "type": "integer"
                },
                "githubActionsOwner": {
                    "type": "string"
                },
                "githubActionsRepo": {
                    "type": "string"
                },
                "githubActionsRunID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jobCreatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "jobStartedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "jobTerminalAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.GithubActionsJobV3Create": {
            "type": "object",
            "properties": {
                "githubActionsAttemptNumber": {
                    "type": "integer"
                },
                "githubActionsJobID": {
                    "type": "integer"
                },
                "githubActionsOwner": {
                    "type": "string"
                },
                "githubActionsRepo": {
                    "type": "string"
                },
                "githubActionsRunID": {
                    "type": "integer"
                },
                "jobCreatedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "jobStartedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "jobTerminalAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "sherlock.IncidentV3": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "remediatedAt": {
                    "type": "string"
                },
                "reviewCompletedAt": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "ticket": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.IncidentV3Create": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "remediatedAt": {
                    "type": "string"
                },
                "reviewCompletedAt": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "ticket": {
                    "type": "string"
                }
            }
        },
        "sherlock.IncidentV3Edit": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "remediatedAt": {
                    "type": "string"
                },
                "reviewCompletedAt": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "ticket": {
                    "type": "string"
                }
            }
        },
        "sherlock.PagerdutyIntegrationV3": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pagerdutyID": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.PagerdutyIntegrationV3Create": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pagerdutyID": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "sherlock.PagerdutyIntegrationV3Edit": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "sherlock.RoleAssignmentV3": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "roleInfo": {
                    "type": "object"
                },
                "suspended": {
                    "type": "boolean"
                },
                "userInfo": {
                    "type": "object"
                }
            }
        },
        "sherlock.RoleAssignmentV3Edit": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "suspended": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.RoleV3": {
            "type": "object",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.RoleAssignmentV3"
                    }
                },
                "canBeGlassBrokenByRole": {
                    "type": "integer"
                },
                "canBeGlassBrokenByRoleInfo": {
                    "type": "object"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "defaultGlassBreakDuration": {
                    "type": "string"
                },
                "grantsDevAzureGroup": {
                    "type": "string"
                },
                "grantsDevFirecloudGroup": {
                    "type": "string"
                },
                "grantsSherlockSuperAdmin": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "suspendNonSuitableUsers": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.RoleV3Edit": {
            "type": "object",
            "properties": {
                "canBeGlassBrokenByRole": {
                    "type": "integer"
                },
                "defaultGlassBreakDuration": {
                    "type": "string"
                },
                "grantsDevAzureGroup": {
                    "type": "string"
                },
                "grantsDevFirecloudGroup": {
                    "type": "string"
                },
                "grantsSherlockSuperAdmin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "suspendNonSuitableUsers": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.SlackDeployHookTestRunRequest": {
            "type": "object",
            "properties": {
                "execute": {
                    "description": "Required, whether to actually send the Slack message",
                    "type": "boolean"
                }
            }
        },
        "sherlock.SlackDeployHookTestRunResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "sherlock.SlackDeployHookV3": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer"
                },
                "mentionPeople": {
                    "type": "boolean"
                },
                "onChartRelease": {
                    "type": "string"
                },
                "onEnvironment": {
                    "type": "string"
                },
                "onFailure": {
                    "type": "boolean"
                },
                "onSuccess": {
                    "type": "boolean"
                },
                "slackChannel": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.SlackDeployHookV3Create": {
            "type": "object",
            "properties": {
                "mentionPeople": {
                    "type": "boolean"
                },
                "onChartRelease": {
                    "type": "string"
                },
                "onEnvironment": {
                    "type": "string"
                },
                "onFailure": {
                    "type": "boolean"
                },
                "onSuccess": {
                    "type": "boolean"
                },
                "slackChannel": {
                    "type": "string"
                }
            }
        },
        "sherlock.SlackDeployHookV3Edit": {
            "type": "object",
            "properties": {
                "mentionPeople": {
                    "type": "boolean"
                },
                "onFailure": {
                    "type": "boolean"
                },
                "onSuccess": {
                    "type": "boolean"
                },
                "slackChannel": {
                    "type": "string"
                }
            }
        },
        "sherlock.UserV3": {
            "type": "object",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sherlock.RoleAssignmentV3"
                    }
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string"
                },
                "githubID": {
                    "type": "string"
                },
                "githubUsername": {
                    "type": "string"
                },
                "googleID": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameFrom": {
                    "type": "string",
                    "enum": [
                        "sherlock",
                        "github",
                        "slack"
                    ]
                },
                "nameInferredFromGithub": {
                    "description": "Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.\nWill be set to true if the user account has no name and a GitHub account is linked.",
                    "type": "boolean"
                },
                "slackID": {
                    "type": "string"
                },
                "slackUsername": {
                    "type": "string"
                },
                "suitabilityDescription": {
                    "description": "Available only in responses; describes the user's production-suitability",
                    "type": "string"
                },
                "suitable": {
                    "description": "Available only in responses; indicates whether the user is production-suitable",
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "sherlock.UserV3Upsert": {
            "type": "object",
            "properties": {
                "githubAccessToken": {
                    "description": "An access token for the GitHub account to associate with the calling user. The access token isn't stored.\nThe design here ensures that an association is only built when someone controls both accounts (Google via\nIAP and GitHub via this access token).",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nameFrom": {
                    "type": "string",
                    "enum": [
                        "sherlock",
                        "github",
                        "slack"
                    ]
                },
                "nameInferredFromGithub": {
                    "description": "Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.\nWill be set to true if the user account has no name and a GitHub account is linked.",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "development",
	Host:             "sherlock.dsp-devops-prod.broadinstitute.org",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "Sherlock",
	Description:      "The Data Science Platform's source-of-truth service.\nNote: this API will try to load and return associations in responses, so clients won't need to make as many requests. This behavior isn't recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
