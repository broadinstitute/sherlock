consumes:
- application/json
definitions:
  environment.AutoDelete:
    properties:
      after:
        format: date-time
        type: string
      enabled:
        default: false
        type: boolean
    type: object
  errors.ErrorResponse:
    properties:
      message:
        type: string
      toBlame:
        type: string
      type:
        type: string
    type: object
  misc.ConnectionCheckResponse:
    properties:
      ok:
        description: Always true
        type: boolean
    type: object
  misc.StatusResponse:
    properties:
      ok:
        type: boolean
    type: object
  misc.VersionResponse:
    properties:
      buildInfo:
        additionalProperties:
          type: string
        type: object
      goVersion:
        type: string
      version:
        type: string
    type: object
  pagerduty.AlertSummary:
    properties:
      summary:
        type: string
    type: object
  pagerduty.SendAlertResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  sherlock.CiIdentifierV3:
    properties:
      ciRuns:
        items:
          $ref: '#/definitions/sherlock.CiRunV3'
        type: array
      createdAt:
        format: date-time
        type: string
      id:
        type: integer
      resourceID:
        type: integer
      resourceType:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.CiRunV3:
    properties:
      argoWorkflowsName:
        type: string
      argoWorkflowsNamespace:
        type: string
      argoWorkflowsTemplate:
        type: string
      createdAt:
        format: date-time
        type: string
      githubActionsAttemptNumber:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      githubActionsWorkflowPath:
        type: string
      id:
        type: integer
      platform:
        type: string
      relatedResources:
        items:
          $ref: '#/definitions/sherlock.CiIdentifierV3'
        type: array
      startedAt:
        type: string
      status:
        type: string
      terminalAt:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.CiRunV3Upsert:
    properties:
      appVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      argoWorkflowsName:
        type: string
      argoWorkflowsNamespace:
        type: string
      argoWorkflowsTemplate:
        type: string
      changesets:
        description: Always appends; will eliminate duplicates. Spreads to associated
          chart releases, environments, and clusters.
        items:
          type: string
        type: array
      chartReleases:
        description: Always appends; will eliminate duplicates. Spreads to associated
          environments and clusters.
        items:
          type: string
        type: array
      chartVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      charts:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      clusters:
        description: Always appends; will eliminate duplicates. Spreads to contained
          chart releases and their environments.
        items:
          type: string
        type: array
      environments:
        description: Always appends; will eliminate duplicates. Spreads to contained
          chart releases and their clusters.
        items:
          type: string
        type: array
      githubActionsAttemptNumber:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      githubActionsWorkflowPath:
        type: string
      ignoreBadSelectors:
        default: false
        description: If set to true, errors handling selectors for relations should
          be ignored. Normally, passing an unknown chart, cluster, etc. will abort
          the request, but they won't if this is true.
        type: boolean
      platform:
        type: string
      relateToChangesetNewVersions:
        default: when-static
        description: Makes entries in the changesets field also spread to new app
          versions and chart versions deployed by the changeset. 'when-static' is
          the default and does this spreading only when the chart release is in a
          static environment.
        enum:
        - always
        - when-static
        - never
        type: string
      startedAt:
        type: string
      status:
        type: string
      terminalAt:
        type: string
    type: object
  sherlock.GithubActionsDeployHookV3:
    properties:
      createdAt:
        format: date-time
        type: string
      githubActionsDefaultRef:
        type: string
      githubActionsOwner:
        type: string
      githubActionsRefBehavior:
        default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        type: string
      githubActionsRepo:
        type: string
      githubActionsWorkflowInputs:
        description: These workflow inputs will be passed statically as-is to GitHub's
          workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event)
          as the `inputs` parameter object.
        type: object
      githubActionsWorkflowPath:
        type: string
      id:
        type: integer
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.GithubActionsDeployHookV3Create:
    properties:
      githubActionsDefaultRef:
        type: string
      githubActionsOwner:
        type: string
      githubActionsRefBehavior:
        default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        type: string
      githubActionsRepo:
        type: string
      githubActionsWorkflowInputs:
        description: These workflow inputs will be passed statically as-is to GitHub's
          workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event)
          as the `inputs` parameter object.
        type: object
      githubActionsWorkflowPath:
        type: string
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
    type: object
  sherlock.GithubActionsDeployHookV3Edit:
    properties:
      githubActionsDefaultRef:
        type: string
      githubActionsOwner:
        type: string
      githubActionsRefBehavior:
        default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        type: string
      githubActionsRepo:
        type: string
      githubActionsWorkflowInputs:
        description: These workflow inputs will be passed statically as-is to GitHub's
          workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event)
          as the `inputs` parameter object.
        type: object
      githubActionsWorkflowPath:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
    type: object
  sherlock.SlackDeployHookV3:
    properties:
      createdAt:
        format: date-time
        type: string
      id:
        type: integer
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      slackChannel:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.SlackDeployHookV3Create:
    properties:
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      slackChannel:
        type: string
    type: object
  sherlock.SlackDeployHookV3Edit:
    properties:
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      slackChannel:
        type: string
    type: object
  sherlock.UserV3:
    properties:
      createdAt:
        format: date-time
        type: string
      email:
        type: string
      githubID:
        type: string
      githubUsername:
        type: string
      googleID:
        type: string
      id:
        type: integer
      name:
        type: string
      nameInferredFromGithub:
        description: |-
          Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.
          Will be set to true if the user account has no name and a GitHub account is linked.
        type: boolean
      suitabilityDescription:
        description: Available only in responses; describes the user's production-suitability
        type: string
      suitable:
        description: Available only in responses; indicates whether the user is production-suitable
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.UserV3Upsert:
    properties:
      githubAccessToken:
        description: |-
          An access token for the GitHub account to associate with the calling user. The access token isn't stored.
          The design here ensures that an association is only built when someone controls both accounts (Google via
          IAP and GitHub via this access token).
        type: string
      name:
        type: string
      nameInferredFromGithub:
        description: |-
          Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.
          Will be set to true if the user account has no name and a GitHub account is linked.
        type: boolean
    type: object
  v2controllers.AppVersion:
    properties:
      appVersion:
        description: Required when creating
        type: string
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/v2controllers.Chart'
      ciIdentifier:
        $ref: '#/definitions/v2controllers.CiIdentifier'
      createdAt:
        format: date-time
        type: string
      description:
        description: Generally the Git commit message
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      id:
        type: integer
      parentAppVersion:
        type: string
      parentAppVersionInfo:
        type: object
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.Changeset:
    properties:
      appliedAt:
        format: date-time
        type: string
      chartRelease:
        type: string
      chartReleaseInfo:
        $ref: '#/definitions/v2controllers.ChartRelease'
      ciIdentifier:
        $ref: '#/definitions/v2controllers.CiIdentifier'
      createdAt:
        format: date-time
        type: string
      fromAppVersionBranch:
        type: string
      fromAppVersionCommit:
        type: string
      fromAppVersionExact:
        type: string
      fromAppVersionFollowChartRelease:
        type: string
      fromAppVersionReference:
        type: string
      fromAppVersionResolver:
        type: string
      fromChartVersionExact:
        type: string
      fromChartVersionFollowChartRelease:
        type: string
      fromChartVersionReference:
        type: string
      fromChartVersionResolver:
        type: string
      fromFirecloudDevelopRef:
        type: string
      fromHelmfileRef:
        type: string
      fromResolvedAt:
        format: date-time
        type: string
      id:
        type: integer
      newAppVersions:
        items:
          $ref: '#/definitions/v2controllers.AppVersion'
        type: array
      newChartVersions:
        items:
          $ref: '#/definitions/v2controllers.ChartVersion'
        type: array
      supersededAt:
        format: date-time
        type: string
      toAppVersionBranch:
        type: string
      toAppVersionCommit:
        type: string
      toAppVersionExact:
        type: string
      toAppVersionFollowChartRelease:
        type: string
      toAppVersionReference:
        type: string
      toAppVersionResolver:
        type: string
      toChartVersionExact:
        type: string
      toChartVersionFollowChartRelease:
        type: string
      toChartVersionReference:
        type: string
      toChartVersionResolver:
        type: string
      toFirecloudDevelopRef:
        type: string
      toHelmfileRef:
        type: string
      toResolvedAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.ChangesetPlanRequest:
    properties:
      chartReleases:
        items:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequestChartReleaseEntry'
        type: array
      environments:
        items:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequestEnvironmentEntry'
        type: array
      recreateChangesets:
        description: Useful for reverting a change, by recreating an earlier changeset
        items:
          type: integer
        type: array
    type: object
  v2controllers.ChangesetPlanRequestChartReleaseEntry:
    properties:
      chartRelease:
        type: string
      toAppVersionBranch:
        type: string
      toAppVersionCommit:
        type: string
      toAppVersionExact:
        type: string
      toAppVersionFollowChartRelease:
        type: string
      toAppVersionResolver:
        type: string
      toChartVersionExact:
        type: string
      toChartVersionFollowChartRelease:
        type: string
      toChartVersionResolver:
        type: string
      toFirecloudDevelopRef:
        type: string
      toHelmfileRef:
        type: string
      useExactVersionsFromOtherChartRelease:
        type: string
      useOthersFirecloudDevelopRef:
        description: If this is set, also copy the fc-dev ref from an OtherChartRelease
        type: boolean
    type: object
  v2controllers.ChangesetPlanRequestEnvironmentEntry:
    properties:
      environment:
        type: string
      excludeCharts:
        items:
          type: string
        type: array
      followVersionsFromOtherEnvironment:
        type: string
      includeCharts:
        description: If omitted, will include all chart releases that haven't opted
          out of bulk updates
        items:
          type: string
        type: array
      useExactVersionsFromOtherEnvironment:
        type: string
      useOthersFirecloudDevelopRef:
        description: If this is set, also copy the fc-dev ref from an OtherEnvironment
        type: boolean
    type: object
  v2controllers.Chart:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      ciIdentifier:
        $ref: '#/definitions/v2controllers.CiIdentifier'
      createdAt:
        format: date-time
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      description:
        type: string
      id:
        type: integer
      legacyConfigsEnabled:
        default: false
        description: Indicates whether a chart requires config rendering from firecloud-develop
        type: boolean
      name:
        description: Required when creating
        type: string
      playbookURL:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.ChartRelease:
    properties:
      appVersionBranch:
        description: When creating, will default to the app's mainline branch if no
          other app version info is present
        type: string
      appVersionCommit:
        type: string
      appVersionExact:
        type: string
      appVersionFollowChartRelease:
        type: string
      appVersionInfo:
        $ref: '#/definitions/v2controllers.AppVersion'
      appVersionReference:
        type: string
      appVersionResolver:
        description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - follow
        - none
        type: string
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/v2controllers.Chart'
      chartVersionExact:
        type: string
      chartVersionFollowChartRelease:
        type: string
      chartVersionInfo:
        $ref: '#/definitions/v2controllers.ChartVersion'
      chartVersionReference:
        type: string
      chartVersionResolver:
        description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        - follow
        type: string
      ciIdentifier:
        $ref: '#/definitions/v2controllers.CiIdentifier'
      cluster:
        description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        type: string
      clusterInfo:
        $ref: '#/definitions/v2controllers.Cluster'
      createdAt:
        format: date-time
        type: string
      destinationType:
        description: Calculated field
        type: string
      environment:
        description: Either this or cluster must be provided.
        type: string
      environmentInfo:
        $ref: '#/definitions/v2controllers.Environment'
      firecloudDevelopRef:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      id:
        type: integer
      includedInBulkChangesets:
        default: true
        type: boolean
      name:
        description: When creating, will be calculated if left empty
        type: string
      namespace:
        description: When creating, will default to the environment's default namespace,
          if provided
        type: string
      pagerdutyIntegration:
        type: string
      pagerdutyIntegrationInfo:
        $ref: '#/definitions/v2controllers.PagerdutyIntegration'
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.ChartVersion:
    properties:
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/v2controllers.Chart'
      chartVersion:
        description: Required when creating
        type: string
      ciIdentifier:
        $ref: '#/definitions/v2controllers.CiIdentifier'
      createdAt:
        format: date-time
        type: string
      description:
        description: Generally the Git commit message
        type: string
      id:
        type: integer
      parentChartVersion:
        type: string
      parentChartVersionInfo:
        type: object
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.CiIdentifier:
    properties:
      ciRuns:
        items:
          $ref: '#/definitions/v2controllers.CiRun'
        type: array
      createdAt:
        format: date-time
        type: string
      id:
        type: integer
      resourceID:
        type: integer
      resourceType:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.CiRun:
    properties:
      argoWorkflowsName:
        type: string
      argoWorkflowsNamespace:
        type: string
      argoWorkflowsTemplate:
        type: string
      createdAt:
        format: date-time
        type: string
      githubActionsAttemptNumber:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      githubActionsWorkflowPath:
        type: string
      id:
        type: integer
      platform:
        type: string
      relatedResources:
        items:
          $ref: '#/definitions/v2controllers.CiIdentifier'
        type: array
      startedAt:
        type: string
      status:
        type: string
      terminalAt:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.Cluster:
    description: The full set of Cluster fields that can be read or used for filtering
      queries
    properties:
      address:
        description: Required when creating
        type: string
      azureSubscription:
        description: Required when creating if providers is 'azure'
        type: string
      base:
        description: Required when creating
        type: string
      ciIdentifier:
        $ref: '#/definitions/v2controllers.CiIdentifier'
      createdAt:
        format: date-time
        type: string
      googleProject:
        description: Required when creating if provider is 'google'
        type: string
      helmfileRef:
        default: HEAD
        type: string
      id:
        type: integer
      location:
        default: us-central1-a
        type: string
      name:
        description: Required when creating
        type: string
      provider:
        default: google
        enum:
        - google
        - azure
        type: string
      requiresSuitability:
        default: false
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.CreatableAppVersion:
    properties:
      appVersion:
        description: Required when creating
        type: string
      chart:
        description: Required when creating
        type: string
      description:
        description: Generally the Git commit message
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      parentAppVersion:
        type: string
    type: object
  v2controllers.CreatableChart:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      description:
        type: string
      legacyConfigsEnabled:
        default: false
        description: Indicates whether a chart requires config rendering from firecloud-develop
        type: boolean
      name:
        description: Required when creating
        type: string
      playbookURL:
        type: string
    type: object
  v2controllers.CreatableChartRelease:
    properties:
      appVersionBranch:
        description: When creating, will default to the app's mainline branch if no
          other app version info is present
        type: string
      appVersionCommit:
        type: string
      appVersionExact:
        type: string
      appVersionFollowChartRelease:
        type: string
      appVersionResolver:
        description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - follow
        - none
        type: string
      chart:
        description: Required when creating
        type: string
      chartVersionExact:
        type: string
      chartVersionFollowChartRelease:
        type: string
      chartVersionResolver:
        description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        - follow
        type: string
      cluster:
        description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        type: string
      environment:
        description: Either this or cluster must be provided.
        type: string
      firecloudDevelopRef:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      includedInBulkChangesets:
        default: true
        type: boolean
      name:
        description: When creating, will be calculated if left empty
        type: string
      namespace:
        description: When creating, will default to the environment's default namespace,
          if provided
        type: string
      pagerdutyIntegration:
        type: string
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
    type: object
  v2controllers.CreatableChartVersion:
    properties:
      chart:
        description: Required when creating
        type: string
      chartVersion:
        description: Required when creating
        type: string
      description:
        description: Generally the Git commit message
        type: string
      parentChartVersion:
        type: string
    type: object
  v2controllers.CreatableCiIdentifier:
    properties:
      ciRuns:
        description: Always appends; will eliminate duplicates
        items:
          type: string
        type: array
      resourceID:
        type: integer
      resourceType:
        type: string
    type: object
  v2controllers.CreatableCiRun:
    properties:
      appVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      argoWorkflowsName:
        type: string
      argoWorkflowsNamespace:
        type: string
      argoWorkflowsTemplate:
        type: string
      changesets:
        description: Always appends; will eliminate duplicates. Spreads to associated
          chart releases (and environments and clusters) and new app/chart versions.
        items:
          type: string
        type: array
      chartReleases:
        description: Always appends; will eliminate duplicates. Spreads to associated
          environments and clusters.
        items:
          type: string
        type: array
      chartVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      charts:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      clusters:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      environments:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      githubActionsAttemptNumber:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      githubActionsWorkflowPath:
        type: string
      platform:
        type: string
      startedAt:
        type: string
      status:
        type: string
      terminalAt:
        type: string
    type: object
  v2controllers.CreatableCluster:
    description: The subset of Cluster fields that can be set upon creation
    properties:
      address:
        description: Required when creating
        type: string
      azureSubscription:
        description: Required when creating if providers is 'azure'
        type: string
      base:
        description: Required when creating
        type: string
      googleProject:
        description: Required when creating if provider is 'google'
        type: string
      helmfileRef:
        default: HEAD
        type: string
      location:
        default: us-central1-a
        type: string
      name:
        description: Required when creating
        type: string
      provider:
        default: google
        enum:
        - google
        - azure
        type: string
      requiresSuitability:
        default: false
        type: boolean
    type: object
  v2controllers.CreatableDatabaseInstance:
    properties:
      chartRelease:
        description: Required when creating
        type: string
      defaultDatabase:
        description: When creating, defaults to the chart name
        type: string
      googleProject:
        description: Required if platform is 'google'
        type: string
      instanceName:
        description: Required if platform is 'google' or 'azure'
        type: string
      platform:
        default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        type: string
    type: object
  v2controllers.CreatableEnvironment:
    properties:
      autoDelete:
        $ref: '#/definitions/environment.AutoDelete'
      autoPopulateChartReleases:
        default: true
        description: If true when creating, dynamic environments copy from template
          and template environments get the honeycomb chart
        type: boolean
      base:
        description: Required when creating
        type: string
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      defaultCluster:
        type: string
      defaultFirecloudDevelopRef:
        default: dev
        description: should be the environment branch for live envs. Is usually dev
          for template/dynamic but not necessarily
        type: string
      defaultNamespace:
        description: When creating, will be calculated if left empty
        type: string
      description:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      lifecycle:
        default: dynamic
        type: string
      name:
        description: When creating, will be calculated if dynamic, required otherwise
        type: string
      namePrefix:
        description: Used for dynamic environment name generation only, to override
          using the owner email handle and template name
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      offline:
        default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        type: boolean
      offlineScheduleBeginEnabled:
        description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        type: boolean
      offlineScheduleBeginTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndEnabled:
        description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        type: boolean
      offlineScheduleEndTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndWeekends:
        type: boolean
      owner:
        description: When creating, will default to you
        type: string
      pagerdutyIntegration:
        type: string
      preventDeletion:
        default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        type: boolean
      requiresSuitability:
        default: false
        type: boolean
      templateEnvironment:
        description: Required for dynamic environments
        type: string
      uniqueResourcePrefix:
        description: When creating, will be calculated if left empty
        type: string
      valuesName:
        description: When creating, defaults to template name or environment name
        type: string
    type: object
  v2controllers.CreatablePagerdutyIntegration:
    properties:
      key:
        type: string
      name:
        type: string
      pagerdutyID:
        type: string
      type:
        type: string
    type: object
  v2controllers.DatabaseInstance:
    properties:
      chartRelease:
        description: Required when creating
        type: string
      chartReleaseInfo:
        $ref: '#/definitions/v2controllers.ChartRelease'
      createdAt:
        format: date-time
        type: string
      defaultDatabase:
        description: When creating, defaults to the chart name
        type: string
      googleProject:
        description: Required if platform is 'google'
        type: string
      id:
        type: integer
      instanceName:
        description: Required if platform is 'google' or 'azure'
        type: string
      platform:
        default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.EditableAppVersion:
    properties:
      description:
        description: Generally the Git commit message
        type: string
    type: object
  v2controllers.EditableChart:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      description:
        type: string
      legacyConfigsEnabled:
        default: false
        description: Indicates whether a chart requires config rendering from firecloud-develop
        type: boolean
      playbookURL:
        type: string
    type: object
  v2controllers.EditableChartRelease:
    properties:
      includedInBulkChangesets:
        default: true
        type: boolean
      pagerdutyIntegration:
        type: string
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
    type: object
  v2controllers.EditableChartVersion:
    properties:
      description:
        description: Generally the Git commit message
        type: string
    type: object
  v2controllers.EditableCiIdentifier:
    properties:
      ciRuns:
        description: Always appends; will eliminate duplicates
        items:
          type: string
        type: array
    type: object
  v2controllers.EditableCiRun:
    properties:
      appVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      changesets:
        description: Always appends; will eliminate duplicates. Spreads to associated
          chart releases (and environments and clusters) and new app/chart versions.
        items:
          type: string
        type: array
      chartReleases:
        description: Always appends; will eliminate duplicates. Spreads to associated
          environments and clusters.
        items:
          type: string
        type: array
      chartVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      charts:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      clusters:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      environments:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      startedAt:
        type: string
      status:
        type: string
      terminalAt:
        type: string
    type: object
  v2controllers.EditableCluster:
    description: The subset of Cluster fields that can be edited after creation
    properties:
      address:
        description: Required when creating
        type: string
      base:
        description: Required when creating
        type: string
      helmfileRef:
        default: HEAD
        type: string
      requiresSuitability:
        default: false
        type: boolean
    type: object
  v2controllers.EditableDatabaseInstance:
    properties:
      defaultDatabase:
        description: When creating, defaults to the chart name
        type: string
      googleProject:
        description: Required if platform is 'google'
        type: string
      instanceName:
        description: Required if platform is 'google' or 'azure'
        type: string
      platform:
        default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        type: string
    type: object
  v2controllers.EditableEnvironment:
    properties:
      autoDelete:
        $ref: '#/definitions/environment.AutoDelete'
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      defaultCluster:
        type: string
      defaultFirecloudDevelopRef:
        default: dev
        description: should be the environment branch for live envs. Is usually dev
          for template/dynamic but not necessarily
        type: string
      description:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      offline:
        default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        type: boolean
      offlineScheduleBeginEnabled:
        description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        type: boolean
      offlineScheduleBeginTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndEnabled:
        description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        type: boolean
      offlineScheduleEndTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndWeekends:
        type: boolean
      owner:
        description: When creating, will default to you
        type: string
      pagerdutyIntegration:
        type: string
      preventDeletion:
        default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        type: boolean
      requiresSuitability:
        default: false
        type: boolean
    type: object
  v2controllers.EditablePagerdutyIntegration:
    properties:
      key:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  v2controllers.EditableUser:
    properties:
      name:
        type: string
      nameInferredFromGithub:
        type: boolean
    type: object
  v2controllers.Environment:
    properties:
      autoDelete:
        $ref: '#/definitions/environment.AutoDelete'
      autoPopulateChartReleases:
        default: true
        description: If true when creating, dynamic environments copy from template
          and template environments get the honeycomb chart
        type: boolean
      base:
        description: Required when creating
        type: string
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      ciIdentifier:
        $ref: '#/definitions/v2controllers.CiIdentifier'
      createdAt:
        format: date-time
        type: string
      defaultCluster:
        type: string
      defaultClusterInfo:
        $ref: '#/definitions/v2controllers.Cluster'
      defaultFirecloudDevelopRef:
        default: dev
        description: should be the environment branch for live envs. Is usually dev
          for template/dynamic but not necessarily
        type: string
      defaultNamespace:
        description: When creating, will be calculated if left empty
        type: string
      description:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      id:
        type: integer
      lifecycle:
        default: dynamic
        type: string
      name:
        description: When creating, will be calculated if dynamic, required otherwise
        type: string
      namePrefix:
        description: Used for dynamic environment name generation only, to override
          using the owner email handle and template name
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      offline:
        default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        type: boolean
      offlineScheduleBeginEnabled:
        description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        type: boolean
      offlineScheduleBeginTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndEnabled:
        description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        type: boolean
      offlineScheduleEndTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndWeekends:
        type: boolean
      owner:
        description: When creating, will default to you
        type: string
      ownerInfo:
        $ref: '#/definitions/v2controllers.User'
      pagerdutyIntegration:
        type: string
      pagerdutyIntegrationInfo:
        $ref: '#/definitions/v2controllers.PagerdutyIntegration'
      preventDeletion:
        default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        type: boolean
      requiresSuitability:
        default: false
        type: boolean
      templateEnvironment:
        description: Required for dynamic environments
        type: string
      templateEnvironmentInfo:
        description: Single-layer recursive; provides info of the template environment
          if this environment has one
        type: object
      uniqueResourcePrefix:
        description: When creating, will be calculated if left empty
        type: string
      updatedAt:
        format: date-time
        type: string
      valuesName:
        description: When creating, defaults to template name or environment name
        type: string
    type: object
  v2controllers.GithubAccessPayload:
    properties:
      githubAccessToken:
        type: string
    type: object
  v2controllers.PagerdutyIntegration:
    properties:
      createdAt:
        format: date-time
        type: string
      id:
        type: integer
      name:
        type: string
      pagerdutyID:
        type: string
      type:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  v2controllers.User:
    properties:
      createdAt:
        format: date-time
        type: string
      email:
        type: string
      githubID:
        type: string
      githubUsername:
        type: string
      googleID:
        type: string
      id:
        type: integer
      name:
        type: string
      nameInferredFromGithub:
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
info:
  contact:
    email: dsp-devops@broadinstitute.org
    name: DSP DevOps
  description: |-
    The Data Science Platform's source-of-truth service.
    Note: this API will try to load and return associations in responses, so clients won't need to make as many requests. This behavior isn't recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
  license:
    name: BSD-3-Clause
    url: https://github.com/broadinstitute/sherlock/blob/main/LICENSE.txt
  title: Sherlock
  version: development
paths:
  /api/ci-identifiers/v3:
    get:
      description: |-
        List CiIdentifiers matching a filter. The CiRuns would have to re-queried directly to load the CiRuns.
        This is mainly helpful for debugging and directly querying the existence of a CiIdentifier. Results are
        ordered by creation date, starting at most recent.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: resourceID
        type: integer
      - in: query
        name: resourceType
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many CiIdentifiers are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned CiIdentifiers (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.CiIdentifierV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiIdentifiers matching a filter
      tags:
      - CiIdentifiers
  /api/ci-identifiers/v3/{selector}:
    get:
      description: Get CiRuns for a resource by its CiIdentifier, which can be referenced
        by '{type}/{selector...}'.
      parameters:
      - description: The selector of CiIdentifier, which can be referenced either
          by numeric ID or indirectly by '{type}/{selector...}'
        in: path
        name: selector
        required: true
        type: string
      - description: Control how many CiRuns are returned (default 10)
        in: query
        name: limitCiRuns
        type: integer
      - description: Control the offset for the returned CiRuns (default 0)
        in: query
        name: offsetCiRuns
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.CiIdentifierV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get CiRuns for a resource by its CiIdentifier
      tags:
      - CiIdentifiers
  /api/ci-runs/v3:
    get:
      description: |-
        List CiRuns matching a filter. The CiRuns would have to re-queried directly to load any related resources.
        Results are ordered by start time, starting at most recent.
      parameters:
      - in: query
        name: argoWorkflowsName
        type: string
      - in: query
        name: argoWorkflowsNamespace
        type: string
      - in: query
        name: argoWorkflowsTemplate
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: githubActionsAttemptNumber
        type: integer
      - in: query
        name: githubActionsOwner
        type: string
      - in: query
        name: githubActionsRepo
        type: string
      - in: query
        name: githubActionsRunID
        type: integer
      - in: query
        name: githubActionsWorkflowPath
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: platform
        type: string
      - in: query
        name: startedAt
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: terminalAt
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many CiRuns are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned CiRuns (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.CiRunV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiRuns matching a filter
      tags:
      - CiRuns
    put:
      consumes:
      - application/json
      description: |-
        Create or update a CiRun with timing, status, and related resource information. This endpoint is idempotent.
        The fields for clusters, charts, chart releases, environments, etc. all accept selectors, and they will
        be smart about "spreading" to indirect relations. More info is available on the CiRunV3Upsert data type,
        but the gist is that specifying a changeset implies its chart release (and optionally app/chart versions),
        specifying or implying a chart release implies its environment/cluster, and specifying an environment/cluster
        implies all chart releases they contain.
      parameters:
      - description: The CiRun to upsert
        in: body
        name: ciRun
        required: true
        schema:
          $ref: '#/definitions/sherlock.CiRunV3Upsert'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.CiRunV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or update a CiRun
      tags:
      - CiRuns
  /api/ci-runs/v3/{selector}:
    get:
      description: Get a CiRun, including CiIdentifiers representing related resources
        or resources it affected.
      parameters:
      - description: The selector of the CiRun, which can be either its numeric ID,
          'github-actions/{owner}/{repo}/{run ID}/{attempt}', or 'argo-workflows/{namespace}/{name}'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.CiRunV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a CiRun, including CiIdentifiers for related resources
      tags:
      - CiRuns
  /api/deploy-hooks/github-actions/v3:
    get:
      description: List GithubActionsDeployHooks matching a filter.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: githubActionsDefaultRef
        type: string
      - in: query
        name: githubActionsOwner
        type: string
      - default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        in: query
        name: githubActionsRefBehavior
        type: string
      - in: query
        name: githubActionsRepo
        type: string
      - in: query
        name: githubActionsWorkflowPath
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: onChartRelease
        type: string
      - in: query
        name: onEnvironment
        type: string
      - in: query
        name: onFailure
        type: boolean
      - in: query
        name: onSuccess
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many GithubActionsDeployHooks are returned (default
          100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned GithubActionsDeployHooks
          (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List GithubActionsDeployHooks matching a filter
      tags:
      - DeployHooks
    post:
      consumes:
      - application/json
      description: Create a GithubActionsDeployHook.
      parameters:
      - description: The GithubActionsDeployHook to create
        in: body
        name: githubActionsDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.GithubActionsDeployHookV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a GithubActionsDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/github-actions/v3/{selector}:
    delete:
      description: Delete an individual GithubActionsDeployHook by its ID.
      parameters:
      - description: The ID of the GithubActionsDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual GithubActionsDeployHook
      tags:
      - DeployHooks
    get:
      description: Get an individual GithubActionsDeployHook by its ID.
      parameters:
      - description: The ID of the GithubActionsDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual GithubActionsDeployHook
      tags:
      - DeployHooks
    patch:
      description: Edit an individual GithubActionsDeployHook by its ID.
      parameters:
      - description: The ID of the GithubActionsDeployHook to edit
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the GithubActionsDeployHook
        in: body
        name: githubActionsDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.GithubActionsDeployHookV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual GithubActionsDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/slack/v3:
    get:
      description: List SlackDeployHooks matching a filter.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: onChartRelease
        type: string
      - in: query
        name: onEnvironment
        type: string
      - in: query
        name: onFailure
        type: boolean
      - in: query
        name: onSuccess
        type: boolean
      - in: query
        name: slackChannel
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many SlackDeployHooks are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned SlackDeployHooks (default
          0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.SlackDeployHookV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List SlackDeployHooks matching a filter
      tags:
      - DeployHooks
    post:
      consumes:
      - application/json
      description: Create a SlackDeployHook.
      parameters:
      - description: The SlackDeployHook to create
        in: body
        name: slackDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.SlackDeployHookV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a SlackDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/slack/v3/{selector}:
    delete:
      description: Delete an individual SlackDeployHook by its ID.
      parameters:
      - description: The ID of the SlackDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual SlackDeployHook
      tags:
      - DeployHooks
    get:
      description: Get an individual SlackDeployHook by its ID.
      parameters:
      - description: The ID of the SlackDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual SlackDeployHook
      tags:
      - DeployHooks
    patch:
      description: Edit an individual SlackDeployHook by its ID.
      parameters:
      - description: The ID of the SlackDeployHook to edit
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the SlackDeployHook
        in: body
        name: slackDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.SlackDeployHookV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual SlackDeployHook
      tags:
      - DeployHooks
  /api/users/v3:
    get:
      description: |-
        List Users matching a filter. The results will include suitability and other information.
        Note that the suitability info can't directly be filtered for at this time.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: email
        type: string
      - in: query
        name: githubID
        type: string
      - in: query
        name: githubUsername
        type: string
      - in: query
        name: googleID
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - description: |-
          Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.
          Will be set to true if the user account has no name and a GitHub account is linked.
        in: query
        name: nameInferredFromGithub
        type: boolean
      - description: Available only in responses; describes the user's production-suitability
        in: query
        name: suitabilityDescription
        type: string
      - description: Available only in responses; indicates whether the user is production-suitable
        in: query
        name: suitable
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many Users are returned (default 0, no limit)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Users (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.UserV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Users matching a filter
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: |-
        Update the calling User's information. As with all authenticated Sherlock endpoints,
        newly-observed callers will have a User record added, meaning that this endpoint
        behaves like an upsert.
      parameters:
      - description: The User data to update
        in: body
        name: user
        schema:
          $ref: '#/definitions/sherlock.UserV3Upsert'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.UserV3'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.UserV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Update the calling User's information
      tags:
      - Users
  /api/users/v3/{selector}:
    get:
      description: Get an individual User. As a special case, "me" or "self" can be
        passed as the selector to get the current user.
      parameters:
      - description: The selector of the User, which can be either a numeric ID, the
          email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github
          numeric ID}'. As a special case, 'me' or 'self' can be passed to get the
          calling user.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.UserV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual User
      tags:
      - Users
  /api/v2/app-versions:
    get:
      description: List existing AppVersion entries, ordered by most recently updated.
      parameters:
      - description: Required when creating
        in: query
        name: appVersion
        type: string
      - description: Required when creating
        in: query
        name: chart
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Generally the Git commit message
        in: query
        name: description
        type: string
      - in: query
        name: gitBranch
        type: string
      - in: query
        name: gitCommit
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: parentAppVersion
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.AppVersion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List AppVersion entries
      tags:
      - AppVersions
    post:
      consumes:
      - application/json
      description: |-
        Create a new AppVersion entry. Note that fields are immutable after creation.
        If the new entry is a duplicate of one already in the database, the database will not be altered and the call will return normally but with a 200 code.
      parameters:
      - description: The AppVersion to create
        in: body
        name: app-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableAppVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new AppVersion entry
      tags:
      - AppVersions
  /api/v2/app-versions/{selector}:
    get:
      description: 'Get an existing AppVersion entry via one its "selectors": chart/version
        or numeric ID.'
      parameters:
      - description: 'The AppVersion to get''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a AppVersion entry
      tags:
      - AppVersions
    patch:
      consumes:
      - application/json
      description: 'Edit an existing AppVersion entry via one its "selectors": chart/version
        or numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create.'
      parameters:
      - description: 'The AppVersion to edit''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the AppVersion
        in: body
        name: app-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableAppVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a AppVersion entry
      tags:
      - AppVersions
    put:
      consumes:
      - application/json
      description: |-
        Create or edit an AppVersion entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The AppVersion to upsert''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The AppVersion to upsert
        in: body
        name: app-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableAppVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit an AppVersion entry
      tags:
      - AppVersions
  /api/v2/changesets:
    get:
      description: List existing Changeset entries, ordered by most recently updated.
      parameters:
      - format: date-time
        in: query
        name: appliedAt
        type: string
      - in: query
        name: chartRelease
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: fromAppVersionBranch
        type: string
      - in: query
        name: fromAppVersionCommit
        type: string
      - in: query
        name: fromAppVersionExact
        type: string
      - in: query
        name: fromAppVersionFollowChartRelease
        type: string
      - in: query
        name: fromAppVersionReference
        type: string
      - in: query
        name: fromAppVersionResolver
        type: string
      - in: query
        name: fromChartVersionExact
        type: string
      - in: query
        name: fromChartVersionFollowChartRelease
        type: string
      - in: query
        name: fromChartVersionReference
        type: string
      - in: query
        name: fromChartVersionResolver
        type: string
      - in: query
        name: fromFirecloudDevelopRef
        type: string
      - in: query
        name: fromHelmfileRef
        type: string
      - format: date-time
        in: query
        name: fromResolvedAt
        type: string
      - in: query
        name: id
        type: integer
      - format: date-time
        in: query
        name: supersededAt
        type: string
      - in: query
        name: toAppVersionBranch
        type: string
      - in: query
        name: toAppVersionCommit
        type: string
      - in: query
        name: toAppVersionExact
        type: string
      - in: query
        name: toAppVersionFollowChartRelease
        type: string
      - in: query
        name: toAppVersionReference
        type: string
      - in: query
        name: toAppVersionResolver
        type: string
      - in: query
        name: toChartVersionExact
        type: string
      - in: query
        name: toChartVersionFollowChartRelease
        type: string
      - in: query
        name: toChartVersionReference
        type: string
      - in: query
        name: toChartVersionResolver
        type: string
      - in: query
        name: toFirecloudDevelopRef
        type: string
      - in: query
        name: toHelmfileRef
        type: string
      - format: date-time
        in: query
        name: toResolvedAt
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Changeset entries
      tags:
      - Changesets
  /api/v2/changesets/{selector}:
    get:
      description: Get an existing Changeset entry via its "selector"--its numeric
        ID.
      parameters:
      - description: The Changeset to get's selector--numeric ID
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Changeset'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Changeset entry
      tags:
      - Changesets
  /api/v2/chart-releases:
    get:
      description: List existing ChartRelease entries, ordered by most recently updated.
      parameters:
      - description: When creating, will default to the app's mainline branch if no
          other app version info is present
        in: query
        name: appVersionBranch
        type: string
      - in: query
        name: appVersionCommit
        type: string
      - in: query
        name: appVersionExact
        type: string
      - in: query
        name: appVersionFollowChartRelease
        type: string
      - in: query
        name: appVersionReference
        type: string
      - description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - follow
        - none
        in: query
        name: appVersionResolver
        type: string
      - description: Required when creating
        in: query
        name: chart
        type: string
      - in: query
        name: chartVersionExact
        type: string
      - in: query
        name: chartVersionFollowChartRelease
        type: string
      - in: query
        name: chartVersionReference
        type: string
      - description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        - follow
        in: query
        name: chartVersionResolver
        type: string
      - description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        in: query
        name: cluster
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Calculated field
        in: query
        name: destinationType
        type: string
      - description: Either this or cluster must be provided.
        in: query
        name: environment
        type: string
      - in: query
        name: firecloudDevelopRef
        type: string
      - default: HEAD
        in: query
        name: helmfileRef
        type: string
      - in: query
        name: id
        type: integer
      - default: true
        in: query
        name: includedInBulkChangesets
        type: boolean
      - description: When creating, will be calculated if left empty
        in: query
        name: name
        type: string
      - description: When creating, will default to the environment's default namespace,
          if provided
        in: query
        name: namespace
        type: string
      - in: query
        name: pagerdutyIntegration
        type: string
      - description: When creating, will use the chart's default if left empty
        in: query
        name: port
        type: integer
      - description: When creating, will use the chart's default if left empty
        in: query
        name: protocol
        type: string
      - description: When creating, will use the chart's default if left empty
        in: query
        name: subdomain
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.ChartRelease'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartRelease entries
      tags:
      - ChartReleases
    post:
      consumes:
      - application/json
      description: Create a new ChartRelease entry. Note that some fields are immutable
        after creation; /edit lists mutable fields.
      parameters:
      - description: The ChartRelease to create
        in: body
        name: chart-release
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChartRelease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new ChartRelease entry
      tags:
      - ChartReleases
  /api/v2/chart-releases/{selector}:
    delete:
      description: 'Delete an existing ChartRelease entry via one of its "selectors":
        name, numeric ID, environment/chart, or cluster/namespace/chart.'
      parameters:
      - description: The ChartRelease to delete's selector
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a ChartRelease entry
      tags:
      - ChartReleases
    get:
      description: 'Get an existing ChartRelease entry via one of its "selectors":
        name, numeric ID, environment/chart, or cluster/namespace/chart.'
      parameters:
      - description: The ChartRelease to get's selector
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a ChartRelease entry
      tags:
      - ChartReleases
    patch:
      consumes:
      - application/json
      description: 'Edit an existing ChartRelease entry via one of its "selectors":
        name, numeric ID, environment/chart, or cluster/namespace/chart. Note that
        only mutable fields are available here, immutable fields can only be set using
        /create.'
      parameters:
      - description: The ChartRelease to edit's selector
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the ChartRelease
        in: body
        name: chart-release
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableChartRelease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a ChartRelease entry
      tags:
      - ChartReleases
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a ChartRelease entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The ChartRelease to upsert''s selector: name, numeric ID, environment/chart,
          or cluster/namespace/chart'
        in: path
        name: selector
        required: true
        type: string
      - description: The ChartRelease to upsert
        in: body
        name: chart-release
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChartRelease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a ChartRelease entry
      tags:
      - ChartReleases
  /api/v2/chart-versions:
    get:
      description: List existing ChartVersion entries, ordered by most recently updated.
      parameters:
      - description: Required when creating
        in: query
        name: chart
        type: string
      - description: Required when creating
        in: query
        name: chartVersion
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Generally the Git commit message
        in: query
        name: description
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: parentChartVersion
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.ChartVersion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartVersion entries
      tags:
      - ChartVersions
    post:
      consumes:
      - application/json
      description: |-
        Create a new ChartVersion entry. Note that fields are immutable after creation.
        If the new entry is a duplicate of one already in the database, the database will not be altered and the call will return normally but with a 200 code.
      parameters:
      - description: The ChartVersion to create
        in: body
        name: chart-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChartVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new ChartVersion entry
      tags:
      - ChartVersions
  /api/v2/chart-versions/{selector}:
    get:
      description: 'Get an existing ChartVersion entry via one its "selectors": chart/version
        or numeric ID.'
      parameters:
      - description: 'The ChartVersion to get''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a ChartVersion entry
      tags:
      - ChartVersions
    patch:
      consumes:
      - application/json
      description: 'Edit an existing ChartVersion entry via one its "selectors": chart/version
        or numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create.'
      parameters:
      - description: 'The ChartVersion to edit''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the ChartVersion
        in: body
        name: chart-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableChartVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a ChartVersion entry
      tags:
      - ChartVersions
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a ChartVersion entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The ChartVersion to upsert''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The ChartVersion to upsert
        in: body
        name: chart-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChartVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a ChartVersion entry
      tags:
      - ChartVersions
  /api/v2/charts:
    get:
      description: List existing Chart entries, ordered by most recently updated.
      parameters:
      - in: query
        name: appImageGitMainBranch
        type: string
      - in: query
        name: appImageGitRepo
        type: string
      - default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        in: query
        name: chartExposesEndpoint
        type: boolean
      - default: terra-helm
        in: query
        name: chartRepo
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - default: 443
        in: query
        name: defaultPort
        type: integer
      - default: https
        in: query
        name: defaultProtocol
        type: string
      - description: When creating, will default to the name of the chart
        in: query
        name: defaultSubdomain
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: id
        type: integer
      - default: false
        description: Indicates whether a chart requires config rendering from firecloud-develop
        in: query
        name: legacyConfigsEnabled
        type: boolean
      - description: Required when creating
        in: query
        name: name
        type: string
      - in: query
        name: playbookURL
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Chart'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Chart entries
      tags:
      - Charts
    post:
      consumes:
      - application/json
      description: Create a new Chart entry. Note that some fields are immutable after
        creation; /edit lists mutable fields.
      parameters:
      - description: The Chart to create
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new Chart entry
      tags:
      - Charts
  /api/v2/charts/{selector}:
    delete:
      description: 'Delete an existing Chart entry via one of its "selectors": name
        or numeric ID.'
      parameters:
      - description: 'The Chart to delete''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a Chart entry
      tags:
      - Charts
    get:
      description: 'Get an existing Chart entry via one of its "selectors": name or
        numeric ID.'
      parameters:
      - description: 'The Chart to get''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Chart entry
      tags:
      - Charts
    patch:
      consumes:
      - application/json
      description: 'Edit an existing Chart entry via one of its "selectors": name
        or numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create.'
      parameters:
      - description: 'The Chart to edit''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Chart
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableChart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a Chart entry
      tags:
      - Charts
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a Chart entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The Chart to upsert''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The Chart to upsert
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a Chart entry
      tags:
      - Charts
  /api/v2/ci-identifiers:
    get:
      description: List existing CiIdentifier entries, ordered by most recently updated.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: resourceID
        type: integer
      - in: query
        name: resourceType
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.CiIdentifier'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiIdentifier entries
      tags:
      - CiIdentifiers
    post:
      consumes:
      - application/json
      description: Create a new CiIdentifier entry. Note that some fields are immutable
        after creation; /edit lists mutable fields.
      parameters:
      - description: The CiIdentifier to create
        in: body
        name: ci-identifier
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableCiIdentifier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiIdentifier'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.CiIdentifier'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new CiIdentifier entry
      tags:
      - CiIdentifiers
  /api/v2/ci-identifiers/{selector}:
    get:
      description: 'Get an existing CiIdentifier entry via one of its "selectors":
        ID or type + ''/'' + selector of the referenced type.'
      parameters:
      - description: 'The CiIdentifier to get''s selector: ID or type + ''/'' + selector
          of the referenced type'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiIdentifier'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a CiIdentifier entry
      tags:
      - CiIdentifiers
    patch:
      consumes:
      - application/json
      description: 'Edit an existing CiIdentifier entry via one of its "selectors":
        ID or type + ''/'' + selector of the referenced type. Note that only mutable
        fields are available here, immutable fields can only be set using /create.'
      parameters:
      - description: 'The CiIdentifier to edit''s selector: ID or type + ''/'' + selector
          of the referenced type'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the CiIdentifier
        in: body
        name: ci-identifier
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableCiIdentifier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiIdentifier'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a CiIdentifier entry
      tags:
      - CiIdentifiers
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a CiIdentifier entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The CiIdentifier to upsert''s selector: ID or type + ''/'' +
          selector of the referenced type'
        in: path
        name: selector
        required: true
        type: string
      - description: The CiIdentifier to upsert
        in: body
        name: ci-identifier
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableCiIdentifier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiIdentifier'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.CiIdentifier'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a CiIdentifier entry
      tags:
      - CiIdentifiers
  /api/v2/ci-runs:
    get:
      description: List existing CiRun entries, ordered by most recently updated.
      parameters:
      - in: query
        name: argoWorkflowsName
        type: string
      - in: query
        name: argoWorkflowsNamespace
        type: string
      - in: query
        name: argoWorkflowsTemplate
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: githubActionsAttemptNumber
        type: integer
      - in: query
        name: githubActionsOwner
        type: string
      - in: query
        name: githubActionsRepo
        type: string
      - in: query
        name: githubActionsRunID
        type: integer
      - in: query
        name: githubActionsWorkflowPath
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: platform
        type: string
      - in: query
        name: startedAt
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: terminalAt
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.CiRun'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiRun entries
      tags:
      - CiRuns
    post:
      consumes:
      - application/json
      description: Create a new CiRun entry. Note that some fields are immutable after
        creation; /edit lists mutable fields.
      parameters:
      - description: The CiRun to create
        in: body
        name: ci-run
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableCiRun'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiRun'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.CiRun'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new CiRun entry
      tags:
      - CiRuns
  /api/v2/ci-runs/{selector}:
    delete:
      description: 'Delete an existing CiRun entry via one of its "selectors": ID,
        ''github-actions/'' + owner + repo + run ID + attempt number, or ''argo-workflows/''
        + namespace + name.'
      parameters:
      - description: 'The CiRun to delete''s selector: ID, ''github-actions/'' + owner
          + repo + run ID + attempt number, or ''argo-workflows/'' + namespace + name'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiRun'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a CiRun entry
      tags:
      - CiRuns
    get:
      description: 'Get an existing CiRun entry via one of its "selectors": ID, ''github-actions/''
        + owner + repo + run ID + attempt number, or ''argo-workflows/'' + namespace
        + name.'
      parameters:
      - description: 'The CiRun to get''s selector: ID, ''github-actions/'' + owner
          + repo + run ID + attempt number, or ''argo-workflows/'' + namespace + name'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiRun'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a CiRun entry
      tags:
      - CiRuns
    patch:
      consumes:
      - application/json
      description: 'Edit an existing CiRun entry via one of its "selectors": ID, ''github-actions/''
        + owner + repo + run ID + attempt number, or ''argo-workflows/'' + namespace
        + name. Note that only mutable fields are available here, immutable fields
        can only be set using /create.'
      parameters:
      - description: 'The CiRun to edit''s selector: ID, ''github-actions/'' + owner
          + repo + run ID + attempt number, or ''argo-workflows/'' + namespace + name'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the CiRun
        in: body
        name: ci-run
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableCiRun'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiRun'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a CiRun entry
      tags:
      - CiRuns
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a CiRun entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The CiRun to upsert''s selector: ID, ''github-actions/'' + owner
          + repo + run ID + attempt number, or ''argo-workflows/'' + namespace + name'
        in: path
        name: selector
        required: true
        type: string
      - description: The CiRun to upsert
        in: body
        name: ci-run
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableCiRun'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.CiRun'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.CiRun'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a CiRun entry
      tags:
      - CiRuns
  /api/v2/clusters:
    get:
      description: List existing Cluster entries, ordered by most recently updated.
      parameters:
      - description: Required when creating
        in: query
        name: address
        type: string
      - description: Required when creating if providers is 'azure'
        in: query
        name: azureSubscription
        type: string
      - description: Required when creating
        in: query
        name: base
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Required when creating if provider is 'google'
        in: query
        name: googleProject
        type: string
      - default: HEAD
        in: query
        name: helmfileRef
        type: string
      - in: query
        name: id
        type: integer
      - default: us-central1-a
        in: query
        name: location
        type: string
      - description: Required when creating
        in: query
        name: name
        type: string
      - default: google
        enum:
        - google
        - azure
        in: query
        name: provider
        type: string
      - default: false
        in: query
        name: requiresSuitability
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Cluster'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Cluster entries
      tags:
      - Clusters
    post:
      consumes:
      - application/json
      description: Create a new Cluster entry. Note that some fields are immutable
        after creation; /edit lists mutable fields.
      parameters:
      - description: The Cluster to create
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableCluster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new Cluster entry
      tags:
      - Clusters
  /api/v2/clusters/{selector}:
    delete:
      description: 'Delete an existing Cluster entry via one of its "selectors": name
        or numeric ID.'
      parameters:
      - description: 'The Cluster to delete''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a Cluster entry
      tags:
      - Clusters
    get:
      description: 'Get an existing Cluster entry via one of its "selectors": name
        or numeric ID.'
      parameters:
      - description: 'The Cluster to get''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Cluster entry
      tags:
      - Clusters
    patch:
      consumes:
      - application/json
      description: 'Edit an existing Cluster entry via one of its "selectors": name
        or numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create.'
      parameters:
      - description: 'The Cluster to edit''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Cluster
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableCluster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a Cluster entry
      tags:
      - Clusters
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a Cluster entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The Cluster to upsert''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The Cluster to upsert
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableCluster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a Cluster entry
      tags:
      - Clusters
  /api/v2/database-instances:
    get:
      description: List existing DatabaseInstance entries, ordered by most recently
        updated.
      parameters:
      - description: Required when creating
        in: query
        name: chartRelease
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: When creating, defaults to the chart name
        in: query
        name: defaultDatabase
        type: string
      - description: Required if platform is 'google'
        in: query
        name: googleProject
        type: string
      - in: query
        name: id
        type: integer
      - description: Required if platform is 'google' or 'azure'
        in: query
        name: instanceName
        type: string
      - default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        in: query
        name: platform
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.DatabaseInstance'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List DatabaseInstance entries
      tags:
      - DatabaseInstances
    post:
      consumes:
      - application/json
      description: Create a new DatabaseInstance entry. Note that some fields are
        immutable after creation; /edit lists mutable fields.
      parameters:
      - description: The DatabaseInstance to create
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableDatabaseInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.DatabaseInstance'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.DatabaseInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new DatabaseInstance entry
      tags:
      - DatabaseInstances
  /api/v2/database-instances/{selector}:
    delete:
      description: 'Delete an existing DatabaseInstance entry via one of its "selectors":
        numeric ID or ''chart-release/'' followed by a chart release selector.'
      parameters:
      - description: 'The DatabaseInstance to delete''s selector: numeric ID or ''chart-release/''
          followed by a chart release selector'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.DatabaseInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a DatabaseInstance entry
      tags:
      - DatabaseInstances
    get:
      description: 'Get an existing DatabaseInstance entry via one of its "selectors":
        numeric ID or ''chart-release/'' followed by a chart release selector.'
      parameters:
      - description: 'The DatabaseInstance to get''s selector: numeric ID or ''chart-release/''
          followed by a chart release selector'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.DatabaseInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a DatabaseInstance entry
      tags:
      - DatabaseInstances
    patch:
      consumes:
      - application/json
      description: 'Edit an existing DatabaseInstance entry via one of its "selectors":
        numeric ID or ''chart-release/'' followed by a chart release selector. Note
        that only mutable fields are available here, immutable fields can only be
        set using /create.'
      parameters:
      - description: 'The DatabaseInstance to edit''s selector: numeric ID or ''chart-release/''
          followed by a chart release selector'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the DatabaseInstance
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableDatabaseInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.DatabaseInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a DatabaseInstance entry
      tags:
      - DatabaseInstances
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a DatabaseInstance entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The DatabaseInstance to upsert''s selector: numeric ID or ''chart-release/''
          followed by a chart release selector'
        in: path
        name: selector
        required: true
        type: string
      - description: The DatabaseInstance to upsert
        in: body
        name: database-instance
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableDatabaseInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.DatabaseInstance'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.DatabaseInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a DatabaseInstance entry
      tags:
      - DatabaseInstances
  /api/v2/environments:
    get:
      description: List existing Environment entries, ordered by most recently updated.
      parameters:
      - default: true
        description: If true when creating, dynamic environments copy from template
          and template environments get the honeycomb chart
        in: query
        name: autoPopulateChartReleases
        type: boolean
      - description: Required when creating
        in: query
        name: base
        type: string
      - default: bee.envs-terra.bio
        in: query
        name: baseDomain
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: defaultCluster
        type: string
      - default: dev
        description: should be the environment branch for live envs. Is usually dev
          for template/dynamic but not necessarily
        in: query
        name: defaultFirecloudDevelopRef
        type: string
      - description: When creating, will be calculated if left empty
        in: query
        name: defaultNamespace
        type: string
      - in: query
        name: description
        type: string
      - default: HEAD
        in: query
        name: helmfileRef
        type: string
      - in: query
        name: id
        type: integer
      - default: dynamic
        in: query
        name: lifecycle
        type: string
      - description: When creating, will be calculated if dynamic, required otherwise
        in: query
        name: name
        type: string
      - description: Used for dynamic environment name generation only, to override
          using the owner email handle and template name
        in: query
        name: namePrefix
        type: string
      - default: true
        in: query
        name: namePrefixesDomain
        type: boolean
      - default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        in: query
        name: offline
        type: boolean
      - description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        in: query
        name: offlineScheduleBeginEnabled
        type: boolean
      - description: Stored with timezone to determine day of the week
        format: date-time
        in: query
        name: offlineScheduleBeginTime
        type: string
      - description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        in: query
        name: offlineScheduleEndEnabled
        type: boolean
      - description: Stored with timezone to determine day of the week
        format: date-time
        in: query
        name: offlineScheduleEndTime
        type: string
      - in: query
        name: offlineScheduleEndWeekends
        type: boolean
      - description: When creating, will default to you
        in: query
        name: owner
        type: string
      - in: query
        name: pagerdutyIntegration
        type: string
      - default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        in: query
        name: preventDeletion
        type: boolean
      - default: false
        in: query
        name: requiresSuitability
        type: boolean
      - description: Required for dynamic environments
        in: query
        name: templateEnvironment
        type: string
      - description: When creating, will be calculated if left empty
        in: query
        name: uniqueResourcePrefix
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: When creating, defaults to template name or environment name
        in: query
        name: valuesName
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Environment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Environment entries
      tags:
      - Environments
    post:
      consumes:
      - application/json
      description: |-
        Create a new Environment entry. Note that some fields are immutable after creation; /edit lists mutable fields.
        Creating a dynamic environment based on a template will also copy ChartReleases from the template.
      parameters:
      - description: The Environment to create
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableEnvironment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new Environment entry
      tags:
      - Environments
  /api/v2/environments/{selector}:
    delete:
      description: 'Delete an existing Environment entry via one of its "selectors":
        name, numeric ID, or "resource-prefix/" + the unique resource prefix.'
      parameters:
      - description: 'The Environment to delete''s selector: name, numeric ID, or '
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a Environment entry
      tags:
      - Environments
    get:
      description: 'Get an existing Environment entry via one of its "selectors":
        name, numeric ID, or "resource-prefix/" + the unique resource prefix.'
      parameters:
      - description: 'The Environment to get''s selector: name, numeric ID, or '
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Environment entry
      tags:
      - Environments
    patch:
      consumes:
      - application/json
      description: 'Edit an existing Environment entry via one of its "selectors":
        name, numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create, or "resource-prefix/" + the unique resource
        prefix.'
      parameters:
      - description: 'The Environment to edit''s selector: name, numeric ID, or '
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Environment
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableEnvironment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a Environment entry
      tags:
      - Environments
    put:
      consumes:
      - application/json
      description: |-
        Create or edit an Environment entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The Environment to upsert''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The Environment to upsert
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableEnvironment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit an Environment entry
      tags:
      - Environments
  /api/v2/pagerduty-integrations:
    get:
      description: List existing PagerdutyIntegration entries, ordered by most recently
        updated.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: pagerdutyID
        type: string
      - in: query
        name: type
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.PagerdutyIntegration'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List PagerdutyIntegration entries
      tags:
      - PagerdutyIntegrations
    post:
      consumes:
      - application/json
      description: Create a new PagerdutyIntegration entry. Note that fields are immutable
        after creation.
      parameters:
      - description: The PagerdutyIntegration to create
        in: body
        name: pagerduty-integration
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatablePagerdutyIntegration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.PagerdutyIntegration'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.PagerdutyIntegration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new PagerdutyIntegration entry
      tags:
      - PagerdutyIntegrations
  /api/v2/pagerduty-integrations/{selector}:
    delete:
      description: 'Delete an existing PagerdutyIntegration entry via one of its "selectors":
        "pd-id/" + Pagerduty ID or numeric Sherlock ID.'
      parameters:
      - description: 'The PagerdutyIntegration to delete''s selector: '
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.PagerdutyIntegration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a PagerdutyIntegration entry
      tags:
      - PagerdutyIntegrations
    get:
      description: 'Get an existing PagerdutyIntegration entry via one its "selectors":
        "pd-id/" + Pagerduty ID or numeric Sherlock ID.'
      parameters:
      - description: 'The PagerdutyIntegration to get''s selector: chart/version or
          numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.PagerdutyIntegration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a PagerdutyIntegration entry
      tags:
      - PagerdutyIntegrations
    patch:
      consumes:
      - application/json
      description: 'Edit an existing PagerdutyIntegration entry via one its "selectors":
        "pd-id/" + Pagerduty ID or numeric Sherlock ID. Note that only mutable fields
        are available here, immutable fields can only be set using /create.'
      parameters:
      - description: 'The PagerdutyIntegration to edit''s selector: chart/version
          or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the PagerdutyIntegration
        in: body
        name: pagerduty-integration
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditablePagerdutyIntegration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.PagerdutyIntegration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a PagerdutyIntegration entry
      tags:
      - PagerdutyIntegrations
    put:
      consumes:
      - application/json
      description: |-
        Create or edit a PagerdutyIntegration entry. Attempts to edit and will attempt to create upon an error.
        If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
      parameters:
      - description: 'The PagerdutyIntegration to upsert''s selector: '
        in: path
        name: selector
        required: true
        type: string
      - description: The PagerdutyIntegration to upsert
        in: body
        name: pagerduty-integration
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatablePagerdutyIntegration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.PagerdutyIntegration'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.PagerdutyIntegration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a PagerdutyIntegration entry
      tags:
      - PagerdutyIntegrations
  /api/v2/procedures/app-versions/children-path-to-parent:
    get:
      description: Get the path through parent references from a child AppVersion
        (inclusive) to a parent AppVersion (exclusive), if possible. Because parent
        references point from newer children to older parents, the newer AppVersion
        should be the child. The result will always exclude the parent. If the child
        can't be connected to the parent, just the child will be returned with a 204
        code.
      parameters:
      - description: The selector of the newer AppVersion for the changelog
        in: query
        name: child
        required: true
        type: string
      - description: The selector of the older AppVersion for the changelog
        in: query
        name: parent
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.AppVersion'
            type: array
        "204":
          description: No Content
          schema:
            items:
              $ref: '#/definitions/v2controllers.AppVersion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a changelog between two AppVersions
      tags:
      - AppVersions
  /api/v2/procedures/changesets/apply:
    post:
      consumes:
      - application/json
      description: |-
        Looks up and applies previously-planned version diffs given by the ID. Other stored plans against the same Chart Releases are marked as superseded.
        Multiple Changesets can be specified simply by passing multiple IDs in the list.
      parameters:
      - description: String IDs of the Changesets to apply
        in: body
        name: apply-request
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Apply previously planned version changes to Chart Releases
      tags:
      - Changesets
  /api/v2/procedures/changesets/plan:
    post:
      consumes:
      - application/json
      description: |-
        Refreshes and calculates version diffs for Chart Releases. If there's a diff, the plan is stored and returned so it can be applied later.
        Multiple Chart Releases can be specified--as can groups of Chart Releases from multiple Environments.
      parameters:
      - description: Info on what version changes or refreshes to plan
        in: body
        name: changeset-plan-request
        required: true
        schema:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Plan--but do not apply--version changes to Chart Releases
      tags:
      - Changesets
  /api/v2/procedures/changesets/plan-and-apply:
    post:
      consumes:
      - application/json
      description: Like the plan and apply endpoints immediately in sequence.
      parameters:
      - description: Info on what version changes or refreshes to perform
        in: body
        name: changeset-plan-request
        required: true
        schema:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Plan and apply version changes in one step
      tags:
      - Changesets
  /api/v2/procedures/changesets/query-applied-for-chart-release/{selector}:
    get:
      description: List existing applied Changesets for a particular Chart Release,
        ordered by most recently applied.
      parameters:
      - description: Selector the Chart Release to find applied Changesets for
        in: path
        name: selector
        required: true
        type: string
      - description: An optional offset to skip a number of latest Changesets
        in: query
        name: offset
        type: integer
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List applied Changesets for a Chart Release
      tags:
      - Changesets
  /api/v2/procedures/chart-releases/trigger-incident/{selector}:
    post:
      consumes:
      - application/json
      description: Trigger an alert for the Pagerduty integration configured for a
        given ChartRelease.
      parameters:
      - description: The ChartRelease's selector
        in: path
        name: selector
        required: true
        type: string
      - description: Summary of the incident
        in: body
        name: summary
        required: true
        schema:
          $ref: '#/definitions/pagerduty.AlertSummary'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/pagerduty.SendAlertResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Trigger a Pagerduty incident for a given ChartRelease
      tags:
      - ChartReleases
  /api/v2/procedures/chart-versions/children-path-to-parent:
    get:
      description: Get the path through parent references from a child ChartVersion
        (inclusive) to a parent ChartVersion (exclusive), if possible. Because parent
        references point from newer children to older parents, the newer ChartVersion
        should be the child. The result will always exclude the parent. If the child
        can't be connected to the parent, just the child will be returned with a 204
        code.
      parameters:
      - description: The selector of the newer ChartVersion for the changelog
        in: query
        name: child
        required: true
        type: string
      - description: The selector of the older ChartVersion for the changelog
        in: query
        name: parent
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.ChartVersion'
            type: array
        "204":
          description: No Content
          schema:
            items:
              $ref: '#/definitions/v2controllers.ChartVersion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a changelog between two ChartVersions
      tags:
      - ChartVersions
  /api/v2/procedures/environments/trigger-incident/{selector}:
    post:
      consumes:
      - application/json
      description: Trigger an alert for the Pagerduty integration configured for a
        given Environment.
      parameters:
      - description: The Environment's selector
        in: path
        name: selector
        required: true
        type: string
      - description: Summary of the incident
        in: body
        name: summary
        required: true
        schema:
          $ref: '#/definitions/pagerduty.AlertSummary'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/pagerduty.SendAlertResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Trigger a Pagerduty incident for a given Environment
      tags:
      - Environments
  /api/v2/procedures/pagerduty-integrations/trigger-incident/{selector}:
    post:
      consumes:
      - application/json
      description: Trigger an alert via a PagerdutyIntegration itself.
      parameters:
      - description: The PagerdutyIntegration's selector
        in: path
        name: selector
        required: true
        type: string
      - description: Summary of the incident
        in: body
        name: summary
        required: true
        schema:
          $ref: '#/definitions/pagerduty.AlertSummary'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/pagerduty.SendAlertResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Trigger a Pagerduty incident for a given PagerdutyIntegration
      tags:
      - PagerdutyIntegrations
  /api/v2/procedures/users/link-github:
    post:
      consumes:
      - application/json
      description: Update the authenticated User's associated personal GitHub account
      parameters:
      - description: Access to the GitHub account to link
        in: body
        name: github-access-payload-request
        required: true
        schema:
          $ref: '#/definitions/v2controllers.GithubAccessPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.User'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/v2controllers.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Update the User's GitHub account link
      tags:
      - Users
  /api/v2/procedures/users/me:
    get:
      description: Get your own User entry
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get your own User entry
      tags:
      - Users
  /api/v2/selectors/app-versions/{selector}:
    get:
      description: Validate a given AppVersion selector and provide any other selectors
        that would match the same AppVersion.
      parameters:
      - description: The selector of the AppVersion to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List AppVersion selectors
      tags:
      - AppVersions
  /api/v2/selectors/changesets/{selector}:
    get:
      description: Validate a given Changeset selector and provide any other selectors
        that would match the same Changeset.
      parameters:
      - description: The selector of the Changeset to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Changeset selectors
      tags:
      - Changesets
  /api/v2/selectors/chart-releases/{selector}:
    get:
      description: Validate a given ChartRelease selector and provide any other selectors
        that would match the same ChartRelease.
      parameters:
      - description: The selector of the ChartRelease to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartRelease selectors
      tags:
      - ChartReleases
  /api/v2/selectors/chart-versions/{selector}:
    get:
      description: Validate a given ChartVersion selector and provide any other selectors
        that would match the same ChartVersion.
      parameters:
      - description: The selector of the ChartVersion to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartVersion selectors
      tags:
      - ChartVersions
  /api/v2/selectors/charts/{selector}:
    get:
      description: Validate a given Chart selector and provide any other selectors
        that would match the same Chart.
      parameters:
      - description: The selector of the Chart to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Chart selectors
      tags:
      - Charts
  /api/v2/selectors/ci-identifiers/{selector}:
    get:
      description: Validate a given CiIdentifier selector and provide any other selectors
        that would match the same CiIdentifier.
      parameters:
      - description: The selector of the CiIdentifier to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiIdentifier selectors
      tags:
      - CiIdentifiers
  /api/v2/selectors/ci-runs/{selector}:
    get:
      description: Validate a given CiRun selector and provide any other selectors
        that would match the same CiRun.
      parameters:
      - description: The selector of the CiRun to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiRun selectors
      tags:
      - CiRuns
  /api/v2/selectors/clusters/{selector}:
    get:
      description: Validate a given Cluster selector and provide any other selectors
        that would match the same Cluster.
      parameters:
      - description: The selector of the Cluster to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Cluster selectors
      tags:
      - Clusters
  /api/v2/selectors/database-instances/{selector}:
    get:
      description: Validate a given DatabaseInstance selector and provide any other
        selectors that would match the same DatabaseInstance.
      parameters:
      - description: The selector of the DatabaseInstance to list other selectors
          for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List DatabaseInstance selectors
      tags:
      - DatabaseInstances
  /api/v2/selectors/environments/{selector}:
    get:
      description: Validate a given Environment selector and provide any other selectors
        that would match the same Environment.
      parameters:
      - description: The selector of the Environment to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Environment selectors
      tags:
      - Environments
  /api/v2/selectors/pagerduty-integrations/{selector}:
    get:
      description: Validate a given PagerdutyIntegration selector and provide any
        other selectors that would match the same PagerdutyIntegration.
      parameters:
      - description: The selector of the PagerdutyIntegration to list other selectors
          for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List PagerdutyIntegration selectors
      tags:
      - PagerdutyIntegrations
  /api/v2/selectors/users/{selector}:
    get:
      description: Validate a given User selector and provide any other selectors
        that would match the same User.
      parameters:
      - description: The selector of the User to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List User selectors
      tags:
      - Users
  /api/v2/users:
    get:
      description: List existing User entries, ordered by most recently updated.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: email
        type: string
      - in: query
        name: githubID
        type: string
      - in: query
        name: githubUsername
        type: string
      - in: query
        name: googleID
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: nameInferredFromGithub
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List User entries
      tags:
      - Users
  /api/v2/users/{selector}:
    get:
      description: 'Get an existing User entry via one of its "selectors": email,
        numeric id, ''github/'' + GitHub username, ''github-id/'' + GitHub numeric
        id, or ''google-id/'' + Google numeric id.'
      parameters:
      - description: 'The User to get''s selector: email, numeric id, ''github/''
          + GitHub username, ''github-id/'' + GitHub numeric id, or ''google-id/''
          + Google numeric id'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a User entry
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: 'Edit an existing User entry via one of its "selectors": email,
        numeric id, ''github/'' + GitHub username, ''github-id/'' + GitHub numeric
        id, or ''google-id/'' + Google numeric id. Note that only mutable fields are
        available here, immutable fields can only be set using /create.'
      parameters:
      - description: 'The User to edit''s selector: email, numeric id, ''github/''
          + GitHub username, ''github-id/'' + GitHub numeric id, or ''google-id/''
          + Google numeric id'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a User entry
      tags:
      - Users
  /connection-check:
    get:
      description: Get a static response from Sherlock to verify connection through
        proxies like IAP.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.ConnectionCheckResponse'
      summary: Test the client's connection to Sherlock
      tags:
      - Misc
  /status:
    get:
      description: |-
        Get Sherlock's current status. Right now, this endpoint always returned OK (if the server is online).
        This endpoint is acceptable to use for a readiness check.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.StatusResponse'
      summary: Get Sherlock's current status
      tags:
      - Misc
  /version:
    get:
      description: Get the build version of this Sherlock instance.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.VersionResponse'
      summary: Get Sherlock's own current version
      tags:
      - Misc
produces:
- application/json
schemes:
- https
swagger: "2.0"
