consumes:
- application/json
definitions:
  errors.ErrorResponse:
    properties:
      message:
        type: string
      toBlame:
        type: string
      type:
        type: string
    type: object
  misc.ConnectionCheckResponse:
    properties:
      ok:
        description: Always true
        type: boolean
    type: object
  misc.StatusResponse:
    properties:
      ok:
        type: boolean
    type: object
  misc.VersionResponse:
    properties:
      buildInfo:
        additionalProperties:
          type: string
        type: object
      goVersion:
        type: string
      version:
        type: string
    type: object
  pagerduty.AlertSummary:
    properties:
      sourceLink:
        type: string
      summary:
        type: string
    type: object
  pagerduty.SendAlertResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  sherlock.AppVersionV3:
    properties:
      appVersion:
        description: Required when creating
        type: string
      authoredBy:
        type: string
      authoredByInfo:
        $ref: '#/definitions/sherlock.UserV3'
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/sherlock.ChartV3'
      ciIdentifier:
        $ref: '#/definitions/sherlock.CiIdentifierV3'
      createdAt:
        format: date-time
        type: string
      description:
        description: Generally the Git commit message
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      id:
        type: integer
      parentAppVersion:
        type: string
      parentAppVersionInfo:
        type: object
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.AppVersionV3ChangelogResponse:
    properties:
      changelog:
        items:
          $ref: '#/definitions/sherlock.AppVersionV3'
        type: array
      complete:
        type: boolean
    type: object
  sherlock.AppVersionV3Create:
    properties:
      appVersion:
        description: Required when creating
        type: string
      chart:
        description: Required when creating
        type: string
      description:
        description: Generally the Git commit message
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      parentAppVersion:
        type: string
    type: object
  sherlock.AppVersionV3Edit:
    properties:
      description:
        description: Generally the Git commit message
        type: string
    type: object
  sherlock.ChangesetV3:
    properties:
      appliedAt:
        format: date-time
        type: string
      appliedBy:
        type: string
      appliedByInfo:
        $ref: '#/definitions/sherlock.UserV3'
      chartRelease:
        type: string
      chartReleaseInfo:
        $ref: '#/definitions/sherlock.ChartReleaseV3'
      ciIdentifier:
        $ref: '#/definitions/sherlock.CiIdentifierV3'
      createdAt:
        format: date-time
        type: string
      fromAppVersionBranch:
        type: string
      fromAppVersionCommit:
        type: string
      fromAppVersionExact:
        type: string
      fromAppVersionFollowChartRelease:
        type: string
      fromAppVersionReference:
        type: string
      fromAppVersionResolver:
        type: string
      fromChartVersionExact:
        type: string
      fromChartVersionFollowChartRelease:
        type: string
      fromChartVersionReference:
        type: string
      fromChartVersionResolver:
        type: string
      fromHelmfileRef:
        type: string
      fromHelmfileRefEnabled:
        type: boolean
      fromResolvedAt:
        format: date-time
        type: string
      id:
        type: integer
      newAppVersions:
        items:
          $ref: '#/definitions/sherlock.AppVersionV3'
        type: array
      newChartVersions:
        items:
          $ref: '#/definitions/sherlock.ChartVersionV3'
        type: array
      plannedBy:
        type: string
      plannedByInfo:
        $ref: '#/definitions/sherlock.UserV3'
      supersededAt:
        format: date-time
        type: string
      toAppVersionBranch:
        type: string
      toAppVersionCommit:
        type: string
      toAppVersionExact:
        type: string
      toAppVersionFollowChartRelease:
        type: string
      toAppVersionReference:
        type: string
      toAppVersionResolver:
        type: string
      toChartVersionExact:
        type: string
      toChartVersionFollowChartRelease:
        type: string
      toChartVersionReference:
        type: string
      toChartVersionResolver:
        type: string
      toHelmfileRef:
        type: string
      toHelmfileRefEnabled:
        type: boolean
      toResolvedAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.ChangesetV3PlanRequest:
    properties:
      chartReleases:
        items:
          $ref: '#/definitions/sherlock.ChangesetV3PlanRequestChartReleaseEntry'
        type: array
      environments:
        items:
          $ref: '#/definitions/sherlock.ChangesetV3PlanRequestEnvironmentEntry'
        type: array
      recreateChangesets:
        items:
          type: integer
        type: array
    type: object
  sherlock.ChangesetV3PlanRequestChartReleaseEntry:
    properties:
      chartRelease:
        type: string
      followVersionsFromOtherChartRelease:
        type: string
      toAppVersionBranch:
        type: string
      toAppVersionCommit:
        type: string
      toAppVersionExact:
        type: string
      toAppVersionFollowChartRelease:
        type: string
      toAppVersionResolver:
        type: string
      toChartVersionExact:
        type: string
      toChartVersionFollowChartRelease:
        type: string
      toChartVersionResolver:
        type: string
      toHelmfileRef:
        type: string
      toHelmfileRefEnabled:
        type: boolean
      useExactVersionsFromOtherChartRelease:
        type: string
    type: object
  sherlock.ChangesetV3PlanRequestEnvironmentEntry:
    properties:
      environment:
        type: string
      excludeCharts:
        items:
          type: string
        type: array
      followVersionsFromOtherEnvironment:
        type: string
      includeCharts:
        description: If omitted, will include all chart releases that haven't opted
          out of bulk updates
        items:
          type: string
        type: array
      useExactVersionsFromOtherEnvironment:
        type: string
    type: object
  sherlock.ChartReleaseV3:
    properties:
      appVersionBranch:
        description: When creating, will default to the app's mainline branch if no
          other app version info is present
        type: string
      appVersionCommit:
        type: string
      appVersionExact:
        type: string
      appVersionFollowChartRelease:
        type: string
      appVersionInfo:
        $ref: '#/definitions/sherlock.AppVersionV3'
      appVersionReference:
        type: string
      appVersionResolver:
        description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - follow
        - none
        type: string
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/sherlock.ChartV3'
      chartVersionExact:
        type: string
      chartVersionFollowChartRelease:
        type: string
      chartVersionInfo:
        $ref: '#/definitions/sherlock.ChartVersionV3'
      chartVersionReference:
        type: string
      chartVersionResolver:
        description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        - follow
        type: string
      ciIdentifier:
        $ref: '#/definitions/sherlock.CiIdentifierV3'
      cluster:
        description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        type: string
      clusterInfo:
        $ref: '#/definitions/sherlock.ClusterV3'
      createdAt:
        format: date-time
        type: string
      destinationType:
        description: Calculated field
        type: string
      environment:
        description: Either this or cluster must be provided.
        type: string
      environmentInfo:
        $ref: '#/definitions/sherlock.EnvironmentV3'
      helmfileRef:
        default: HEAD
        type: string
      helmfileRefEnabled:
        default: false
        type: boolean
      id:
        type: integer
      includedInBulkChangesets:
        default: true
        type: boolean
      name:
        description: When creating, will be calculated if left empty
        type: string
      namespace:
        description: When creating, will default to the environment's default namespace,
          if provided
        type: string
      pagerdutyIntegration:
        type: string
      pagerdutyIntegrationInfo:
        $ref: '#/definitions/sherlock.PagerdutyIntegrationV3'
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      resolvedAt:
        format: date-time
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.ChartReleaseV3Create:
    properties:
      appVersionBranch:
        description: When creating, will default to the app's mainline branch if no
          other app version info is present
        type: string
      appVersionCommit:
        type: string
      appVersionExact:
        type: string
      appVersionFollowChartRelease:
        type: string
      appVersionResolver:
        description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - follow
        - none
        type: string
      chart:
        description: Required when creating
        type: string
      chartVersionExact:
        type: string
      chartVersionFollowChartRelease:
        type: string
      chartVersionResolver:
        description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        - follow
        type: string
      cluster:
        description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        type: string
      environment:
        description: Either this or cluster must be provided.
        type: string
      helmfileRef:
        default: HEAD
        type: string
      helmfileRefEnabled:
        default: false
        type: boolean
      includedInBulkChangesets:
        default: true
        type: boolean
      name:
        description: When creating, will be calculated if left empty
        type: string
      namespace:
        description: When creating, will default to the environment's default namespace,
          if provided
        type: string
      pagerdutyIntegration:
        type: string
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
    type: object
  sherlock.ChartReleaseV3Edit:
    properties:
      includedInBulkChangesets:
        default: true
        type: boolean
      pagerdutyIntegration:
        type: string
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
    type: object
  sherlock.ChartV3:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      ciIdentifier:
        $ref: '#/definitions/sherlock.CiIdentifierV3'
      createdAt:
        format: date-time
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        description: Required when creating
        type: string
      pactParticipant:
        default: false
        type: boolean
      playbookURL:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.ChartV3Create:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      description:
        type: string
      name:
        description: Required when creating
        type: string
      pactParticipant:
        default: false
        type: boolean
      playbookURL:
        type: string
    type: object
  sherlock.ChartV3Edit:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      description:
        type: string
      pactParticipant:
        default: false
        type: boolean
      playbookURL:
        type: string
    type: object
  sherlock.ChartVersionV3:
    properties:
      authoredBy:
        type: string
      authoredByInfo:
        $ref: '#/definitions/sherlock.UserV3'
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/sherlock.ChartV3'
      chartVersion:
        description: Required when creating
        type: string
      ciIdentifier:
        $ref: '#/definitions/sherlock.CiIdentifierV3'
      createdAt:
        format: date-time
        type: string
      description:
        description: Generally the Git commit message
        type: string
      id:
        type: integer
      parentChartVersion:
        type: string
      parentChartVersionInfo:
        type: object
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.ChartVersionV3ChangelogResponse:
    properties:
      changelog:
        items:
          $ref: '#/definitions/sherlock.ChartVersionV3'
        type: array
      complete:
        type: boolean
    type: object
  sherlock.ChartVersionV3Create:
    properties:
      chart:
        description: Required when creating
        type: string
      chartVersion:
        description: Required when creating
        type: string
      description:
        description: Generally the Git commit message
        type: string
      parentChartVersion:
        type: string
    type: object
  sherlock.ChartVersionV3Edit:
    properties:
      description:
        description: Generally the Git commit message
        type: string
    type: object
  sherlock.CiIdentifierV3:
    properties:
      ciRuns:
        items:
          $ref: '#/definitions/sherlock.CiRunV3'
        type: array
      createdAt:
        format: date-time
        type: string
      id:
        type: integer
      resourceID:
        type: integer
      resourceStatus:
        description: Available only when querying a CiIdentifier via a CiRun, indicates
          the status of the run for that resource
        type: string
      resourceType:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.CiRunV3:
    properties:
      argoWorkflowsName:
        type: string
      argoWorkflowsNamespace:
        type: string
      argoWorkflowsTemplate:
        type: string
      createdAt:
        format: date-time
        type: string
      githubActionsAttemptNumber:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      githubActionsWorkflowPath:
        type: string
      id:
        type: integer
      notifySlackChannelsUponFailure:
        description: Slack channels to notify if this CiRun fails. This field is always
          appended to when mutated.
        items:
          type: string
        type: array
      notifySlackChannelsUponRetry:
        description: Slack channels to notify if this CiRun is retried. This field
          is always appended to when mutated. It will de-dupe with the other notify
          fields.
        items:
          type: string
        type: array
      notifySlackChannelsUponSuccess:
        description: Slack channels to notify if this CiRun succeeds. This field is
          always appended to when mutated.
        items:
          type: string
        type: array
      notifySlackCustomIcon:
        description: |-
          Icon to use for success or failure Slack notifications. Can be given either as a URL to an image or as a Slack emoji (using colon shortcodes, like :smiley:).
          An empty string is ignored to facilitate calling from GitHub Actions (where it's easier to pass an empty string than not send the field at all).
        type: string
      platform:
        type: string
      relatedResources:
        items:
          $ref: '#/definitions/sherlock.CiIdentifierV3'
        type: array
      resourceStatus:
        description: Available only when querying a CiRun via a CiIdentifier, indicates
          the status of the run for that resource
        type: string
      startedAt:
        type: string
      status:
        type: string
      terminalAt:
        type: string
      terminationHooksDispatchedAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.CiRunV3Upsert:
    properties:
      appVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      argoWorkflowsName:
        type: string
      argoWorkflowsNamespace:
        type: string
      argoWorkflowsTemplate:
        type: string
      changesets:
        description: Always appends; will eliminate duplicates. Spreads to associated
          chart releases, environments, and clusters.
        items:
          type: string
        type: array
      chartReleaseStatuses:
        additionalProperties:
          type: string
        description: Keys treated like chartReleases. Values set resource-specific
          statuses for chart releases and associated changesets, new app versions,
          and new chart versions.
        type: object
      chartReleases:
        description: Always appends; will eliminate duplicates. Spreads to associated
          environments and clusters.
        items:
          type: string
        type: array
      chartVersions:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      charts:
        description: Always appends; will eliminate duplicates.
        items:
          type: string
        type: array
      clusters:
        description: Always appends; will eliminate duplicates. Spreads to contained
          chart releases and their environments.
        items:
          type: string
        type: array
      environments:
        description: Always appends; will eliminate duplicates. Spreads to contained
          chart releases and their clusters.
        items:
          type: string
        type: array
      githubActionsAttemptNumber:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      githubActionsWorkflowPath:
        type: string
      ignoreBadSelectors:
        default: false
        description: If set to true, errors handling selectors for relations should
          be ignored. Normally, passing an unknown chart, cluster, etc. will abort
          the request, but they won't if this is true.
        type: boolean
      notifySlackChannelsUponFailure:
        description: Slack channels to notify if this CiRun fails. This field is always
          appended to when mutated.
        items:
          type: string
        type: array
      notifySlackChannelsUponRetry:
        description: Slack channels to notify if this CiRun is retried. This field
          is always appended to when mutated. It will de-dupe with the other notify
          fields.
        items:
          type: string
        type: array
      notifySlackChannelsUponSuccess:
        description: Slack channels to notify if this CiRun succeeds. This field is
          always appended to when mutated.
        items:
          type: string
        type: array
      notifySlackCustomIcon:
        description: |-
          Icon to use for success or failure Slack notifications. Can be given either as a URL to an image or as a Slack emoji (using colon shortcodes, like :smiley:).
          An empty string is ignored to facilitate calling from GitHub Actions (where it's easier to pass an empty string than not send the field at all).
        type: string
      platform:
        type: string
      relateToChangesetNewVersions:
        default: when-static
        description: Makes entries in the changesets field also spread to new app
          versions and chart versions deployed by the changeset. 'when-static' is
          the default and does this spreading only when the chart release is in a
          static environment.
        enum:
        - always
        - when-static
        - never
        type: string
      startedAt:
        type: string
      status:
        type: string
      terminalAt:
        type: string
    type: object
  sherlock.ClusterV3:
    properties:
      address:
        description: Required when creating
        type: string
      azureSubscription:
        description: Required when creating if provider is 'azure'
        type: string
      base:
        description: Required when creating
        type: string
      ciIdentifier:
        $ref: '#/definitions/sherlock.CiIdentifierV3'
      createdAt:
        format: date-time
        type: string
      googleProject:
        description: Required when creating if provider is 'google'
        type: string
      helmfileRef:
        default: HEAD
        type: string
      id:
        type: integer
      location:
        default: us-central1-a
        type: string
      name:
        description: Required when creating
        type: string
      provider:
        default: google
        enum:
        - google
        - azure
        type: string
      requiredRole:
        description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        type: string
      requiredRoleInfo:
        $ref: '#/definitions/sherlock.RoleV3'
      requiresSuitability:
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.ClusterV3Create:
    properties:
      address:
        description: Required when creating
        type: string
      azureSubscription:
        description: Required when creating if provider is 'azure'
        type: string
      base:
        description: Required when creating
        type: string
      googleProject:
        description: Required when creating if provider is 'google'
        type: string
      helmfileRef:
        default: HEAD
        type: string
      location:
        default: us-central1-a
        type: string
      name:
        description: Required when creating
        type: string
      provider:
        default: google
        enum:
        - google
        - azure
        type: string
      requiredRole:
        description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        type: string
      requiresSuitability:
        type: boolean
    type: object
  sherlock.ClusterV3Edit:
    properties:
      address:
        description: Required when creating
        type: string
      base:
        description: Required when creating
        type: string
      helmfileRef:
        default: HEAD
        type: string
      requiredRole:
        description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        type: string
      requiresSuitability:
        type: boolean
    type: object
  sherlock.DatabaseInstanceV3:
    properties:
      chartRelease:
        description: Required when creating
        type: string
      chartReleaseInfo:
        $ref: '#/definitions/sherlock.ChartReleaseV3'
      createdAt:
        format: date-time
        type: string
      defaultDatabase:
        description: When creating, defaults to the chart name
        type: string
      googleProject:
        description: Required if platform is 'google'
        type: string
      id:
        type: integer
      instanceName:
        description: Required if platform is 'google' or 'azure'
        type: string
      platform:
        default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.DatabaseInstanceV3Create:
    properties:
      chartRelease:
        description: Required when creating
        type: string
      defaultDatabase:
        description: When creating, defaults to the chart name
        type: string
      googleProject:
        description: Required if platform is 'google'
        type: string
      instanceName:
        description: Required if platform is 'google' or 'azure'
        type: string
      platform:
        default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        type: string
    type: object
  sherlock.DatabaseInstanceV3Edit:
    properties:
      defaultDatabase:
        description: When creating, defaults to the chart name
        type: string
      googleProject:
        description: Required if platform is 'google'
        type: string
      instanceName:
        description: Required if platform is 'google' or 'azure'
        type: string
      platform:
        default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        type: string
    type: object
  sherlock.EnvironmentV3:
    properties:
      autoPopulateChartReleases:
        default: true
        description: If true when creating, dynamic environments copy from template
          and template environments get the honeycomb chart
        type: boolean
      base:
        description: Required when creating
        type: string
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      ciIdentifier:
        $ref: '#/definitions/sherlock.CiIdentifierV3'
      createdAt:
        format: date-time
        type: string
      defaultCluster:
        type: string
      defaultClusterInfo:
        $ref: '#/definitions/sherlock.ClusterV3'
      defaultNamespace:
        description: When creating, will be calculated if left empty
        type: string
      deleteAfter:
        description: If set, the BEE will be automatically deleted after this time.
          Can be set to "" or Go's zero time value to clear the field.
        format: date-time
        type: string
      description:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      id:
        type: integer
      lifecycle:
        default: dynamic
        type: string
      name:
        description: When creating, will be calculated if dynamic, required otherwise
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      offline:
        default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        type: boolean
      offlineScheduleBeginEnabled:
        description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        type: boolean
      offlineScheduleBeginTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndEnabled:
        description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        type: boolean
      offlineScheduleEndTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndWeekends:
        type: boolean
      owner:
        description: When creating, will default to you
        type: string
      ownerInfo:
        $ref: '#/definitions/sherlock.UserV3'
      pactIdentifier:
        type: string
      pagerdutyIntegration:
        type: string
      pagerdutyIntegrationInfo:
        $ref: '#/definitions/sherlock.PagerdutyIntegrationV3'
      preventDeletion:
        default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        type: boolean
      requiredRole:
        description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        type: string
      requiredRoleInfo:
        $ref: '#/definitions/sherlock.RoleV3'
      requiresSuitability:
        type: boolean
      templateEnvironment:
        description: Required for dynamic environments
        type: string
      templateEnvironmentInfo:
        type: object
      uniqueResourcePrefix:
        description: When creating, will be calculated if left empty
        type: string
      updatedAt:
        format: date-time
        type: string
      valuesName:
        description: When creating, defaults to template name or environment name
        type: string
    type: object
  sherlock.EnvironmentV3Create:
    properties:
      autoPopulateChartReleases:
        default: true
        description: If true when creating, dynamic environments copy from template
          and template environments get the honeycomb chart
        type: boolean
      base:
        description: Required when creating
        type: string
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      defaultCluster:
        type: string
      defaultNamespace:
        description: When creating, will be calculated if left empty
        type: string
      deleteAfter:
        description: If set, the BEE will be automatically deleted after this time.
          Can be set to "" or Go's zero time value to clear the field.
        format: date-time
        type: string
      description:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      lifecycle:
        default: dynamic
        type: string
      name:
        description: When creating, will be calculated if dynamic, required otherwise
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      offline:
        default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        type: boolean
      offlineScheduleBeginEnabled:
        description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        type: boolean
      offlineScheduleBeginTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndEnabled:
        description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        type: boolean
      offlineScheduleEndTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndWeekends:
        type: boolean
      owner:
        description: When creating, will default to you
        type: string
      pactIdentifier:
        type: string
      pagerdutyIntegration:
        type: string
      preventDeletion:
        default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        type: boolean
      requiredRole:
        description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        type: string
      requiresSuitability:
        type: boolean
      templateEnvironment:
        description: Required for dynamic environments
        type: string
      uniqueResourcePrefix:
        description: When creating, will be calculated if left empty
        type: string
      valuesName:
        description: When creating, defaults to template name or environment name
        type: string
    type: object
  sherlock.EnvironmentV3Edit:
    properties:
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      defaultCluster:
        type: string
      deleteAfter:
        description: If set, the BEE will be automatically deleted after this time.
          Can be set to "" or Go's zero time value to clear the field.
        format: date-time
        type: string
      description:
        type: string
      helmfileRef:
        default: HEAD
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      offline:
        default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        type: boolean
      offlineScheduleBeginEnabled:
        description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        type: boolean
      offlineScheduleBeginTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndEnabled:
        description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        type: boolean
      offlineScheduleEndTime:
        description: Stored with timezone to determine day of the week
        format: date-time
        type: string
      offlineScheduleEndWeekends:
        type: boolean
      owner:
        description: When creating, will default to you
        type: string
      pactIdentifier:
        type: string
      pagerdutyIntegration:
        type: string
      preventDeletion:
        default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        type: boolean
      requiredRole:
        description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        type: string
      requiresSuitability:
        type: boolean
    type: object
  sherlock.GitCommitV3:
    properties:
      committedAt:
        type: string
      createdAt:
        format: date-time
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      gitRepo:
        type: string
      id:
        type: integer
      isMainBranch:
        type: boolean
      secSincePrev:
        type: integer
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.GitCommitV3Upsert:
    properties:
      committedAt:
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      gitRepo:
        type: string
      isMainBranch:
        type: boolean
    type: object
  sherlock.GithubActionsDeployHookTestRunRequest:
    properties:
      execute:
        description: Required, whether to fully run the GHA
        type: boolean
    type: object
  sherlock.GithubActionsDeployHookTestRunResponse:
    properties:
      ok:
        type: boolean
      url:
        type: string
    type: object
  sherlock.GithubActionsDeployHookV3:
    properties:
      createdAt:
        format: date-time
        type: string
      githubActionsDefaultRef:
        type: string
      githubActionsOwner:
        type: string
      githubActionsRefBehavior:
        default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        type: string
      githubActionsRepo:
        type: string
      githubActionsWorkflowInputs:
        description: These workflow inputs will be passed statically as-is to GitHub's
          workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event)
          as the `inputs` parameter object.
        type: object
      githubActionsWorkflowPath:
        type: string
      id:
        type: integer
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.GithubActionsDeployHookV3Create:
    properties:
      githubActionsDefaultRef:
        type: string
      githubActionsOwner:
        type: string
      githubActionsRefBehavior:
        default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        type: string
      githubActionsRepo:
        type: string
      githubActionsWorkflowInputs:
        description: These workflow inputs will be passed statically as-is to GitHub's
          workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event)
          as the `inputs` parameter object.
        type: object
      githubActionsWorkflowPath:
        type: string
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
    type: object
  sherlock.GithubActionsDeployHookV3Edit:
    properties:
      githubActionsDefaultRef:
        type: string
      githubActionsOwner:
        type: string
      githubActionsRefBehavior:
        default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        type: string
      githubActionsRepo:
        type: string
      githubActionsWorkflowInputs:
        description: These workflow inputs will be passed statically as-is to GitHub's
          workflow dispatch API (https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event)
          as the `inputs` parameter object.
        type: object
      githubActionsWorkflowPath:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
    type: object
  sherlock.GithubActionsJobV3:
    properties:
      createdAt:
        format: date-time
        type: string
      githubActionsAttemptNumber:
        type: integer
      githubActionsJobID:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      id:
        type: integer
      jobCreatedAt:
        format: date-time
        type: string
      jobStartedAt:
        format: date-time
        type: string
      jobTerminalAt:
        format: date-time
        type: string
      status:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.GithubActionsJobV3Create:
    properties:
      githubActionsAttemptNumber:
        type: integer
      githubActionsJobID:
        type: integer
      githubActionsOwner:
        type: string
      githubActionsRepo:
        type: string
      githubActionsRunID:
        type: integer
      jobCreatedAt:
        format: date-time
        type: string
      jobStartedAt:
        format: date-time
        type: string
      jobTerminalAt:
        format: date-time
        type: string
      status:
        type: string
    type: object
  sherlock.IncidentV3:
    properties:
      createdAt:
        format: date-time
        type: string
      description:
        type: string
      id:
        type: integer
      remediatedAt:
        type: string
      reviewCompletedAt:
        type: string
      startedAt:
        type: string
      ticket:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.IncidentV3Create:
    properties:
      description:
        type: string
      remediatedAt:
        type: string
      reviewCompletedAt:
        type: string
      startedAt:
        type: string
      ticket:
        type: string
    type: object
  sherlock.IncidentV3Edit:
    properties:
      description:
        type: string
      remediatedAt:
        type: string
      reviewCompletedAt:
        type: string
      startedAt:
        type: string
      ticket:
        type: string
    type: object
  sherlock.PagerdutyIntegrationV3:
    properties:
      createdAt:
        format: date-time
        type: string
      id:
        type: integer
      name:
        type: string
      pagerdutyID:
        type: string
      type:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.PagerdutyIntegrationV3Create:
    properties:
      key:
        type: string
      name:
        type: string
      pagerdutyID:
        type: string
      type:
        type: string
    type: object
  sherlock.PagerdutyIntegrationV3Edit:
    properties:
      key:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  sherlock.RoleAssignmentV3:
    properties:
      expiresAt:
        format: date-time
        type: string
      expiresIn:
        description: A Go time.Duration string that will be added to the current time
          to attempt to set expiresAt (this may be more convenient than setting expiresAt
          directly)
        type: string
      roleInfo:
        type: object
      suspended:
        description: If the assignment should be active. This field is only mutable
          through the API if the role doesn't automatically suspend non-suitable users
        type: boolean
      userInfo:
        type: object
    type: object
  sherlock.RoleAssignmentV3Edit:
    properties:
      expiresAt:
        format: date-time
        type: string
      expiresIn:
        description: A Go time.Duration string that will be added to the current time
          to attempt to set expiresAt (this may be more convenient than setting expiresAt
          directly)
        type: string
      suspended:
        description: If the assignment should be active. This field is only mutable
          through the API if the role doesn't automatically suspend non-suitable users
        type: boolean
    type: object
  sherlock.RoleV3:
    properties:
      assignments:
        items:
          $ref: '#/definitions/sherlock.RoleAssignmentV3'
        type: array
      autoAssignAllUsers:
        description: When true, Sherlock will automatically assign all users to this
          role who do not already have a role assignment
        type: boolean
      canBeGlassBrokenByRole:
        type: integer
      canBeGlassBrokenByRoleInfo:
        type: object
      createdAt:
        format: date-time
        type: string
      defaultGlassBreakDuration:
        type: string
      grantsDevAzureGroup:
        type: string
      grantsDevFirecloudGroup:
        type: string
      grantsProdAzureGroup:
        type: string
      grantsProdFirecloudGroup:
        type: string
      grantsQaFirecloudGroup:
        type: string
      grantsSherlockSuperAdmin:
        type: boolean
      id:
        type: integer
      name:
        type: string
      suspendNonSuitableUsers:
        description: When true, the "suspended" field on role assignments will be
          computed by Sherlock based on suitability instead of being a mutable API
          field
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.RoleV3Edit:
    properties:
      autoAssignAllUsers:
        description: When true, Sherlock will automatically assign all users to this
          role who do not already have a role assignment
        type: boolean
      canBeGlassBrokenByRole:
        type: integer
      defaultGlassBreakDuration:
        type: string
      grantsDevAzureGroup:
        type: string
      grantsDevFirecloudGroup:
        type: string
      grantsProdAzureGroup:
        type: string
      grantsProdFirecloudGroup:
        type: string
      grantsQaFirecloudGroup:
        type: string
      grantsSherlockSuperAdmin:
        type: boolean
      name:
        type: string
      suspendNonSuitableUsers:
        description: When true, the "suspended" field on role assignments will be
          computed by Sherlock based on suitability instead of being a mutable API
          field
        type: boolean
    type: object
  sherlock.SlackDeployHookTestRunRequest:
    properties:
      execute:
        description: Required, whether to actually send the Slack message
        type: boolean
    type: object
  sherlock.SlackDeployHookTestRunResponse:
    properties:
      ok:
        type: boolean
    type: object
  sherlock.SlackDeployHookV3:
    properties:
      createdAt:
        format: date-time
        type: string
      id:
        type: integer
      mentionPeople:
        type: boolean
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      slackChannel:
        type: string
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.SlackDeployHookV3Create:
    properties:
      mentionPeople:
        type: boolean
      onChartRelease:
        type: string
      onEnvironment:
        type: string
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      slackChannel:
        type: string
    type: object
  sherlock.SlackDeployHookV3Edit:
    properties:
      mentionPeople:
        type: boolean
      onFailure:
        type: boolean
      onSuccess:
        type: boolean
      slackChannel:
        type: string
    type: object
  sherlock.UserV3:
    properties:
      assignments:
        items:
          $ref: '#/definitions/sherlock.RoleAssignmentV3'
        type: array
      createdAt:
        format: date-time
        type: string
      email:
        type: string
      githubID:
        type: string
      githubUsername:
        type: string
      googleID:
        type: string
      id:
        type: integer
      name:
        type: string
      nameFrom:
        enum:
        - sherlock
        - github
        - slack
        type: string
      nameInferredFromGithub:
        description: |-
          Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.
          Will be set to true if the user account has no name and a GitHub account is linked.
        type: boolean
      slackID:
        type: string
      slackUsername:
        type: string
      suitabilityDescription:
        description: Available only in responses; describes the user's production-suitability
        type: string
      suitable:
        description: Available only in responses; indicates whether the user is production-suitable
        type: boolean
      updatedAt:
        format: date-time
        type: string
    type: object
  sherlock.UserV3Upsert:
    properties:
      githubAccessToken:
        description: |-
          An access token for the GitHub account to associate with the calling user. The access token isn't stored.
          The design here ensures that an association is only built when someone controls both accounts (Google via
          IAP and GitHub via this access token).
        type: string
      name:
        type: string
      nameFrom:
        enum:
        - sherlock
        - github
        - slack
        type: string
      nameInferredFromGithub:
        description: |-
          Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.
          Will be set to true if the user account has no name and a GitHub account is linked.
        type: boolean
    type: object
host: sherlock.dsp-devops-prod.broadinstitute.org
info:
  contact:
    email: dsp-devops@broadinstitute.org
    name: DSP DevOps
  description: |-
    The Data Science Platform's source-of-truth service.
    Note: this API will try to load and return associations in responses, so clients won't need to make as many requests. This behavior isn't recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
  license:
    name: BSD-3-Clause
    url: https://github.com/broadinstitute/sherlock/blob/main/LICENSE.txt
  title: Sherlock
  version: development
paths:
  /api/app-versions/procedures/v3/changelog:
    get:
      description: Get the path through parent references from a child AppVersion
        (inclusive) to a parent AppVersion (exclusive), if possible. Because parent
        references point from newer children to older parents, the newer AppVersion
        should be the child. The result will always exclude the parent.
      parameters:
      - description: The selector of the newer AppVersion for the changelog
        in: query
        name: child
        required: true
        type: string
      - description: The selector of the older AppVersion for the changelog
        in: query
        name: parent
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.AppVersionV3ChangelogResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a changelog between two AppVersions
      tags:
      - AppVersions
  /api/app-versions/v3:
    get:
      description: List AppVersions matching a filter.
      parameters:
      - description: Required when creating
        in: query
        name: appVersion
        type: string
      - in: query
        name: authoredBy
        type: string
      - description: Required when creating
        in: query
        name: chart
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Generally the Git commit message
        in: query
        name: description
        type: string
      - in: query
        name: gitBranch
        type: string
      - in: query
        name: gitCommit
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: parentAppVersion
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many AppVersions are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned AppVersions (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.AppVersionV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List AppVersions matching a filter
      tags:
      - AppVersions
    put:
      consumes:
      - application/json
      description: Upsert a AppVersion.
      parameters:
      - description: The AppVersion to upsert
        in: body
        name: appVersion
        required: true
        schema:
          $ref: '#/definitions/sherlock.AppVersionV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.AppVersionV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Upsert a AppVersion
      tags:
      - AppVersions
  /api/app-versions/v3/{selector}:
    get:
      description: Get an individual AppVersion.
      parameters:
      - description: The selector of the AppVersion, which can be either a numeric
          ID or chart/version.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.AppVersionV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual AppVersion
      tags:
      - AppVersions
    patch:
      description: Edit an individual AppVersion.
      parameters:
      - description: The selector of the AppVersion, which can be either a numeric
          ID or chart/version.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the AppVersion
        in: body
        name: appVersion
        required: true
        schema:
          $ref: '#/definitions/sherlock.AppVersionV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.AppVersionV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual AppVersion
      tags:
      - AppVersions
  /api/changesets/procedures/v3/apply:
    post:
      consumes:
      - application/json
      description: |-
        Looks up and applies previously-planned version diffs given by the ID. Other stored plans against the same Chart Releases are marked as superseded.
        Multiple Changesets can be specified simply by passing multiple IDs in the list.
      parameters:
      - description: String IDs of the Changesets to apply
        in: body
        name: apply-request
        required: true
        schema:
          items:
            type: string
          type: array
      - description: If full information about the changesets should be returned,
          defaults to true. If false, only the IDs will be returned.
        in: query
        name: verbose-output
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Apply previously planned version changes to Chart Releases
      tags:
      - Changesets
  /api/changesets/procedures/v3/chart-release-history/{chart-release}:
    get:
      description: List existing applied Changesets for a particular Chart Release,
        ordered by most recently applied.
      parameters:
      - description: Selector of the Chart Release to find applied Changesets for
        in: path
        name: chart-release
        required: true
        type: string
      - description: An optional offset to skip a number of latest Changesets
        in: query
        name: offset
        type: integer
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List applied Changesets for a Chart Release
      tags:
      - Changesets
  /api/changesets/procedures/v3/plan:
    post:
      consumes:
      - application/json
      description: Refreshes and calculates version diffs for Chart Releases. If there's
        a diff, the plan is stored and returned so it can be applied later.
      parameters:
      - description: Info on what version changes or refreshes to plan
        in: body
        name: changeset-plan-request
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChangesetV3PlanRequest'
      - description: If full information about the changesets should be returned,
          defaults to true. If false, only the IDs will be returned.
        in: query
        name: verbose-output
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Plan--but do not apply--version changes to Chart Releases
      tags:
      - Changesets
  /api/changesets/procedures/v3/plan-and-apply:
    post:
      consumes:
      - application/json
      description: Like calling the plan procedure immediately followed by the apply
        procedure. See those endpoints for more information.
      parameters:
      - description: Info on what version changes or refreshes to apply.
        in: body
        name: changeset-plan-request
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChangesetV3PlanRequest'
      - description: If full information about the changesets should be returned,
          defaults to true. If false, only the IDs will be returned.
        in: query
        name: verbose-output
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Plan and apply version changes in one step
      tags:
      - Changesets
  /api/changesets/procedures/v3/version-history/{version-type}/{chart}/{version}:
    get:
      description: List existing applied Changesets that newly deployed a given App
        Version or Chart Version, ordered by most recently applied.
      parameters:
      - description: The type of the version, either 'app' or 'chart'
        enum:
        - app
        - chart
        in: path
        name: version-type
        required: true
        type: string
      - description: The chart the version belongs to
        in: path
        name: chart
        required: true
        type: string
      - description: The version to look for
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List applied Changesets for an App or Chart Version
      tags:
      - Changesets
  /api/changesets/v3:
    get:
      description: List Changesets matching a filter.
      parameters:
      - format: date-time
        in: query
        name: appliedAt
        type: string
      - in: query
        name: appliedBy
        type: string
      - in: query
        name: chartRelease
        type: string
      - in: query
        name: fromAppVersionBranch
        type: string
      - in: query
        name: fromAppVersionCommit
        type: string
      - in: query
        name: fromAppVersionExact
        type: string
      - in: query
        name: fromAppVersionFollowChartRelease
        type: string
      - in: query
        name: fromAppVersionReference
        type: string
      - in: query
        name: fromAppVersionResolver
        type: string
      - in: query
        name: fromChartVersionExact
        type: string
      - in: query
        name: fromChartVersionFollowChartRelease
        type: string
      - in: query
        name: fromChartVersionReference
        type: string
      - in: query
        name: fromChartVersionResolver
        type: string
      - in: query
        name: fromHelmfileRef
        type: string
      - in: query
        name: fromHelmfileRefEnabled
        type: boolean
      - format: date-time
        in: query
        name: fromResolvedAt
        type: string
      - in: query
        name: plannedBy
        type: string
      - format: date-time
        in: query
        name: supersededAt
        type: string
      - in: query
        name: toAppVersionBranch
        type: string
      - in: query
        name: toAppVersionCommit
        type: string
      - in: query
        name: toAppVersionExact
        type: string
      - in: query
        name: toAppVersionFollowChartRelease
        type: string
      - in: query
        name: toAppVersionReference
        type: string
      - in: query
        name: toAppVersionResolver
        type: string
      - in: query
        name: toChartVersionExact
        type: string
      - in: query
        name: toChartVersionFollowChartRelease
        type: string
      - in: query
        name: toChartVersionReference
        type: string
      - in: query
        name: toChartVersionResolver
        type: string
      - in: query
        name: toHelmfileRef
        type: string
      - in: query
        name: toHelmfileRefEnabled
        type: boolean
      - format: date-time
        in: query
        name: toResolvedAt
        type: string
      - collectionFormat: csv
        description: Get specific changesets by their IDs, can be passed multiple
          times and/or be comma-separated
        in: query
        items:
          type: integer
        name: id
        type: array
      - description: Control how many Changesets are returned (default 100), ignored
          if specific IDs are passed
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Changesets (default 0), ignored
          if specific IDs are passed
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChangesetV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Changesets matching a filter
      tags:
      - Changesets
  /api/changesets/v3/{id}:
    get:
      description: Get an individual Changeset.
      parameters:
      - description: The numeric ID of the changeset
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChangesetV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual Changeset
      tags:
      - Changesets
  /api/chart-releases/v3:
    get:
      description: List ChartReleases matching a filter.
      parameters:
      - description: When creating, will default to the app's mainline branch if no
          other app version info is present
        in: query
        name: appVersionBranch
        type: string
      - in: query
        name: appVersionCommit
        type: string
      - in: query
        name: appVersionExact
        type: string
      - in: query
        name: appVersionFollowChartRelease
        type: string
      - in: query
        name: appVersionReference
        type: string
      - description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - follow
        - none
        in: query
        name: appVersionResolver
        type: string
      - description: Required when creating
        in: query
        name: chart
        type: string
      - in: query
        name: chartVersionExact
        type: string
      - in: query
        name: chartVersionFollowChartRelease
        type: string
      - in: query
        name: chartVersionReference
        type: string
      - description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        - follow
        in: query
        name: chartVersionResolver
        type: string
      - description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        in: query
        name: cluster
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Calculated field
        in: query
        name: destinationType
        type: string
      - description: Either this or cluster must be provided.
        in: query
        name: environment
        type: string
      - default: HEAD
        in: query
        name: helmfileRef
        type: string
      - default: false
        in: query
        name: helmfileRefEnabled
        type: boolean
      - in: query
        name: id
        type: integer
      - default: true
        in: query
        name: includedInBulkChangesets
        type: boolean
      - description: When creating, will be calculated if left empty
        in: query
        name: name
        type: string
      - description: When creating, will default to the environment's default namespace,
          if provided
        in: query
        name: namespace
        type: string
      - in: query
        name: pagerdutyIntegration
        type: string
      - description: When creating, will use the chart's default if left empty
        in: query
        name: port
        type: integer
      - description: When creating, will use the chart's default if left empty
        in: query
        name: protocol
        type: string
      - format: date-time
        in: query
        name: resolvedAt
        type: string
      - description: When creating, will use the chart's default if left empty
        in: query
        name: subdomain
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many ChartReleases are returned (default 0, meaning
          all)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned ChartReleases (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChartReleaseV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartReleases matching a filter
      tags:
      - ChartReleases
    post:
      consumes:
      - application/json
      description: Create a ChartRelease.
      parameters:
      - description: The ChartRelease to create
        in: body
        name: chartRelease
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChartReleaseV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.ChartReleaseV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a ChartRelease
      tags:
      - ChartReleases
  /api/chart-releases/v3/{selector}:
    delete:
      description: Delete an individual ChartRelease by its ID.
      parameters:
      - description: The selector of the ChartRelease, which can be either a numeric
          ID, the name, environment + '/' + chart, or cluster + '/' + namespace +
          '/' + chart.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartReleaseV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual ChartRelease
      tags:
      - ChartReleases
    get:
      description: Get an individual ChartRelease.
      parameters:
      - description: The selector of the ChartRelease, which can be either a numeric
          ID, the name, environment + '/' + chart, or cluster + '/' + namespace +
          '/' + chart.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartReleaseV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual ChartRelease
      tags:
      - ChartReleases
    patch:
      description: Edit an individual ChartRelease.
      parameters:
      - description: The selector of the ChartRelease, which can be either a numeric
          ID, the name, environment + '/' + chart, or cluster + '/' + namespace +
          '/' + chart.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the ChartRelease
        in: body
        name: chartRelease
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChartReleaseV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartReleaseV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual ChartRelease
      tags:
      - ChartReleases
  /api/chart-versions/procedures/v3/changelog:
    get:
      description: Get the path through parent references from a child ChartVersion
        (inclusive) to a parent ChartVersion (exclusive), if possible. Because parent
        references point from newer children to older parents, the newer ChartVersion
        should be the child. The result will always exclude the parent.
      parameters:
      - description: The selector of the newer ChartVersion for the changelog
        in: query
        name: child
        required: true
        type: string
      - description: The selector of the older ChartVersion for the changelog
        in: query
        name: parent
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartVersionV3ChangelogResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a changelog between two ChartVersions
      tags:
      - ChartVersions
  /api/chart-versions/v3:
    get:
      description: List ChartVersions matching a filter.
      parameters:
      - in: query
        name: authoredBy
        type: string
      - description: Required when creating
        in: query
        name: chart
        type: string
      - description: Required when creating
        in: query
        name: chartVersion
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Generally the Git commit message
        in: query
        name: description
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: parentChartVersion
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many ChartVersions are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned ChartVersions (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChartVersionV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartVersions matching a filter
      tags:
      - ChartVersions
    put:
      consumes:
      - application/json
      description: Upsert a ChartVersion.
      parameters:
      - description: The ChartVersion to upsert
        in: body
        name: chartVersion
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChartVersionV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.ChartVersionV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Upsert a ChartVersion
      tags:
      - ChartVersions
  /api/chart-versions/v3/{selector}:
    get:
      description: Get an individual ChartVersion.
      parameters:
      - description: The selector of the ChartVersion, which can be either a numeric
          ID or chart/version.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartVersionV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual ChartVersion
      tags:
      - ChartVersions
    patch:
      description: Edit an individual ChartVersion.
      parameters:
      - description: The selector of the ChartVersion, which can be either a numeric
          ID or chart/version.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the ChartVersion
        in: body
        name: chartVersion
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChartVersionV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartVersionV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual ChartVersion
      tags:
      - ChartVersions
  /api/charts/v3:
    get:
      description: List Charts matching a filter.
      parameters:
      - in: query
        name: appImageGitMainBranch
        type: string
      - in: query
        name: appImageGitRepo
        type: string
      - default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        in: query
        name: chartExposesEndpoint
        type: boolean
      - default: terra-helm
        in: query
        name: chartRepo
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - default: 443
        in: query
        name: defaultPort
        type: integer
      - default: https
        in: query
        name: defaultProtocol
        type: string
      - description: When creating, will default to the name of the chart
        in: query
        name: defaultSubdomain
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: id
        type: integer
      - description: Required when creating
        in: query
        name: name
        type: string
      - default: false
        in: query
        name: pactParticipant
        type: boolean
      - in: query
        name: playbookURL
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many Charts are returned (default 0, meaning all)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Charts (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ChartV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Charts matching a filter
      tags:
      - Charts
    post:
      consumes:
      - application/json
      description: Create a Chart.
      parameters:
      - description: The Chart to create
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChartV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.ChartV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a Chart
      tags:
      - Charts
  /api/charts/v3/{selector}:
    delete:
      description: Delete an individual Chart by its ID.
      parameters:
      - description: The selector of the Chart, which can be either a numeric ID or
          the name.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual Chart
      tags:
      - Charts
    get:
      description: Get an individual Chart.
      parameters:
      - description: The selector of the Chart, which can be either a numeric ID or
          the name.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual Chart
      tags:
      - Charts
    patch:
      description: Edit an individual Chart.
      parameters:
      - description: The selector of the Chart, which can be either a numeric ID or
          the name.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Chart
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/sherlock.ChartV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ChartV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual Chart
      tags:
      - Charts
  /api/ci-identifiers/v3:
    get:
      description: |-
        List CiIdentifiers matching a filter. The CiRuns would have to re-queried directly to load the CiRuns.
        This is mainly helpful for debugging and directly querying the existence of a CiIdentifier. Results are
        ordered by creation date, starting at most recent.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: resourceID
        type: integer
      - description: Available only when querying a CiIdentifier via a CiRun, indicates
          the status of the run for that resource
        in: query
        name: resourceStatus
        type: string
      - in: query
        name: resourceType
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many CiIdentifiers are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned CiIdentifiers (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.CiIdentifierV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiIdentifiers matching a filter
      tags:
      - CiIdentifiers
  /api/ci-identifiers/v3/{selector}:
    get:
      description: Get CiRuns for a resource by its CiIdentifier, which can be referenced
        by '{type}/{selector...}'.
      parameters:
      - description: The selector of CiIdentifier, which can be referenced either
          by numeric ID or indirectly by '{type}/{selector...}'
        in: path
        name: selector
        required: true
        type: string
      - description: Control how many CiRuns are returned (default 10)
        in: query
        name: limitCiRuns
        type: integer
      - description: Control the offset for the returned CiRuns (default 0)
        in: query
        name: offsetCiRuns
        type: integer
      - description: Allow stub CiRuns potentially lacking fields like status or startedAt
          to be returned (default false)
        in: query
        name: allowStubCiRuns
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.CiIdentifierV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get CiRuns for a resource by its CiIdentifier
      tags:
      - CiIdentifiers
  /api/ci-runs/procedures/v3/github-info:
    get:
      description: |-
        List info about GitHub repos and their workflow files as determined by CiRuns from the past 90 days.
        This is a useful proxy for figuring out what repos Sherlock probably has access to: workflows listed
        here can probably successfully called by a GitHub Actions deploy hook.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              additionalProperties:
                items:
                  type: string
                type: array
              type: object
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List GitHub info gleaned from CiRuns
      tags:
      - CiRuns
  /api/ci-runs/v3:
    get:
      description: |-
        List CiRuns matching a filter. The CiRuns would have to re-queried directly to load any related resources.
        Results are ordered by start time, starting at most recent.
      parameters:
      - in: query
        name: argoWorkflowsName
        type: string
      - in: query
        name: argoWorkflowsNamespace
        type: string
      - in: query
        name: argoWorkflowsTemplate
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: githubActionsAttemptNumber
        type: integer
      - in: query
        name: githubActionsOwner
        type: string
      - in: query
        name: githubActionsRepo
        type: string
      - in: query
        name: githubActionsRunID
        type: integer
      - in: query
        name: githubActionsWorkflowPath
        type: string
      - in: query
        name: id
        type: integer
      - collectionFormat: csv
        description: Slack channels to notify if this CiRun fails. This field is always
          appended to when mutated.
        in: query
        items:
          type: string
        name: notifySlackChannelsUponFailure
        type: array
      - collectionFormat: csv
        description: Slack channels to notify if this CiRun is retried. This field
          is always appended to when mutated. It will de-dupe with the other notify
          fields.
        in: query
        items:
          type: string
        name: notifySlackChannelsUponRetry
        type: array
      - collectionFormat: csv
        description: Slack channels to notify if this CiRun succeeds. This field is
          always appended to when mutated.
        in: query
        items:
          type: string
        name: notifySlackChannelsUponSuccess
        type: array
      - description: |-
          Icon to use for success or failure Slack notifications. Can be given either as a URL to an image or as a Slack emoji (using colon shortcodes, like :smiley:).
          An empty string is ignored to facilitate calling from GitHub Actions (where it's easier to pass an empty string than not send the field at all).
        in: query
        name: notifySlackCustomIcon
        type: string
      - in: query
        name: platform
        type: string
      - description: Available only when querying a CiRun via a CiIdentifier, indicates
          the status of the run for that resource
        in: query
        name: resourceStatus
        type: string
      - in: query
        name: startedAt
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: terminalAt
        type: string
      - format: date-time
        in: query
        name: terminationHooksDispatchedAt
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many CiRuns are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned CiRuns (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.CiRunV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List CiRuns matching a filter
      tags:
      - CiRuns
    put:
      consumes:
      - application/json
      description: |-
        Create or update a CiRun with timing, status, and related resource information. This endpoint is idempotent.
        The fields for clusters, charts, chart releases, environments, etc. all accept selectors, and they will
        be smart about "spreading" to indirect relations. More info is available on the CiRunV3Upsert data type,
        but the gist is that specifying a changeset implies its chart release (and optionally app/chart versions),
        specifying or implying a chart release implies its environment/cluster, and specifying an environment/cluster
        implies all chart releases they contain.
      parameters:
      - description: The CiRun to upsert
        in: body
        name: ciRun
        required: true
        schema:
          $ref: '#/definitions/sherlock.CiRunV3Upsert'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.CiRunV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or update a CiRun
      tags:
      - CiRuns
  /api/ci-runs/v3/{selector}:
    get:
      description: Get a CiRun, including CiIdentifiers representing related resources
        or resources it affected.
      parameters:
      - description: The selector of the CiRun, which can be either its numeric ID,
          'github-actions/{owner}/{repo}/{run ID}/{attempt}', or 'argo-workflows/{namespace}/{name}'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.CiRunV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a CiRun, including CiIdentifiers for related resources
      tags:
      - CiRuns
  /api/clusters/v3:
    get:
      description: List Clusters matching a filter.
      parameters:
      - description: Required when creating
        in: query
        name: address
        type: string
      - description: Required when creating if provider is 'azure'
        in: query
        name: azureSubscription
        type: string
      - description: Required when creating
        in: query
        name: base
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: Required when creating if provider is 'google'
        in: query
        name: googleProject
        type: string
      - default: HEAD
        in: query
        name: helmfileRef
        type: string
      - in: query
        name: id
        type: integer
      - default: us-central1-a
        in: query
        name: location
        type: string
      - description: Required when creating
        in: query
        name: name
        type: string
      - default: google
        enum:
        - google
        - azure
        in: query
        name: provider
        type: string
      - description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        in: query
        name: requiredRole
        type: string
      - in: query
        name: requiresSuitability
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many Clusters are returned (default 0, meaning all)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Clusters (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.ClusterV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Clusters matching a filter
      tags:
      - Clusters
    post:
      consumes:
      - application/json
      description: Create a Cluster.
      parameters:
      - description: The Cluster to create
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/sherlock.ClusterV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.ClusterV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a Cluster
      tags:
      - Clusters
  /api/clusters/v3/{selector}:
    delete:
      description: Delete an individual Cluster by its ID.
      parameters:
      - description: The selector of the Cluster, which can be either a numeric ID
          or the name.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ClusterV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual Cluster
      tags:
      - Clusters
    get:
      description: Get an individual Cluster.
      parameters:
      - description: The selector of the Cluster, which can be either a numeric ID
          or the name.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ClusterV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual Cluster
      tags:
      - Clusters
    patch:
      description: Edit an individual Cluster.
      parameters:
      - description: The selector of the Cluster, which can be either a numeric ID
          or the name.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Cluster
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/sherlock.ClusterV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.ClusterV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual Cluster
      tags:
      - Clusters
  /api/database-instances/v3:
    get:
      description: List DatabaseInstances matching a filter.
      parameters:
      - description: Required when creating
        in: query
        name: chartRelease
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - description: When creating, defaults to the chart name
        in: query
        name: defaultDatabase
        type: string
      - description: Required if platform is 'google'
        in: query
        name: googleProject
        type: string
      - in: query
        name: id
        type: integer
      - description: Required if platform is 'google' or 'azure'
        in: query
        name: instanceName
        type: string
      - default: kubernetes
        description: '''google'', ''azure'', or default ''kubernetes'''
        in: query
        name: platform
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many DatabaseInstances are returned (default 0, meaning
          all)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned DatabaseInstances (default
          0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.DatabaseInstanceV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List DatabaseInstances matching a filter
      tags:
      - DatabaseInstances
    post:
      consumes:
      - application/json
      description: Create a DatabaseInstance.
      parameters:
      - description: The DatabaseInstance to create
        in: body
        name: databaseInstance
        required: true
        schema:
          $ref: '#/definitions/sherlock.DatabaseInstanceV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.DatabaseInstanceV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a DatabaseInstance
      tags:
      - DatabaseInstances
    put:
      consumes:
      - application/json
      description: Create or edit a DatabaseInstance, depending on whether one already
        exists for the chart release
      parameters:
      - description: The DatabaseInstance to create or edit. Defaults will only be
          set if creating.
        in: body
        name: databaseInstance
        required: true
        schema:
          $ref: '#/definitions/sherlock.DatabaseInstanceV3Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.DatabaseInstanceV3'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.DatabaseInstanceV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create or edit a DatabaseInstance
      tags:
      - DatabaseInstances
  /api/database-instances/v3/{selector}:
    delete:
      description: Delete an individual DatabaseInstance by its selector.
      parameters:
      - description: The selector of the DatabaseInstance, which can be either a numeric
          ID or 'chart-release/' followed by a chart release selector.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.DatabaseInstanceV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual DatabaseInstance
      tags:
      - DatabaseInstances
    get:
      description: Get an individual DatabaseInstance by its selector.
      parameters:
      - description: The selector of the DatabaseInstance, which can be either a numeric
          ID or 'chart-release/' followed by a chart release selector.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.DatabaseInstanceV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual DatabaseInstance
      tags:
      - DatabaseInstances
    patch:
      description: Edit an individual DatabaseInstance by its selector.
      parameters:
      - description: The selector of the DatabaseInstance, which can be either a numeric
          ID or 'chart-release/' followed by a chart release selector.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the DatabaseInstance
        in: body
        name: databaseInstance
        required: true
        schema:
          $ref: '#/definitions/sherlock.DatabaseInstanceV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.DatabaseInstanceV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual DatabaseInstance
      tags:
      - DatabaseInstances
  /api/deploy-hooks/github-actions/procedures/v3/test/{selector}:
    post:
      description: Run a GitHub Action to simulate a GithubActionsDeployHook
      parameters:
      - description: The ID of the GithubActionsDeployHook
        in: path
        name: selector
        required: true
        type: string
      - description: Whether to fully execute the hook (JSON body helps with CSRF
          protection)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/sherlock.GithubActionsDeployHookTestRunRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookTestRunResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Test a GithubActionsDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/github-actions/v3:
    get:
      description: List GithubActionsDeployHooks matching a filter.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: githubActionsDefaultRef
        type: string
      - in: query
        name: githubActionsOwner
        type: string
      - default: always-use-default-ref
        description: This field determines what git ref the workflow will be run on.
          The default of always-use-default-ref always uses the default ref; use-app-version-as-ref
          will use the app version (when available) as the ref, useful when versions
          are always commit hashes or tags; use-app-version-commit-as-ref will use
          the app version's commit (when available) as the ref, useful when the repo
          is configured to fully report app versions to Sherlock.
        enum:
        - always-use-default-ref
        - use-app-version-as-ref
        - use-app-version-commit-as-ref
        in: query
        name: githubActionsRefBehavior
        type: string
      - in: query
        name: githubActionsRepo
        type: string
      - in: query
        name: githubActionsWorkflowPath
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: onChartRelease
        type: string
      - in: query
        name: onEnvironment
        type: string
      - in: query
        name: onFailure
        type: boolean
      - in: query
        name: onSuccess
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many GithubActionsDeployHooks are returned (default
          100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned GithubActionsDeployHooks
          (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List GithubActionsDeployHooks matching a filter
      tags:
      - DeployHooks
    post:
      consumes:
      - application/json
      description: Create a GithubActionsDeployHook.
      parameters:
      - description: The GithubActionsDeployHook to create
        in: body
        name: githubActionsDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.GithubActionsDeployHookV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a GithubActionsDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/github-actions/v3/{selector}:
    delete:
      description: Delete an individual GithubActionsDeployHook by its ID.
      parameters:
      - description: The ID of the GithubActionsDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual GithubActionsDeployHook
      tags:
      - DeployHooks
    get:
      description: Get an individual GithubActionsDeployHook by its ID.
      parameters:
      - description: The ID of the GithubActionsDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual GithubActionsDeployHook
      tags:
      - DeployHooks
    patch:
      description: Edit an individual GithubActionsDeployHook by its ID.
      parameters:
      - description: The ID of the GithubActionsDeployHook to edit
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the GithubActionsDeployHook
        in: body
        name: githubActionsDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.GithubActionsDeployHookV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual GithubActionsDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/slack/procedures/v3/test/{selector}:
    post:
      description: Send a Slack message to simulate a SlackDeployHook
      parameters:
      - description: The ID of the SlackDeployHook to test
        in: path
        name: selector
        required: true
        type: string
      - description: Whether to fully execute the hook (JSON body helps with CSRF
          protection)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/sherlock.SlackDeployHookTestRunRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookTestRunResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Test a SlackDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/slack/v3:
    get:
      description: List SlackDeployHooks matching a filter.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: mentionPeople
        type: boolean
      - in: query
        name: onChartRelease
        type: string
      - in: query
        name: onEnvironment
        type: string
      - in: query
        name: onFailure
        type: boolean
      - in: query
        name: onSuccess
        type: boolean
      - in: query
        name: slackChannel
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many SlackDeployHooks are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned SlackDeployHooks (default
          0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.SlackDeployHookV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List SlackDeployHooks matching a filter
      tags:
      - DeployHooks
    post:
      consumes:
      - application/json
      description: Create a SlackDeployHook.
      parameters:
      - description: The SlackDeployHook to create
        in: body
        name: slackDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.SlackDeployHookV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a SlackDeployHook
      tags:
      - DeployHooks
  /api/deploy-hooks/slack/v3/{selector}:
    delete:
      description: Delete an individual SlackDeployHook by its ID.
      parameters:
      - description: The ID of the SlackDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual SlackDeployHook
      tags:
      - DeployHooks
    get:
      description: Get an individual SlackDeployHook by its ID.
      parameters:
      - description: The ID of the SlackDeployHook
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual SlackDeployHook
      tags:
      - DeployHooks
    patch:
      description: Edit an individual SlackDeployHook by its ID.
      parameters:
      - description: The ID of the SlackDeployHook to edit
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the SlackDeployHook
        in: body
        name: slackDeployHook
        required: true
        schema:
          $ref: '#/definitions/sherlock.SlackDeployHookV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.SlackDeployHookV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual SlackDeployHook
      tags:
      - DeployHooks
  /api/environments/v3:
    get:
      description: List Environments matching a filter.
      parameters:
      - default: true
        description: If true when creating, dynamic environments copy from template
          and template environments get the honeycomb chart
        in: query
        name: autoPopulateChartReleases
        type: boolean
      - description: Required when creating
        in: query
        name: base
        type: string
      - default: bee.envs-terra.bio
        in: query
        name: baseDomain
        type: string
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: defaultCluster
        type: string
      - description: When creating, will be calculated if left empty
        in: query
        name: defaultNamespace
        type: string
      - description: If set, the BEE will be automatically deleted after this time.
          Can be set to "" or Go's zero time value to clear the field.
        format: date-time
        in: query
        name: deleteAfter
        type: string
      - in: query
        name: description
        type: string
      - default: HEAD
        in: query
        name: helmfileRef
        type: string
      - in: query
        name: id
        type: integer
      - default: dynamic
        in: query
        name: lifecycle
        type: string
      - description: When creating, will be calculated if dynamic, required otherwise
        in: query
        name: name
        type: string
      - default: true
        in: query
        name: namePrefixesDomain
        type: boolean
      - default: false
        description: Applicable for BEEs only, whether Thelma should render the BEE
          as "offline" zero replicas (this field is a target state, not a status)
        in: query
        name: offline
        type: boolean
      - description: When enabled, the BEE will be slated to go offline around the
          begin time each day
        in: query
        name: offlineScheduleBeginEnabled
        type: boolean
      - description: Stored with timezone to determine day of the week
        format: date-time
        in: query
        name: offlineScheduleBeginTime
        type: string
      - description: When enabled, the BEE will be slated to come online around the
          end time each weekday (each day if weekends enabled)
        in: query
        name: offlineScheduleEndEnabled
        type: boolean
      - description: Stored with timezone to determine day of the week
        format: date-time
        in: query
        name: offlineScheduleEndTime
        type: string
      - in: query
        name: offlineScheduleEndWeekends
        type: boolean
      - description: When creating, will default to you
        in: query
        name: owner
        type: string
      - in: query
        name: PactIdentifier
        type: string
      - in: query
        name: pagerdutyIntegration
        type: string
      - default: false
        description: Used to protect specific BEEs from deletion (thelma checks this
          field)
        in: query
        name: preventDeletion
        type: boolean
      - description: If present, requires membership in the given role for mutations.
          Set to an empty string to clear.
        in: query
        name: requiredRole
        type: string
      - in: query
        name: requiresSuitability
        type: boolean
      - description: Required for dynamic environments
        in: query
        name: templateEnvironment
        type: string
      - description: When creating, will be calculated if left empty
        in: query
        name: uniqueResourcePrefix
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: When creating, defaults to template name or environment name
        in: query
        name: valuesName
        type: string
      - description: Control how many Environments are returned (default 0, meaning
          all)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Environments (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.EnvironmentV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Environments matching a filter
      tags:
      - Environments
    post:
      consumes:
      - application/json
      description: Create a Environment.
      parameters:
      - description: The Environment to create
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/sherlock.EnvironmentV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.EnvironmentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a Environment
      tags:
      - Environments
  /api/environments/v3/{selector}:
    delete:
      description: Delete an individual Environment by its ID.
      parameters:
      - description: The selector of the Environment, which can be either a numeric
          ID, the name, or 'resource-prefix' + / + the unique resource prefix.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.EnvironmentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual Environment
      tags:
      - Environments
    get:
      description: Get an individual Environment.
      parameters:
      - description: The selector of the Environment, which can be either a numeric
          ID, the name, or 'resource-prefix' + / + the unique resource prefix.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.EnvironmentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual Environment
      tags:
      - Environments
    patch:
      description: Edit an individual Environment.
      parameters:
      - description: The selector of the Environment, which can be either a numeric
          ID, the name, or 'resource-prefix' + / + the unique resource prefix.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Environment
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/sherlock.EnvironmentV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.EnvironmentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual Environment
      tags:
      - Environments
  /api/git-commits/v3:
    put:
      consumes:
      - application/json
      description: Upsert a GitCommit.
      parameters:
      - description: The GitCommit to upsert
        in: body
        name: gitCommit
        required: true
        schema:
          $ref: '#/definitions/sherlock.GitCommitV3Upsert'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.GitCommitV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Upsert a GitCommit
      tags:
      - GitCommits
  /api/github-actions-jobs/v3:
    get:
      description: |-
        List GithubActionsJobs matching a filter.
        Results are ordered by start time, starting at most recent.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: githubActionsAttemptNumber
        type: integer
      - in: query
        name: githubActionsJobID
        type: integer
      - in: query
        name: githubActionsOwner
        type: string
      - in: query
        name: githubActionsRepo
        type: string
      - in: query
        name: githubActionsRunID
        type: integer
      - in: query
        name: id
        type: integer
      - format: date-time
        in: query
        name: jobCreatedAt
        type: string
      - format: date-time
        in: query
        name: jobStartedAt
        type: string
      - format: date-time
        in: query
        name: jobTerminalAt
        type: string
      - in: query
        name: status
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many GithubActionsJobs are returned (default 100)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned GithubActionsJobs (default
          0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.GithubActionsJobV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List GithubActionsJobs matching a filter
      tags:
      - GithubActionsJobs
    put:
      description: Upsert GithubActionsJob.
      parameters:
      - description: The GithubActionsJob to upsert
        in: body
        name: githubActionsJob
        required: true
        schema:
          $ref: '#/definitions/sherlock.GithubActionsJobV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.GithubActionsJobV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Upsert GithubActionsJob
      tags:
      - GithubActionsJobs
  /api/github-actions-jobs/v3/{selector}:
    get:
      description: Get an individual GithubActionsJob.
      parameters:
      - description: The selector of the GithubActionsJob, either Sherlock ID or '{owner}/{repo}/{job
          ID}'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.GithubActionsJobV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual GithubActionsJob
      tags:
      - GithubActionsJobs
  /api/incidents/v3:
    get:
      description: List Incidents matching a filter.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: remediatedAt
        type: string
      - in: query
        name: reviewCompletedAt
        type: string
      - in: query
        name: startedAt
        type: string
      - in: query
        name: ticket
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many Incidents are returned (default 0, meaning all)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Incidents (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.IncidentV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Incidents matching a filter
      tags:
      - Incidents
    post:
      consumes:
      - application/json
      description: Create a Incident.
      parameters:
      - description: The Incident to create
        in: body
        name: incident
        required: true
        schema:
          $ref: '#/definitions/sherlock.IncidentV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.IncidentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a Incident
      tags:
      - Incidents
  /api/incidents/v3/{selector}:
    delete:
      description: Delete an individual Incident by its ID.
      parameters:
      - description: The ID of the Incident
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.IncidentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual Incident
      tags:
      - Incidents
    get:
      description: Get an individual Incident.
      parameters:
      - description: The ID of the Incident
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.IncidentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual Incident
      tags:
      - Incidents
    patch:
      description: Edit an individual Incident.
      parameters:
      - description: The ID of the Incident
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Incident
        in: body
        name: incident
        required: true
        schema:
          $ref: '#/definitions/sherlock.IncidentV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.IncidentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual Incident
      tags:
      - Incidents
  /api/pagerduty-integrations/procedures/v3/trigger-incident/{selector}:
    post:
      description: Get an individual PagerdutyIntegration.
      parameters:
      - description: The selector of the PagerdutyIntegration, which can be either
          a numeric ID or pd-id/<pagerduty-id>.
        in: path
        name: selector
        required: true
        type: string
      - description: Summary of the incident
        in: body
        name: summary
        required: true
        schema:
          $ref: '#/definitions/pagerduty.AlertSummary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pagerduty.SendAlertResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual PagerdutyIntegration
      tags:
      - PagerdutyIntegrations
  /api/pagerduty-integrations/v3:
    get:
      description: List PagerdutyIntegrations matching a filter.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: pagerdutyID
        type: string
      - in: query
        name: type
        type: string
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many PagerdutyIntegrations are returned (default
          0, meaning all)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned PagerdutyIntegrations (default
          0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.PagerdutyIntegrationV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List PagerdutyIntegrations matching a filter
      tags:
      - PagerdutyIntegrations
    post:
      consumes:
      - application/json
      description: Create a PagerdutyIntegration. Duplicate Pagerduty IDs will be
        gracefully handled by editing the existing entry. This is partially opaque
        because some fields are writable but not readable.
      parameters:
      - description: The PagerdutyIntegration to create
        in: body
        name: pagerdutyIntegration
        required: true
        schema:
          $ref: '#/definitions/sherlock.PagerdutyIntegrationV3Create'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.PagerdutyIntegrationV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a PagerdutyIntegration
      tags:
      - PagerdutyIntegrations
  /api/pagerduty-integrations/v3/{selector}:
    delete:
      description: Delete an individual PagerdutyIntegration by its ID.
      parameters:
      - description: The selector of the PagerdutyIntegration, which can be either
          a numeric ID or pd-id/<pagerduty-id>.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.PagerdutyIntegrationV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete an individual PagerdutyIntegration
      tags:
      - PagerdutyIntegrations
    get:
      description: Get an individual PagerdutyIntegration.
      parameters:
      - description: The selector of the PagerdutyIntegration, which can be either
          a numeric ID or pd-id/<pagerduty-id>.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.PagerdutyIntegrationV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual PagerdutyIntegration
      tags:
      - PagerdutyIntegrations
    patch:
      description: Edit an individual PagerdutyIntegration.
      parameters:
      - description: The selector of the PagerdutyIntegration, which can be either
          a numeric ID or pd-id/<pagerduty-id>.
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the PagerdutyIntegration
        in: body
        name: pagerdutyIntegration
        required: true
        schema:
          $ref: '#/definitions/sherlock.PagerdutyIntegrationV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.PagerdutyIntegrationV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit an individual PagerdutyIntegration
      tags:
      - PagerdutyIntegrations
  /api/role-assignments/v3:
    get:
      description: List RoleAssignments matching a filter. The correct way to list
        RoleAssignments for a particular Role or User is to get that Role or User
        specifically, not to use this endpoint.
      parameters:
      - format: date-time
        in: query
        name: expiresAt
        type: string
      - description: A Go time.Duration string that will be added to the current time
          to attempt to set expiresAt (this may be more convenient than setting expiresAt
          directly)
        in: query
        name: expiresIn
        type: string
      - description: If the assignment should be active. This field is only mutable
          through the API if the role doesn't automatically suspend non-suitable users
        in: query
        name: suspended
        type: boolean
      - description: Control how many RoleAssignments are returned (default 0, no
          limit)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned RoleAssignments (default
          0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.RoleAssignmentV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List RoleAssignments matching a filter
      tags:
      - RoleAssignments
  /api/role-assignments/v3/{role-selector}/{user-selector}:
    delete:
      description: |-
        Delete the RoleAssignment between a given Role and User.
        Non-super-admins may only mutate RoleAssignments for themselves, only for roles they can break-glass into, and only with an expiry no further than the role's default break-glass duration in the future.
        Propagation will be triggered after this operation.
      parameters:
      - description: The selector of the Role, which can be either the numeric ID
          or the name
        in: path
        name: role-selector
        required: true
        type: string
      - description: The selector of the User, which can be either a numeric ID, the
          email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github
          numeric ID}'.
        in: path
        name: user-selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a RoleAssignment
      tags:
      - RoleAssignments
    get:
      description: Get the RoleAssignment between a given Role and User.
      parameters:
      - description: The selector of the Role, which can be either the numeric ID
          or the name
        in: path
        name: role-selector
        required: true
        type: string
      - description: The selector of the User, which can be either a numeric ID, the
          email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github
          numeric ID}'.
        in: path
        name: user-selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.RoleAssignmentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a RoleAssignment
      tags:
      - RoleAssignments
    patch:
      description: |-
        Edit the RoleAssignment between a given Role and User.
        Non-super-admins may only mutate RoleAssignments for themselves, only for roles they can break-glass into, and only with an expiry no further than the role's default break-glass duration in the future.
        Propagation will be triggered after this operation.
      parameters:
      - description: The selector of the Role, which can be either the numeric ID
          or the name
        in: path
        name: role-selector
        required: true
        type: string
      - description: The selector of the User, which can be either a numeric ID, the
          email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github
          numeric ID}'.
        in: path
        name: user-selector
        required: true
        type: string
      - description: The edits to make to the RoleAssignment
        in: body
        name: role-assignment
        required: true
        schema:
          $ref: '#/definitions/sherlock.RoleAssignmentV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.RoleAssignmentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a RoleAssignment
      tags:
      - RoleAssignments
    post:
      description: |-
        Create the RoleAssignment between a given Role and User.
        Non-super-admins may only mutate RoleAssignments for themselves, only for roles they can break-glass into, and only with an expiry no further than the role's default break-glass duration in the future.
        Propagation will be triggered after this operation.
      parameters:
      - description: The selector of the Role, which can be either the numeric ID
          or the name
        in: path
        name: role-selector
        required: true
        type: string
      - description: The selector of the User, which can be either a numeric ID, the
          email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github
          numeric ID}'.
        in: path
        name: user-selector
        required: true
        type: string
      - description: The initial fields to set for the new RoleAssignment
        in: body
        name: role-assignment
        required: true
        schema:
          $ref: '#/definitions/sherlock.RoleAssignmentV3Edit'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.RoleAssignmentV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a RoleAssignment
      tags:
      - RoleAssignments
  /api/roles/v3:
    get:
      description: List Roles matching a filter.
      parameters:
      - description: When true, Sherlock will automatically assign all users to this
          role who do not already have a role assignment
        in: query
        name: autoAssignAllUsers
        type: boolean
      - in: query
        name: canBeGlassBrokenByRole
        type: integer
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: defaultGlassBreakDuration
        type: string
      - in: query
        name: grantsDevAzureGroup
        type: string
      - in: query
        name: grantsDevFirecloudGroup
        type: string
      - in: query
        name: grantsProdAzureGroup
        type: string
      - in: query
        name: grantsProdFirecloudGroup
        type: string
      - in: query
        name: grantsQaFirecloudGroup
        type: string
      - in: query
        name: grantsSherlockSuperAdmin
        type: boolean
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - description: When true, the "suspended" field on role assignments will be
          computed by Sherlock based on suitability instead of being a mutable API
          field
        in: query
        name: suspendNonSuitableUsers
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many Roles are returned (default 0, no limit)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Roles (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.RoleV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Roles matching a filter
      tags:
      - Roles
    post:
      description: |-
        Create an individual Role with no one assigned to it.
        Only super-admins may mutate Roles.
        Propagation will be triggered after this operation.
      parameters:
      - description: The initial fields the Role should have set
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/sherlock.RoleV3Edit'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.RoleV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a Role
      tags:
      - Roles
  /api/roles/v3/{selector}:
    delete:
      description: |-
        Delete an individual Role.
        Only super-admins may mutate Roles.
        Propagation will NOT be triggered after this operation -- the grants will become un-managed by Sherlock and left as-is. Remove role assignments first to remove users from grants.
      parameters:
      - description: The selector of the Role, which can be either the numeric ID
          or the name
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.RoleV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a Role
      tags:
      - Roles
    get:
      description: Get an individual Role and the Users assigned to it.
      parameters:
      - description: The selector of the Role, which can be either the numeric ID
          or the name
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.RoleV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Role
      tags:
      - Roles
    patch:
      description: |-
        Edit an individual Role.
        Only super-admins may mutate Roles.
        Propagation will be triggered after this operation.
      parameters:
      - description: The selector of the Role, which can be either the numeric ID
          or the name
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/sherlock.RoleV3Edit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.RoleV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a Role
      tags:
      - Roles
  /api/users/v3:
    get:
      description: |-
        List Users matching a filter. The results will include suitability and other information.
        Note that the suitability info can't directly be filtered for at this time.
      parameters:
      - format: date-time
        in: query
        name: createdAt
        type: string
      - in: query
        name: email
        type: string
      - in: query
        name: githubID
        type: string
      - in: query
        name: githubUsername
        type: string
      - in: query
        name: googleID
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - enum:
        - sherlock
        - github
        - slack
        in: query
        name: nameFrom
        type: string
      - description: |-
          Controls whether Sherlock should automatically update the user's name based on a connected GitHub identity.
          Will be set to true if the user account has no name and a GitHub account is linked.
        in: query
        name: nameInferredFromGithub
        type: boolean
      - in: query
        name: slackID
        type: string
      - in: query
        name: slackUsername
        type: string
      - description: Available only in responses; describes the user's production-suitability
        in: query
        name: suitabilityDescription
        type: string
      - description: Available only in responses; indicates whether the user is production-suitable
        in: query
        name: suitable
        type: boolean
      - format: date-time
        in: query
        name: updatedAt
        type: string
      - description: Control how many Users are returned (default 0, no limit)
        in: query
        name: limit
        type: integer
      - description: Control the offset for the returned Users (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sherlock.UserV3'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Users matching a filter
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: |-
        Update the calling User's information. As with all authenticated Sherlock endpoints,
        newly-observed callers will have a User record added, meaning that this endpoint
        behaves like an upsert.
      parameters:
      - description: The User data to update
        in: body
        name: user
        schema:
          $ref: '#/definitions/sherlock.UserV3Upsert'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.UserV3'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sherlock.UserV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Update the calling User's information
      tags:
      - Users
  /api/users/v3/{selector}:
    get:
      description: Get an individual User. As a special case, "me" or "self" can be
        passed as the selector to get the current user.
      parameters:
      - description: The selector of the User, which can be either a numeric ID, the
          email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github
          numeric ID}'. As a special case, 'me' or 'self' can be passed to get the
          calling user.
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sherlock.UserV3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get an individual User
      tags:
      - Users
  /connection-check:
    get:
      description: Get a static response from Sherlock to verify connection through
        proxies like IAP.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.ConnectionCheckResponse'
      summary: Test the client's connection to Sherlock
      tags:
      - Misc
  /status:
    get:
      description: |-
        Get Sherlock's current status. Right now, this endpoint always returned OK (if the server is online).
        This endpoint is acceptable to use for a readiness check.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.StatusResponse'
      summary: Get Sherlock's current status
      tags:
      - Misc
  /version:
    get:
      description: Get the build version of this Sherlock instance.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.VersionResponse'
      summary: Get Sherlock's own current version
      tags:
      - Misc
produces:
- application/json
schemes:
- https
swagger: "2.0"
