consumes:
- application/json
definitions:
  auth.ExtraPermissions:
    properties:
      suitable:
        type: boolean
    type: object
  auth.FirecloudAccount:
    properties:
      acceptedGoogleTerms:
        type: boolean
      archived:
        type: boolean
      email:
        type: string
      enrolledIn2Fa:
        type: boolean
      groups:
        $ref: '#/definitions/auth.FirecloudGroupMembership'
      suspended:
        type: boolean
      suspensionReason:
        type: string
    type: object
  auth.FirecloudGroupMembership:
    properties:
      fc-admins:
        type: boolean
      firecloud-project-owners:
        type: boolean
    type: object
  auth.User:
    properties:
      authenticatedEmail:
        type: string
      matchedExtraPermissions:
        $ref: '#/definitions/auth.ExtraPermissions'
      matchedFirecloudAccount:
        $ref: '#/definitions/auth.FirecloudAccount'
    type: object
  errors.ErrorResponse:
    properties:
      message:
        type: string
      toBlame:
        type: string
      type:
        type: string
    type: object
  misc.MyUserResponse:
    properties:
      email:
        type: string
      rawInfo:
        $ref: '#/definitions/auth.User'
      suitability:
        type: string
    type: object
  misc.StatusResponse:
    properties:
      ok:
        type: boolean
    type: object
  misc.VersionResponse:
    properties:
      buildInfo:
        additionalProperties:
          type: string
        type: object
      goVersion:
        type: string
      version:
        type: string
    type: object
  v2controllers.AppVersion:
    properties:
      appVersion:
        description: Required when creating
        type: string
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/v2controllers.Chart'
      createdAt:
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      id:
        type: integer
      parentAppVersion:
        type: string
      parentAppVersionInfo:
        type: object
      updatedAt:
        type: string
    type: object
  v2controllers.Changeset:
    properties:
      appliedAt:
        type: string
      chartRelease:
        type: string
      chartReleaseInfo:
        $ref: '#/definitions/v2controllers.ChartRelease'
      createdAt:
        type: string
      fromAppVersionBranch:
        type: string
      fromAppVersionCommit:
        type: string
      fromAppVersionExact:
        type: string
      fromAppVersionInfo:
        $ref: '#/definitions/v2controllers.AppVersion'
      fromAppVersionReference:
        type: string
      fromAppVersionResolver:
        type: string
      fromChartVersionExact:
        type: string
      fromChartVersionInfo:
        $ref: '#/definitions/v2controllers.ChartVersion'
      fromChartVersionReference:
        type: string
      fromChartVersionResolver:
        type: string
      fromHelmfileRef:
        type: string
      fromResolvedAt:
        type: string
      id:
        type: integer
      newAppVersions:
        items:
          $ref: '#/definitions/v2controllers.AppVersion'
        type: array
      newChartVersions:
        items:
          $ref: '#/definitions/v2controllers.ChartVersion'
        type: array
      supersededAt:
        type: string
      toAppVersionBranch:
        type: string
      toAppVersionCommit:
        type: string
      toAppVersionExact:
        type: string
      toAppVersionInfo:
        $ref: '#/definitions/v2controllers.AppVersion'
      toAppVersionReference:
        type: string
      toAppVersionResolver:
        type: string
      toChartVersionExact:
        type: string
      toChartVersionInfo:
        $ref: '#/definitions/v2controllers.ChartVersion'
      toChartVersionReference:
        type: string
      toChartVersionResolver:
        type: string
      toHelmfileRef:
        type: string
      toResolvedAt:
        type: string
      updatedAt:
        type: string
    type: object
  v2controllers.ChangesetPlanRequest:
    properties:
      chartReleases:
        items:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequestChartReleaseEntry'
        type: array
      environments:
        items:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequestEnvironmentEntry'
        type: array
    type: object
  v2controllers.ChangesetPlanRequestChartReleaseEntry:
    properties:
      chartRelease:
        type: string
      toAppVersionBranch:
        type: string
      toAppVersionCommit:
        type: string
      toAppVersionExact:
        type: string
      toAppVersionResolver:
        type: string
      toChartVersionExact:
        type: string
      toChartVersionResolver:
        type: string
      toHelmfileRef:
        type: string
      useExactVersionsFromOtherChartRelease:
        type: string
    type: object
  v2controllers.ChangesetPlanRequestEnvironmentEntry:
    properties:
      environment:
        type: string
      excludeCharts:
        items:
          type: string
        type: array
      includeCharts:
        description: If omitted, will include all charts
        items:
          type: string
        type: array
      useExactVersionsFromOtherEnvironment:
        type: string
    type: object
  v2controllers.Chart:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      createdAt:
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      id:
        type: integer
      name:
        description: Required when creating
        type: string
      updatedAt:
        type: string
    type: object
  v2controllers.ChartRelease:
    properties:
      appVersionBranch:
        description: When creating, will default to the app's mainline branch if no
          other app version info is present
        type: string
      appVersionCommit:
        type: string
      appVersionExact:
        type: string
      appVersionInfo:
        $ref: '#/definitions/v2controllers.AppVersion'
      appVersionReference:
        type: string
      appVersionResolver:
        description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - none
        type: string
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/v2controllers.Chart'
      chartVersionExact:
        type: string
      chartVersionInfo:
        $ref: '#/definitions/v2controllers.ChartVersion'
      chartVersionReference:
        type: string
      chartVersionResolver:
        description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        type: string
      cluster:
        description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        type: string
      clusterInfo:
        $ref: '#/definitions/v2controllers.Cluster'
      createdAt:
        type: string
      destinationType:
        description: Calculated field
        type: string
      environment:
        description: Either this or cluster must be provided.
        type: string
      environmentInfo:
        $ref: '#/definitions/v2controllers.Environment'
      helmfileRef:
        default: HEAD
        type: string
      id:
        type: integer
      name:
        description: When creating, will be calculated if left empty
        type: string
      namespace:
        description: When creating, will default to the environment's default namespace,
          if provided
        type: string
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
      updatedAt:
        type: string
    type: object
  v2controllers.ChartVersion:
    properties:
      chart:
        description: Required when creating
        type: string
      chartInfo:
        $ref: '#/definitions/v2controllers.Chart'
      chartVersion:
        description: Required when creating
        type: string
      createdAt:
        type: string
      id:
        type: integer
      parentChartVersion:
        type: string
      parentChartVersionInfo:
        type: object
      updatedAt:
        type: string
    type: object
  v2controllers.Cluster:
    description: The full set of Cluster fields that can be read or used for filtering
      queries
    properties:
      address:
        description: Required when creating
        type: string
      azureSubscription:
        description: Required when creating if providers is 'azure'
        type: string
      base:
        description: Required when creating
        type: string
      createdAt:
        type: string
      googleProject:
        description: Required when creating if provider is 'google'
        type: string
      id:
        type: integer
      name:
        description: Required when creating
        type: string
      provider:
        default: google
        enum:
        - google
        - azure
        type: string
      requiresSuitability:
        default: false
        type: boolean
      updatedAt:
        type: string
    type: object
  v2controllers.CreatableAppVersion:
    properties:
      appVersion:
        description: Required when creating
        type: string
      chart:
        description: Required when creating
        type: string
      gitBranch:
        type: string
      gitCommit:
        type: string
      parentAppVersion:
        type: string
    type: object
  v2controllers.CreatableChangeset:
    properties:
      chartRelease:
        type: string
      toAppVersionBranch:
        type: string
      toAppVersionCommit:
        type: string
      toAppVersionExact:
        type: string
      toAppVersionResolver:
        type: string
      toChartVersionExact:
        type: string
      toChartVersionResolver:
        type: string
      toHelmfileRef:
        type: string
    type: object
  v2controllers.CreatableChart:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
      name:
        description: Required when creating
        type: string
    type: object
  v2controllers.CreatableChartRelease:
    properties:
      appVersionBranch:
        description: When creating, will default to the app's mainline branch if no
          other app version info is present
        type: string
      appVersionCommit:
        type: string
      appVersionExact:
        type: string
      appVersionResolver:
        description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - none
        type: string
      chart:
        description: Required when creating
        type: string
      chartVersionExact:
        type: string
      chartVersionResolver:
        description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        type: string
      cluster:
        description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        type: string
      environment:
        description: Either this or cluster must be provided.
        type: string
      helmfileRef:
        default: HEAD
        type: string
      name:
        description: When creating, will be calculated if left empty
        type: string
      namespace:
        description: When creating, will default to the environment's default namespace,
          if provided
        type: string
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
    type: object
  v2controllers.CreatableChartVersion:
    properties:
      chart:
        description: Required when creating
        type: string
      chartVersion:
        description: Required when creating
        type: string
      parentChartVersion:
        type: string
    type: object
  v2controllers.CreatableCluster:
    description: The subset of Cluster fields that can be set upon creation
    properties:
      address:
        description: Required when creating
        type: string
      azureSubscription:
        description: Required when creating if providers is 'azure'
        type: string
      base:
        description: Required when creating
        type: string
      googleProject:
        description: Required when creating if provider is 'google'
        type: string
      name:
        description: Required when creating
        type: string
      provider:
        default: google
        enum:
        - google
        - azure
        type: string
      requiresSuitability:
        default: false
        type: boolean
    type: object
  v2controllers.CreatableEnvironment:
    properties:
      base:
        description: Required when creating
        type: string
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      chartReleasesFromTemplate:
        default: true
        description: Upon creation of a dynamic environment, if this is true the template's
          chart releases will be copied to the new environment
        type: boolean
      defaultCluster:
        type: string
      defaultNamespace:
        type: string
      lifecycle:
        default: dynamic
        type: string
      name:
        description: When creating, will be calculated if dynamic, required otherwise
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      owner:
        description: When creating, will be set to your email
        type: string
      requiresSuitability:
        default: false
        type: boolean
      templateEnvironment:
        description: Required for dynamic environments
        type: string
    type: object
  v2controllers.EditableChart:
    properties:
      appImageGitMainBranch:
        type: string
      appImageGitRepo:
        type: string
      chartExposesEndpoint:
        default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        type: boolean
      chartRepo:
        default: terra-helm
        type: string
      defaultPort:
        default: 443
        type: integer
      defaultProtocol:
        default: https
        type: string
      defaultSubdomain:
        description: When creating, will default to the name of the chart
        type: string
    type: object
  v2controllers.EditableChartRelease:
    properties:
      port:
        description: When creating, will use the chart's default if left empty
        type: integer
      protocol:
        description: When creating, will use the chart's default if left empty
        type: string
      subdomain:
        description: When creating, will use the chart's default if left empty
        type: string
    type: object
  v2controllers.EditableCluster:
    description: The subset of Cluster fields that can be edited after creation
    properties:
      address:
        description: Required when creating
        type: string
      base:
        description: Required when creating
        type: string
      requiresSuitability:
        default: false
        type: boolean
    type: object
  v2controllers.EditableEnvironment:
    properties:
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      defaultCluster:
        type: string
      defaultNamespace:
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      owner:
        description: When creating, will be set to your email
        type: string
      requiresSuitability:
        default: false
        type: boolean
    type: object
  v2controllers.Environment:
    properties:
      base:
        description: Required when creating
        type: string
      baseDomain:
        default: bee.envs-terra.bio
        type: string
      chartReleasesFromTemplate:
        default: true
        description: Upon creation of a dynamic environment, if this is true the template's
          chart releases will be copied to the new environment
        type: boolean
      createdAt:
        type: string
      defaultCluster:
        type: string
      defaultClusterInfo:
        $ref: '#/definitions/v2controllers.Cluster'
      defaultNamespace:
        type: string
      id:
        type: integer
      lifecycle:
        default: dynamic
        type: string
      name:
        description: When creating, will be calculated if dynamic, required otherwise
        type: string
      namePrefixesDomain:
        default: true
        type: boolean
      owner:
        description: When creating, will be set to your email
        type: string
      requiresSuitability:
        default: false
        type: boolean
      templateEnvironment:
        description: Required for dynamic environments
        type: string
      templateEnvironmentInfo:
        description: Single-layer recursive; provides info of the template environment
          if this environment has one
        type: object
      updatedAt:
        type: string
      valuesName:
        type: string
    type: object
info:
  contact:
    email: dsp-devops@broadinstitute.org
    name: DSP DevOps
  description: |-
    The Data Science Platform's source-of-truth service.
    Note: this API will try to load and return associations in responses, so clients won't need to make as many requests. This behavior isn't recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
  license:
    name: BSD-3-Clause
    url: https://github.com/broadinstitute/sherlock/blob/main/LICENSE.txt
  title: Sherlock
  version: development
paths:
  /api/v2/app-versions:
    get:
      description: List existing AppVersion entries, ordered by most recently updated.
      parameters:
      - description: Required when creating
        in: query
        name: appVersion
        type: string
      - description: Required when creating
        in: query
        name: chart
        type: string
      - in: query
        name: createdAt
        type: string
      - in: query
        name: gitBranch
        type: string
      - in: query
        name: gitCommit
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: parentAppVersion
        type: string
      - in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.AppVersion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List AppVersion entries
      tags:
      - AppVersions
    post:
      consumes:
      - application/json
      description: |-
        Create a new AppVersion entry. Note that fields are immutable after creation.
        If the new entry is a duplicate of one already in the database, the database will not be altered and the call will return normally but with a 200 code.
      parameters:
      - description: The AppVersion to create
        in: body
        name: app-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableAppVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new AppVersion entry
      tags:
      - AppVersions
  /api/v2/app-versions/{selector}:
    get:
      description: 'Get an existing AppVersion entry via one its "selectors": chart/version
        or numeric ID.'
      parameters:
      - description: 'The AppVersion to get''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.AppVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a AppVersion entry
      tags:
      - AppVersions
  /api/v2/changesets:
    get:
      description: List existing Changeset entries, ordered by most recently updated.
      parameters:
      - in: query
        name: appliedAt
        type: string
      - in: query
        name: chartRelease
        type: string
      - in: query
        name: createdAt
        type: string
      - in: query
        name: fromAppVersionBranch
        type: string
      - in: query
        name: fromAppVersionCommit
        type: string
      - in: query
        name: fromAppVersionExact
        type: string
      - in: query
        name: fromAppVersionReference
        type: string
      - in: query
        name: fromAppVersionResolver
        type: string
      - in: query
        name: fromChartVersionExact
        type: string
      - in: query
        name: fromChartVersionReference
        type: string
      - in: query
        name: fromChartVersionResolver
        type: string
      - in: query
        name: fromHelmfileRef
        type: string
      - in: query
        name: fromResolvedAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: supersededAt
        type: string
      - in: query
        name: toAppVersionBranch
        type: string
      - in: query
        name: toAppVersionCommit
        type: string
      - in: query
        name: toAppVersionExact
        type: string
      - in: query
        name: toAppVersionReference
        type: string
      - in: query
        name: toAppVersionResolver
        type: string
      - in: query
        name: toChartVersionExact
        type: string
      - in: query
        name: toChartVersionReference
        type: string
      - in: query
        name: toChartVersionResolver
        type: string
      - in: query
        name: toHelmfileRef
        type: string
      - in: query
        name: toResolvedAt
        type: string
      - in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Changeset entries
      tags:
      - Changesets
    post:
      consumes:
      - application/json
      description: |-
        Create a new Changeset entry. Note that fields are immutable after creation.
        You'll likely want to use the plan endpoint instead, which conditionally creates a Changeset based on there actually being a version diff.
      parameters:
      - description: The Changeset to create
        in: body
        name: changeset
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChangeset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Changeset'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Changeset'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new Changeset entry
      tags:
      - Changesets
  /api/v2/changesets/{selector}:
    get:
      description: Get an existing Changeset entry via its "selector"--its numeric
        ID.
      parameters:
      - description: The Changeset to get's selector--numeric ID
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Changeset'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Changeset entry
      tags:
      - Changesets
  /api/v2/chart-releases:
    get:
      description: List existing ChartRelease entries, ordered by most recently updated.
      parameters:
      - description: When creating, will default to the app's mainline branch if no
          other app version info is present
        in: query
        name: appVersionBranch
        type: string
      - in: query
        name: appVersionCommit
        type: string
      - in: query
        name: appVersionExact
        type: string
      - in: query
        name: appVersionReference
        type: string
      - description: // When creating, will default to automatically reference any
          provided app version fields
        enum:
        - branch
        - commit
        - exact
        - none
        in: query
        name: appVersionResolver
        type: string
      - description: Required when creating
        in: query
        name: chart
        type: string
      - in: query
        name: chartVersionExact
        type: string
      - in: query
        name: chartVersionReference
        type: string
      - description: When creating, will default to automatically reference any provided
          chart version
        enum:
        - latest
        - exact
        in: query
        name: chartVersionResolver
        type: string
      - description: When creating, will default the environment's default cluster,
          if provided. Either this or environment must be provided.
        in: query
        name: cluster
        type: string
      - in: query
        name: createdAt
        type: string
      - description: Calculated field
        in: query
        name: destinationType
        type: string
      - description: Either this or cluster must be provided.
        in: query
        name: environment
        type: string
      - default: HEAD
        in: query
        name: helmfileRef
        type: string
      - in: query
        name: id
        type: integer
      - description: When creating, will be calculated if left empty
        in: query
        name: name
        type: string
      - description: When creating, will default to the environment's default namespace,
          if provided
        in: query
        name: namespace
        type: string
      - description: When creating, will use the chart's default if left empty
        in: query
        name: port
        type: integer
      - description: When creating, will use the chart's default if left empty
        in: query
        name: protocol
        type: string
      - description: When creating, will use the chart's default if left empty
        in: query
        name: subdomain
        type: string
      - in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.ChartRelease'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartRelease entries
      tags:
      - ChartReleases
    post:
      consumes:
      - application/json
      description: Create a new ChartRelease entry. Note that some fields are immutable
        after creation; /edit lists mutable fields.
      parameters:
      - description: The ChartRelease to create
        in: body
        name: chart-release
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChartRelease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new ChartRelease entry
      tags:
      - ChartReleases
  /api/v2/chart-releases/{selector}:
    delete:
      description: 'Delete an existing ChartRelease entry via one of its "selectors":
        name, numeric ID, environment/chart, or cluster/namespace/chart.'
      parameters:
      - description: The ChartRelease to delete's selector
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a ChartRelease entry
      tags:
      - ChartReleases
    get:
      description: 'Get an existing ChartRelease entry via one of its "selectors":
        name, numeric ID, environment/chart, or cluster/namespace/chart.'
      parameters:
      - description: The ChartRelease to get's selector
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a ChartRelease entry
      tags:
      - ChartReleases
    patch:
      consumes:
      - application/json
      description: 'Edit an existing ChartRelease entry via one of its "selectors":
        name, numeric ID, environment/chart, or cluster/namespace/chart. Note that
        only mutable fields are available here, immutable fields can only be set using
        /create.'
      parameters:
      - description: The ChartRelease to edit's selector
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the ChartRelease
        in: body
        name: chart-release
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableChartRelease'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartRelease'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a ChartRelease entry
      tags:
      - ChartReleases
  /api/v2/chart-versions:
    get:
      description: List existing ChartVersion entries, ordered by most recently updated.
      parameters:
      - description: Required when creating
        in: query
        name: chart
        type: string
      - description: Required when creating
        in: query
        name: chartVersion
        type: string
      - in: query
        name: createdAt
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: parentChartVersion
        type: string
      - in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.ChartVersion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartVersion entries
      tags:
      - ChartVersions
    post:
      consumes:
      - application/json
      description: |-
        Create a new ChartVersion entry. Note that fields are immutable after creation.
        If the new entry is a duplicate of one already in the database, the database will not be altered and the call will return normally but with a 200 code.
      parameters:
      - description: The ChartVersion to create
        in: body
        name: chart-version
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChartVersion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new ChartVersion entry
      tags:
      - ChartVersions
  /api/v2/chart-versions/{selector}:
    get:
      description: 'Get an existing ChartVersion entry via one its "selectors": chart/version
        or numeric ID.'
      parameters:
      - description: 'The ChartVersion to get''s selector: chart/version or numeric
          ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.ChartVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a ChartVersion entry
      tags:
      - ChartVersions
  /api/v2/charts:
    get:
      description: List existing Chart entries, ordered by most recently updated.
      parameters:
      - in: query
        name: appImageGitMainBranch
        type: string
      - in: query
        name: appImageGitRepo
        type: string
      - default: false
        description: Indicates if the default subdomain, protocol, and port fields
          are relevant for this chart
        in: query
        name: chartExposesEndpoint
        type: boolean
      - default: terra-helm
        in: query
        name: chartRepo
        type: string
      - in: query
        name: createdAt
        type: string
      - default: 443
        in: query
        name: defaultPort
        type: integer
      - default: https
        in: query
        name: defaultProtocol
        type: string
      - description: When creating, will default to the name of the chart
        in: query
        name: defaultSubdomain
        type: string
      - in: query
        name: id
        type: integer
      - description: Required when creating
        in: query
        name: name
        type: string
      - in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Chart'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Chart entries
      tags:
      - Charts
    post:
      consumes:
      - application/json
      description: Create a new Chart entry. Note that some fields are immutable after
        creation; /edit lists mutable fields.
      parameters:
      - description: The Chart to create
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableChart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new Chart entry
      tags:
      - Charts
  /api/v2/charts/{selector}:
    delete:
      description: 'Delete an existing Chart entry via one of its "selectors": name
        or numeric ID.'
      parameters:
      - description: 'The Chart to delete''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a Chart entry
      tags:
      - Charts
    get:
      description: 'Get an existing Chart entry via one of its "selectors": name or
        numeric ID.'
      parameters:
      - description: 'The Chart to get''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Chart entry
      tags:
      - Charts
    patch:
      consumes:
      - application/json
      description: 'Edit an existing Chart entry via one of its "selectors": name
        or numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create.'
      parameters:
      - description: 'The Chart to edit''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Chart
        in: body
        name: chart
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableChart'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Chart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a Chart entry
      tags:
      - Charts
  /api/v2/clusters:
    get:
      description: List existing Cluster entries, ordered by most recently updated.
      parameters:
      - description: Required when creating
        in: query
        name: address
        type: string
      - description: Required when creating if providers is 'azure'
        in: query
        name: azureSubscription
        type: string
      - description: Required when creating
        in: query
        name: base
        type: string
      - in: query
        name: createdAt
        type: string
      - description: Required when creating if provider is 'google'
        in: query
        name: googleProject
        type: string
      - in: query
        name: id
        type: integer
      - description: Required when creating
        in: query
        name: name
        type: string
      - default: google
        enum:
        - google
        - azure
        in: query
        name: provider
        type: string
      - default: false
        in: query
        name: requiresSuitability
        type: boolean
      - in: query
        name: updatedAt
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Cluster'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Cluster entries
      tags:
      - Clusters
    post:
      consumes:
      - application/json
      description: Create a new Cluster entry. Note that some fields are immutable
        after creation; /edit lists mutable fields.
      parameters:
      - description: The Cluster to create
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableCluster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new Cluster entry
      tags:
      - Clusters
  /api/v2/clusters/{selector}:
    delete:
      description: 'Delete an existing Cluster entry via one of its "selectors": name
        or numeric ID.'
      parameters:
      - description: 'The Cluster to delete''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a Cluster entry
      tags:
      - Clusters
    get:
      description: 'Get an existing Cluster entry via one of its "selectors": name
        or numeric ID.'
      parameters:
      - description: 'The Cluster to get''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Cluster entry
      tags:
      - Clusters
    patch:
      consumes:
      - application/json
      description: 'Edit an existing Cluster entry via one of its "selectors": name
        or numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create.'
      parameters:
      - description: 'The Cluster to edit''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Cluster
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableCluster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Cluster'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a Cluster entry
      tags:
      - Clusters
  /api/v2/environments:
    get:
      description: List existing Environment entries, ordered by most recently updated.
      parameters:
      - description: Required when creating
        in: query
        name: base
        type: string
      - default: bee.envs-terra.bio
        in: query
        name: baseDomain
        type: string
      - default: true
        description: Upon creation of a dynamic environment, if this is true the template's
          chart releases will be copied to the new environment
        in: query
        name: chartReleasesFromTemplate
        type: boolean
      - in: query
        name: createdAt
        type: string
      - in: query
        name: defaultCluster
        type: string
      - in: query
        name: defaultNamespace
        type: string
      - in: query
        name: id
        type: integer
      - default: dynamic
        in: query
        name: lifecycle
        type: string
      - description: When creating, will be calculated if dynamic, required otherwise
        in: query
        name: name
        type: string
      - default: true
        in: query
        name: namePrefixesDomain
        type: boolean
      - description: When creating, will be set to your email
        in: query
        name: owner
        type: string
      - default: false
        in: query
        name: requiresSuitability
        type: boolean
      - description: Required for dynamic environments
        in: query
        name: templateEnvironment
        type: string
      - in: query
        name: updatedAt
        type: string
      - in: query
        name: valuesName
        type: string
      - description: An optional limit to the number of entries returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Environment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Environment entries
      tags:
      - Environments
    post:
      consumes:
      - application/json
      description: |-
        Create a new Environment entry. Note that some fields are immutable after creation; /edit lists mutable fields.
        Creating a dynamic environment based on a template will also copy ChartReleases from the template.
      parameters:
      - description: The Environment to create
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/v2controllers.CreatableEnvironment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Create a new Environment entry
      tags:
      - Environments
  /api/v2/environments/{selector}:
    delete:
      description: 'Delete an existing Environment entry via one of its "selectors":
        name or numeric ID.'
      parameters:
      - description: 'The Environment to delete''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Delete a Environment entry
      tags:
      - Environments
    get:
      description: 'Get an existing Environment entry via one of its "selectors":
        name or numeric ID.'
      parameters:
      - description: 'The Environment to get''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get a Environment entry
      tags:
      - Environments
    patch:
      consumes:
      - application/json
      description: 'Edit an existing Environment entry via one of its "selectors":
        name or numeric ID. Note that only mutable fields are available here, immutable
        fields can only be set using /create.'
      parameters:
      - description: 'The Environment to edit''s selector: name or numeric ID'
        in: path
        name: selector
        required: true
        type: string
      - description: The edits to make to the Environment
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/v2controllers.EditableEnvironment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v2controllers.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Edit a Environment entry
      tags:
      - Environments
  /api/v2/procedures/changesets/apply:
    post:
      consumes:
      - application/json
      description: |-
        Looks up and applies previously-planned version diffs given by the ID. Other stored plans against the same Chart Releases are marked as superseded.
        Multiple Changesets can be specified simply by passing multiple IDs in the list.
      parameters:
      - description: String IDs of the Changesets to apply
        in: body
        name: apply-request
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Apply previously planned version changes to Chart Releases
      tags:
      - Changesets
  /api/v2/procedures/changesets/plan:
    post:
      consumes:
      - application/json
      description: |-
        Refreshes and calculates version diffs for Chart Releases. If there's a diff, the plan is stored and returned so it can be applied later.
        Multiple Chart Releases can be specified--as can groups of Chart Releases from multiple Environments.
      parameters:
      - description: Info on what version changes or refreshes to plan
        in: body
        name: changeset-plan-request
        required: true
        schema:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Plan--but do not apply--version changes to Chart Releases
      tags:
      - Changesets
  /api/v2/procedures/changesets/plan-and-apply:
    post:
      consumes:
      - application/json
      description: Like the plan and apply endpoints immediately in sequence.
      parameters:
      - description: Info on what version changes or refreshes to perform
        in: body
        name: changeset-plan-request
        required: true
        schema:
          $ref: '#/definitions/v2controllers.ChangesetPlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/v2controllers.Changeset'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Plan and apply version changes in one step
      tags:
      - Changesets
  /api/v2/selectors/app-versions/{selector}:
    get:
      description: Validate a given AppVersion selector and provide any other selectors
        that would match the same AppVersion.
      parameters:
      - description: The selector of the AppVersion to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List AppVersion selectors
      tags:
      - AppVersions
  /api/v2/selectors/changesets/{selector}:
    get:
      description: Validate a given Changeset selector and provide any other selectors
        that would match the same Changeset.
      parameters:
      - description: The selector of the Changeset to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Changeset selectors
      tags:
      - Changesets
  /api/v2/selectors/chart-releases/{selector}:
    get:
      description: Validate a given ChartRelease selector and provide any other selectors
        that would match the same ChartRelease.
      parameters:
      - description: The selector of the ChartRelease to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartRelease selectors
      tags:
      - ChartReleases
  /api/v2/selectors/chart-versions/{selector}:
    get:
      description: Validate a given ChartVersion selector and provide any other selectors
        that would match the same ChartVersion.
      parameters:
      - description: The selector of the ChartVersion to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List ChartVersion selectors
      tags:
      - ChartVersions
  /api/v2/selectors/charts/{selector}:
    get:
      description: Validate a given Chart selector and provide any other selectors
        that would match the same Chart.
      parameters:
      - description: The selector of the Chart to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Chart selectors
      tags:
      - Charts
  /api/v2/selectors/clusters/{selector}:
    get:
      description: Validate a given Cluster selector and provide any other selectors
        that would match the same Cluster.
      parameters:
      - description: The selector of the Cluster to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Cluster selectors
      tags:
      - Clusters
  /api/v2/selectors/environments/{selector}:
    get:
      description: Validate a given Environment selector and provide any other selectors
        that would match the same Environment.
      parameters:
      - description: The selector of the Environment to list other selectors for
        in: path
        name: selector
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: List Environment selectors
      tags:
      - Environments
  /my-user:
    get:
      description: Get Sherlock's understanding of the calling user based on IAP and
        the Firecloud.org Google Workspace organization.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.MyUserResponse'
        "407":
          description: Proxy Authentication Required
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Get information about the calling user
      tags:
      - Misc
  /status:
    get:
      description: |-
        Get Sherlock's current status. Right now, this endpoint always returned OK (if the server is online).
        This endpoint is acceptable to use for a readiness check.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.StatusResponse'
      summary: Get Sherlock's current status
      tags:
      - Misc
  /version:
    get:
      description: Get the build version of this Sherlock instance.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/misc.VersionResponse'
      summary: Get Sherlock's own current version
      tags:
      - Misc
produces:
- application/json
schemes:
- https
swagger: "2.0"
