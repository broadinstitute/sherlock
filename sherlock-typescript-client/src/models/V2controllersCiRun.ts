/* tslint:disable */
/* eslint-disable */
/**
 * Sherlock
 * The Data Science Platform\'s source-of-truth service. Note: this API will try to load and return associations in responses, so clients won\'t need to make as many requests. This behavior isn\'t recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
 *
 * The version of the OpenAPI document: development
 * Contact: dsp-devops@broadinstitute.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V2controllersCiIdentifier } from './V2controllersCiIdentifier';
import {
    V2controllersCiIdentifierFromJSON,
    V2controllersCiIdentifierFromJSONTyped,
    V2controllersCiIdentifierToJSON,
} from './V2controllersCiIdentifier';

/**
 * 
 * @export
 * @interface V2controllersCiRun
 */
export interface V2controllersCiRun {
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    argoWorkflowsName?: string;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    argoWorkflowsNamespace?: string;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    argoWorkflowsTemplate?: string;
    /**
     * 
     * @type {Date}
     * @memberof V2controllersCiRun
     */
    createdAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof V2controllersCiRun
     */
    githubActionsAttemptNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    githubActionsOwner?: string;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    githubActionsRepo?: string;
    /**
     * 
     * @type {number}
     * @memberof V2controllersCiRun
     */
    githubActionsRunID?: number;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    githubActionsWorkflowPath?: string;
    /**
     * 
     * @type {number}
     * @memberof V2controllersCiRun
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    platform?: string;
    /**
     * 
     * @type {Array<V2controllersCiIdentifier>}
     * @memberof V2controllersCiRun
     */
    relatedResources?: Array<V2controllersCiIdentifier>;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCiRun
     */
    terminalAt?: string;
    /**
     * 
     * @type {Date}
     * @memberof V2controllersCiRun
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the V2controllersCiRun interface.
 */
export function instanceOfV2controllersCiRun(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V2controllersCiRunFromJSON(json: any): V2controllersCiRun {
    return V2controllersCiRunFromJSONTyped(json, false);
}

export function V2controllersCiRunFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2controllersCiRun {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'argoWorkflowsName': !exists(json, 'argoWorkflowsName') ? undefined : json['argoWorkflowsName'],
        'argoWorkflowsNamespace': !exists(json, 'argoWorkflowsNamespace') ? undefined : json['argoWorkflowsNamespace'],
        'argoWorkflowsTemplate': !exists(json, 'argoWorkflowsTemplate') ? undefined : json['argoWorkflowsTemplate'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'githubActionsAttemptNumber': !exists(json, 'githubActionsAttemptNumber') ? undefined : json['githubActionsAttemptNumber'],
        'githubActionsOwner': !exists(json, 'githubActionsOwner') ? undefined : json['githubActionsOwner'],
        'githubActionsRepo': !exists(json, 'githubActionsRepo') ? undefined : json['githubActionsRepo'],
        'githubActionsRunID': !exists(json, 'githubActionsRunID') ? undefined : json['githubActionsRunID'],
        'githubActionsWorkflowPath': !exists(json, 'githubActionsWorkflowPath') ? undefined : json['githubActionsWorkflowPath'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'platform': !exists(json, 'platform') ? undefined : json['platform'],
        'relatedResources': !exists(json, 'relatedResources') ? undefined : ((json['relatedResources'] as Array<any>).map(V2controllersCiIdentifierFromJSON)),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'terminalAt': !exists(json, 'terminalAt') ? undefined : json['terminalAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function V2controllersCiRunToJSON(value?: V2controllersCiRun | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'argoWorkflowsName': value.argoWorkflowsName,
        'argoWorkflowsNamespace': value.argoWorkflowsNamespace,
        'argoWorkflowsTemplate': value.argoWorkflowsTemplate,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'githubActionsAttemptNumber': value.githubActionsAttemptNumber,
        'githubActionsOwner': value.githubActionsOwner,
        'githubActionsRepo': value.githubActionsRepo,
        'githubActionsRunID': value.githubActionsRunID,
        'githubActionsWorkflowPath': value.githubActionsWorkflowPath,
        'id': value.id,
        'platform': value.platform,
        'relatedResources': value.relatedResources === undefined ? undefined : ((value.relatedResources as Array<any>).map(V2controllersCiIdentifierToJSON)),
        'status': value.status,
        'terminalAt': value.terminalAt,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

