/* tslint:disable */
/* eslint-disable */
/**
 * Sherlock
 * The Data Science Platform\'s source-of-truth service. Note: this API will try to load and return associations in responses, so clients won\'t need to make as many requests. This behavior isn\'t recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
 *
 * The version of the OpenAPI document: development
 * Contact: dsp-devops@broadinstitute.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MiscVersionResponse
 */
export interface MiscVersionResponse {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MiscVersionResponse
     */
    buildInfo?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof MiscVersionResponse
     */
    goVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof MiscVersionResponse
     */
    version?: string;
}

/**
 * Check if a given object implements the MiscVersionResponse interface.
 */
export function instanceOfMiscVersionResponse(value: object): value is MiscVersionResponse {
    return true;
}

export function MiscVersionResponseFromJSON(json: any): MiscVersionResponse {
    return MiscVersionResponseFromJSONTyped(json, false);
}

export function MiscVersionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MiscVersionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'buildInfo': json['buildInfo'] == null ? undefined : json['buildInfo'],
        'goVersion': json['goVersion'] == null ? undefined : json['goVersion'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function MiscVersionResponseToJSON(json: any): MiscVersionResponse {
    return MiscVersionResponseToJSONTyped(json, false);
}

export function MiscVersionResponseToJSONTyped(value?: MiscVersionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'buildInfo': value['buildInfo'],
        'goVersion': value['goVersion'],
        'version': value['version'],
    };
}

