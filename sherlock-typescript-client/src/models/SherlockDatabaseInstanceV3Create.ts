/* tslint:disable */
/* eslint-disable */
/**
 * Sherlock
 * The Data Science Platform\'s source-of-truth service. Note: this API will try to load and return associations in responses, so clients won\'t need to make as many requests. This behavior isn\'t recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
 *
 * The version of the OpenAPI document: development
 * Contact: dsp-devops@broadinstitute.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SherlockDatabaseInstanceV3Create
 */
export interface SherlockDatabaseInstanceV3Create {
    /**
     * Required when creating
     * @type {string}
     * @memberof SherlockDatabaseInstanceV3Create
     */
    chartRelease?: string;
    /**
     * When creating, defaults to the chart name
     * @type {string}
     * @memberof SherlockDatabaseInstanceV3Create
     */
    defaultDatabase?: string;
    /**
     * Required if platform is 'google'
     * @type {string}
     * @memberof SherlockDatabaseInstanceV3Create
     */
    googleProject?: string;
    /**
     * Required if platform is 'google' or 'azure'
     * @type {string}
     * @memberof SherlockDatabaseInstanceV3Create
     */
    instanceName?: string;
    /**
     * 'google', 'azure', or default 'kubernetes'
     * @type {string}
     * @memberof SherlockDatabaseInstanceV3Create
     */
    platform?: string;
}

/**
 * Check if a given object implements the SherlockDatabaseInstanceV3Create interface.
 */
export function instanceOfSherlockDatabaseInstanceV3Create(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SherlockDatabaseInstanceV3CreateFromJSON(json: any): SherlockDatabaseInstanceV3Create {
    return SherlockDatabaseInstanceV3CreateFromJSONTyped(json, false);
}

export function SherlockDatabaseInstanceV3CreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): SherlockDatabaseInstanceV3Create {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chartRelease': !exists(json, 'chartRelease') ? undefined : json['chartRelease'],
        'defaultDatabase': !exists(json, 'defaultDatabase') ? undefined : json['defaultDatabase'],
        'googleProject': !exists(json, 'googleProject') ? undefined : json['googleProject'],
        'instanceName': !exists(json, 'instanceName') ? undefined : json['instanceName'],
        'platform': !exists(json, 'platform') ? undefined : json['platform'],
    };
}

export function SherlockDatabaseInstanceV3CreateToJSON(value?: SherlockDatabaseInstanceV3Create | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chartRelease': value.chartRelease,
        'defaultDatabase': value.defaultDatabase,
        'googleProject': value.googleProject,
        'instanceName': value.instanceName,
        'platform': value.platform,
    };
}

