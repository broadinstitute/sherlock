/* tslint:disable */
/* eslint-disable */
/**
 * Sherlock
 * The Data Science Platform\'s source-of-truth service. Note: this API will try to load and return associations in responses, so clients won\'t need to make as many requests. This behavior isn\'t recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
 *
 * The version of the OpenAPI document: development
 * Contact: dsp-devops@broadinstitute.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SherlockChartVersionV3 } from './SherlockChartVersionV3';
import {
    SherlockChartVersionV3FromJSON,
    SherlockChartVersionV3FromJSONTyped,
    SherlockChartVersionV3ToJSON,
    SherlockChartVersionV3ToJSONTyped,
} from './SherlockChartVersionV3';

/**
 * 
 * @export
 * @interface SherlockChartVersionV3ChangelogResponse
 */
export interface SherlockChartVersionV3ChangelogResponse {
    /**
     * 
     * @type {Array<SherlockChartVersionV3>}
     * @memberof SherlockChartVersionV3ChangelogResponse
     */
    changelog?: Array<SherlockChartVersionV3>;
    /**
     * 
     * @type {boolean}
     * @memberof SherlockChartVersionV3ChangelogResponse
     */
    complete?: boolean;
}

/**
 * Check if a given object implements the SherlockChartVersionV3ChangelogResponse interface.
 */
export function instanceOfSherlockChartVersionV3ChangelogResponse(value: object): value is SherlockChartVersionV3ChangelogResponse {
    return true;
}

export function SherlockChartVersionV3ChangelogResponseFromJSON(json: any): SherlockChartVersionV3ChangelogResponse {
    return SherlockChartVersionV3ChangelogResponseFromJSONTyped(json, false);
}

export function SherlockChartVersionV3ChangelogResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SherlockChartVersionV3ChangelogResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'changelog': json['changelog'] == null ? undefined : ((json['changelog'] as Array<any>).map(SherlockChartVersionV3FromJSON)),
        'complete': json['complete'] == null ? undefined : json['complete'],
    };
}

  export function SherlockChartVersionV3ChangelogResponseToJSON(json: any): SherlockChartVersionV3ChangelogResponse {
      return SherlockChartVersionV3ChangelogResponseToJSONTyped(json, false);
  }

  export function SherlockChartVersionV3ChangelogResponseToJSONTyped(value?: SherlockChartVersionV3ChangelogResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'changelog': value['changelog'] == null ? undefined : ((value['changelog'] as Array<any>).map(SherlockChartVersionV3ToJSON)),
        'complete': value['complete'],
    };
}

