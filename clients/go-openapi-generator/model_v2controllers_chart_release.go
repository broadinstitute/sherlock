/*
Sherlock

The Data Science Platform's source-of-truth service

API version: development
Contact: dsp-devops@broadinstitute.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sherlock

import (
	"encoding/json"
)

// V2controllersChartRelease struct for V2controllersChartRelease
type V2controllersChartRelease struct {
	// Required when creating
	Chart *string `json:"chart,omitempty"`
	ChartInfo *V2controllersChart `json:"chartInfo,omitempty"`
	// When creating, will default the environment's default cluster, if provided. Either this or environment must be provided.
	Cluster *string `json:"cluster,omitempty"`
	ClusterInfo *V2controllersCluster `json:"clusterInfo,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	CurrentAppVersionExact *string `json:"currentAppVersionExact,omitempty"`
	CurrentChartVersionExact *string `json:"currentChartVersionExact,omitempty"`
	// Calculated field
	DestinationType *string `json:"destinationType,omitempty"`
	// Either this or cluster must be provided.
	Environment *string `json:"environment,omitempty"`
	EnvironmentInfo *V2controllersEnvironment `json:"environmentInfo,omitempty"`
	HelmfileRef *string `json:"helmfileRef,omitempty"`
	Id *int32 `json:"id,omitempty"`
	// When creating, will be calculated if left empty
	Name *string `json:"name,omitempty"`
	// When creating, will default to the environment's default namespace, if provided
	Namespace *string `json:"namespace,omitempty"`
	// When creating, will default to the app's main branch if it has one recorded
	TargetAppVersionBranch *string `json:"targetAppVersionBranch,omitempty"`
	TargetAppVersionCommit *string `json:"targetAppVersionCommit,omitempty"`
	TargetAppVersionExact *string `json:"targetAppVersionExact,omitempty"`
	// When creating, will default to referencing any provided target app version field (exact, then commit, then branch)
	TargetAppVersionUse *string `json:"targetAppVersionUse,omitempty"`
	TargetChartVersionExact *string `json:"targetChartVersionExact,omitempty"`
	// When creating, will default to latest unless an exact target chart version is provided
	TargetChartVersionUse *string `json:"targetChartVersionUse,omitempty"`
	ThelmaMode *string `json:"thelmaMode,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V2controllersChartRelease V2controllersChartRelease

// NewV2controllersChartRelease instantiates a new V2controllersChartRelease object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2controllersChartRelease() *V2controllersChartRelease {
	this := V2controllersChartRelease{}
	var helmfileRef string = "HEAD"
	this.HelmfileRef = &helmfileRef
	return &this
}

// NewV2controllersChartReleaseWithDefaults instantiates a new V2controllersChartRelease object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2controllersChartReleaseWithDefaults() *V2controllersChartRelease {
	this := V2controllersChartRelease{}
	var helmfileRef string = "HEAD"
	this.HelmfileRef = &helmfileRef
	return &this
}

// GetChart returns the Chart field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetChart() string {
	if o == nil || o.Chart == nil {
		var ret string
		return ret
	}
	return *o.Chart
}

// GetChartOk returns a tuple with the Chart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetChartOk() (*string, bool) {
	if o == nil || o.Chart == nil {
		return nil, false
	}
	return o.Chart, true
}

// HasChart returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasChart() bool {
	if o != nil && o.Chart != nil {
		return true
	}

	return false
}

// SetChart gets a reference to the given string and assigns it to the Chart field.
func (o *V2controllersChartRelease) SetChart(v string) {
	o.Chart = &v
}

// GetChartInfo returns the ChartInfo field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetChartInfo() V2controllersChart {
	if o == nil || o.ChartInfo == nil {
		var ret V2controllersChart
		return ret
	}
	return *o.ChartInfo
}

// GetChartInfoOk returns a tuple with the ChartInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetChartInfoOk() (*V2controllersChart, bool) {
	if o == nil || o.ChartInfo == nil {
		return nil, false
	}
	return o.ChartInfo, true
}

// HasChartInfo returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasChartInfo() bool {
	if o != nil && o.ChartInfo != nil {
		return true
	}

	return false
}

// SetChartInfo gets a reference to the given V2controllersChart and assigns it to the ChartInfo field.
func (o *V2controllersChartRelease) SetChartInfo(v V2controllersChart) {
	o.ChartInfo = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *V2controllersChartRelease) SetCluster(v string) {
	o.Cluster = &v
}

// GetClusterInfo returns the ClusterInfo field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetClusterInfo() V2controllersCluster {
	if o == nil || o.ClusterInfo == nil {
		var ret V2controllersCluster
		return ret
	}
	return *o.ClusterInfo
}

// GetClusterInfoOk returns a tuple with the ClusterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetClusterInfoOk() (*V2controllersCluster, bool) {
	if o == nil || o.ClusterInfo == nil {
		return nil, false
	}
	return o.ClusterInfo, true
}

// HasClusterInfo returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasClusterInfo() bool {
	if o != nil && o.ClusterInfo != nil {
		return true
	}

	return false
}

// SetClusterInfo gets a reference to the given V2controllersCluster and assigns it to the ClusterInfo field.
func (o *V2controllersChartRelease) SetClusterInfo(v V2controllersCluster) {
	o.ClusterInfo = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *V2controllersChartRelease) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrentAppVersionExact returns the CurrentAppVersionExact field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetCurrentAppVersionExact() string {
	if o == nil || o.CurrentAppVersionExact == nil {
		var ret string
		return ret
	}
	return *o.CurrentAppVersionExact
}

// GetCurrentAppVersionExactOk returns a tuple with the CurrentAppVersionExact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetCurrentAppVersionExactOk() (*string, bool) {
	if o == nil || o.CurrentAppVersionExact == nil {
		return nil, false
	}
	return o.CurrentAppVersionExact, true
}

// HasCurrentAppVersionExact returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasCurrentAppVersionExact() bool {
	if o != nil && o.CurrentAppVersionExact != nil {
		return true
	}

	return false
}

// SetCurrentAppVersionExact gets a reference to the given string and assigns it to the CurrentAppVersionExact field.
func (o *V2controllersChartRelease) SetCurrentAppVersionExact(v string) {
	o.CurrentAppVersionExact = &v
}

// GetCurrentChartVersionExact returns the CurrentChartVersionExact field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetCurrentChartVersionExact() string {
	if o == nil || o.CurrentChartVersionExact == nil {
		var ret string
		return ret
	}
	return *o.CurrentChartVersionExact
}

// GetCurrentChartVersionExactOk returns a tuple with the CurrentChartVersionExact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetCurrentChartVersionExactOk() (*string, bool) {
	if o == nil || o.CurrentChartVersionExact == nil {
		return nil, false
	}
	return o.CurrentChartVersionExact, true
}

// HasCurrentChartVersionExact returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasCurrentChartVersionExact() bool {
	if o != nil && o.CurrentChartVersionExact != nil {
		return true
	}

	return false
}

// SetCurrentChartVersionExact gets a reference to the given string and assigns it to the CurrentChartVersionExact field.
func (o *V2controllersChartRelease) SetCurrentChartVersionExact(v string) {
	o.CurrentChartVersionExact = &v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetDestinationType() string {
	if o == nil || o.DestinationType == nil {
		var ret string
		return ret
	}
	return *o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetDestinationTypeOk() (*string, bool) {
	if o == nil || o.DestinationType == nil {
		return nil, false
	}
	return o.DestinationType, true
}

// HasDestinationType returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasDestinationType() bool {
	if o != nil && o.DestinationType != nil {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given string and assigns it to the DestinationType field.
func (o *V2controllersChartRelease) SetDestinationType(v string) {
	o.DestinationType = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *V2controllersChartRelease) SetEnvironment(v string) {
	o.Environment = &v
}

// GetEnvironmentInfo returns the EnvironmentInfo field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetEnvironmentInfo() V2controllersEnvironment {
	if o == nil || o.EnvironmentInfo == nil {
		var ret V2controllersEnvironment
		return ret
	}
	return *o.EnvironmentInfo
}

// GetEnvironmentInfoOk returns a tuple with the EnvironmentInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetEnvironmentInfoOk() (*V2controllersEnvironment, bool) {
	if o == nil || o.EnvironmentInfo == nil {
		return nil, false
	}
	return o.EnvironmentInfo, true
}

// HasEnvironmentInfo returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasEnvironmentInfo() bool {
	if o != nil && o.EnvironmentInfo != nil {
		return true
	}

	return false
}

// SetEnvironmentInfo gets a reference to the given V2controllersEnvironment and assigns it to the EnvironmentInfo field.
func (o *V2controllersChartRelease) SetEnvironmentInfo(v V2controllersEnvironment) {
	o.EnvironmentInfo = &v
}

// GetHelmfileRef returns the HelmfileRef field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetHelmfileRef() string {
	if o == nil || o.HelmfileRef == nil {
		var ret string
		return ret
	}
	return *o.HelmfileRef
}

// GetHelmfileRefOk returns a tuple with the HelmfileRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetHelmfileRefOk() (*string, bool) {
	if o == nil || o.HelmfileRef == nil {
		return nil, false
	}
	return o.HelmfileRef, true
}

// HasHelmfileRef returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasHelmfileRef() bool {
	if o != nil && o.HelmfileRef != nil {
		return true
	}

	return false
}

// SetHelmfileRef gets a reference to the given string and assigns it to the HelmfileRef field.
func (o *V2controllersChartRelease) SetHelmfileRef(v string) {
	o.HelmfileRef = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *V2controllersChartRelease) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2controllersChartRelease) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V2controllersChartRelease) SetNamespace(v string) {
	o.Namespace = &v
}

// GetTargetAppVersionBranch returns the TargetAppVersionBranch field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetTargetAppVersionBranch() string {
	if o == nil || o.TargetAppVersionBranch == nil {
		var ret string
		return ret
	}
	return *o.TargetAppVersionBranch
}

// GetTargetAppVersionBranchOk returns a tuple with the TargetAppVersionBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetTargetAppVersionBranchOk() (*string, bool) {
	if o == nil || o.TargetAppVersionBranch == nil {
		return nil, false
	}
	return o.TargetAppVersionBranch, true
}

// HasTargetAppVersionBranch returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasTargetAppVersionBranch() bool {
	if o != nil && o.TargetAppVersionBranch != nil {
		return true
	}

	return false
}

// SetTargetAppVersionBranch gets a reference to the given string and assigns it to the TargetAppVersionBranch field.
func (o *V2controllersChartRelease) SetTargetAppVersionBranch(v string) {
	o.TargetAppVersionBranch = &v
}

// GetTargetAppVersionCommit returns the TargetAppVersionCommit field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetTargetAppVersionCommit() string {
	if o == nil || o.TargetAppVersionCommit == nil {
		var ret string
		return ret
	}
	return *o.TargetAppVersionCommit
}

// GetTargetAppVersionCommitOk returns a tuple with the TargetAppVersionCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetTargetAppVersionCommitOk() (*string, bool) {
	if o == nil || o.TargetAppVersionCommit == nil {
		return nil, false
	}
	return o.TargetAppVersionCommit, true
}

// HasTargetAppVersionCommit returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasTargetAppVersionCommit() bool {
	if o != nil && o.TargetAppVersionCommit != nil {
		return true
	}

	return false
}

// SetTargetAppVersionCommit gets a reference to the given string and assigns it to the TargetAppVersionCommit field.
func (o *V2controllersChartRelease) SetTargetAppVersionCommit(v string) {
	o.TargetAppVersionCommit = &v
}

// GetTargetAppVersionExact returns the TargetAppVersionExact field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetTargetAppVersionExact() string {
	if o == nil || o.TargetAppVersionExact == nil {
		var ret string
		return ret
	}
	return *o.TargetAppVersionExact
}

// GetTargetAppVersionExactOk returns a tuple with the TargetAppVersionExact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetTargetAppVersionExactOk() (*string, bool) {
	if o == nil || o.TargetAppVersionExact == nil {
		return nil, false
	}
	return o.TargetAppVersionExact, true
}

// HasTargetAppVersionExact returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasTargetAppVersionExact() bool {
	if o != nil && o.TargetAppVersionExact != nil {
		return true
	}

	return false
}

// SetTargetAppVersionExact gets a reference to the given string and assigns it to the TargetAppVersionExact field.
func (o *V2controllersChartRelease) SetTargetAppVersionExact(v string) {
	o.TargetAppVersionExact = &v
}

// GetTargetAppVersionUse returns the TargetAppVersionUse field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetTargetAppVersionUse() string {
	if o == nil || o.TargetAppVersionUse == nil {
		var ret string
		return ret
	}
	return *o.TargetAppVersionUse
}

// GetTargetAppVersionUseOk returns a tuple with the TargetAppVersionUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetTargetAppVersionUseOk() (*string, bool) {
	if o == nil || o.TargetAppVersionUse == nil {
		return nil, false
	}
	return o.TargetAppVersionUse, true
}

// HasTargetAppVersionUse returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasTargetAppVersionUse() bool {
	if o != nil && o.TargetAppVersionUse != nil {
		return true
	}

	return false
}

// SetTargetAppVersionUse gets a reference to the given string and assigns it to the TargetAppVersionUse field.
func (o *V2controllersChartRelease) SetTargetAppVersionUse(v string) {
	o.TargetAppVersionUse = &v
}

// GetTargetChartVersionExact returns the TargetChartVersionExact field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetTargetChartVersionExact() string {
	if o == nil || o.TargetChartVersionExact == nil {
		var ret string
		return ret
	}
	return *o.TargetChartVersionExact
}

// GetTargetChartVersionExactOk returns a tuple with the TargetChartVersionExact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetTargetChartVersionExactOk() (*string, bool) {
	if o == nil || o.TargetChartVersionExact == nil {
		return nil, false
	}
	return o.TargetChartVersionExact, true
}

// HasTargetChartVersionExact returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasTargetChartVersionExact() bool {
	if o != nil && o.TargetChartVersionExact != nil {
		return true
	}

	return false
}

// SetTargetChartVersionExact gets a reference to the given string and assigns it to the TargetChartVersionExact field.
func (o *V2controllersChartRelease) SetTargetChartVersionExact(v string) {
	o.TargetChartVersionExact = &v
}

// GetTargetChartVersionUse returns the TargetChartVersionUse field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetTargetChartVersionUse() string {
	if o == nil || o.TargetChartVersionUse == nil {
		var ret string
		return ret
	}
	return *o.TargetChartVersionUse
}

// GetTargetChartVersionUseOk returns a tuple with the TargetChartVersionUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetTargetChartVersionUseOk() (*string, bool) {
	if o == nil || o.TargetChartVersionUse == nil {
		return nil, false
	}
	return o.TargetChartVersionUse, true
}

// HasTargetChartVersionUse returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasTargetChartVersionUse() bool {
	if o != nil && o.TargetChartVersionUse != nil {
		return true
	}

	return false
}

// SetTargetChartVersionUse gets a reference to the given string and assigns it to the TargetChartVersionUse field.
func (o *V2controllersChartRelease) SetTargetChartVersionUse(v string) {
	o.TargetChartVersionUse = &v
}

// GetThelmaMode returns the ThelmaMode field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetThelmaMode() string {
	if o == nil || o.ThelmaMode == nil {
		var ret string
		return ret
	}
	return *o.ThelmaMode
}

// GetThelmaModeOk returns a tuple with the ThelmaMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetThelmaModeOk() (*string, bool) {
	if o == nil || o.ThelmaMode == nil {
		return nil, false
	}
	return o.ThelmaMode, true
}

// HasThelmaMode returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasThelmaMode() bool {
	if o != nil && o.ThelmaMode != nil {
		return true
	}

	return false
}

// SetThelmaMode gets a reference to the given string and assigns it to the ThelmaMode field.
func (o *V2controllersChartRelease) SetThelmaMode(v string) {
	o.ThelmaMode = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *V2controllersChartRelease) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartRelease) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *V2controllersChartRelease) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *V2controllersChartRelease) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o V2controllersChartRelease) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Chart != nil {
		toSerialize["chart"] = o.Chart
	}
	if o.ChartInfo != nil {
		toSerialize["chartInfo"] = o.ChartInfo
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.ClusterInfo != nil {
		toSerialize["clusterInfo"] = o.ClusterInfo
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CurrentAppVersionExact != nil {
		toSerialize["currentAppVersionExact"] = o.CurrentAppVersionExact
	}
	if o.CurrentChartVersionExact != nil {
		toSerialize["currentChartVersionExact"] = o.CurrentChartVersionExact
	}
	if o.DestinationType != nil {
		toSerialize["destinationType"] = o.DestinationType
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.EnvironmentInfo != nil {
		toSerialize["environmentInfo"] = o.EnvironmentInfo
	}
	if o.HelmfileRef != nil {
		toSerialize["helmfileRef"] = o.HelmfileRef
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.TargetAppVersionBranch != nil {
		toSerialize["targetAppVersionBranch"] = o.TargetAppVersionBranch
	}
	if o.TargetAppVersionCommit != nil {
		toSerialize["targetAppVersionCommit"] = o.TargetAppVersionCommit
	}
	if o.TargetAppVersionExact != nil {
		toSerialize["targetAppVersionExact"] = o.TargetAppVersionExact
	}
	if o.TargetAppVersionUse != nil {
		toSerialize["targetAppVersionUse"] = o.TargetAppVersionUse
	}
	if o.TargetChartVersionExact != nil {
		toSerialize["targetChartVersionExact"] = o.TargetChartVersionExact
	}
	if o.TargetChartVersionUse != nil {
		toSerialize["targetChartVersionUse"] = o.TargetChartVersionUse
	}
	if o.ThelmaMode != nil {
		toSerialize["thelmaMode"] = o.ThelmaMode
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *V2controllersChartRelease) UnmarshalJSON(bytes []byte) (err error) {
	varV2controllersChartRelease := _V2controllersChartRelease{}

	if err = json.Unmarshal(bytes, &varV2controllersChartRelease); err == nil {
		*o = V2controllersChartRelease(varV2controllersChartRelease)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "chart")
		delete(additionalProperties, "chartInfo")
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "clusterInfo")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "currentAppVersionExact")
		delete(additionalProperties, "currentChartVersionExact")
		delete(additionalProperties, "destinationType")
		delete(additionalProperties, "environment")
		delete(additionalProperties, "environmentInfo")
		delete(additionalProperties, "helmfileRef")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "namespace")
		delete(additionalProperties, "targetAppVersionBranch")
		delete(additionalProperties, "targetAppVersionCommit")
		delete(additionalProperties, "targetAppVersionExact")
		delete(additionalProperties, "targetAppVersionUse")
		delete(additionalProperties, "targetChartVersionExact")
		delete(additionalProperties, "targetChartVersionUse")
		delete(additionalProperties, "thelmaMode")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV2controllersChartRelease struct {
	value *V2controllersChartRelease
	isSet bool
}

func (v NullableV2controllersChartRelease) Get() *V2controllersChartRelease {
	return v.value
}

func (v *NullableV2controllersChartRelease) Set(val *V2controllersChartRelease) {
	v.value = val
	v.isSet = true
}

func (v NullableV2controllersChartRelease) IsSet() bool {
	return v.isSet
}

func (v *NullableV2controllersChartRelease) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2controllersChartRelease(val *V2controllersChartRelease) *NullableV2controllersChartRelease {
	return &NullableV2controllersChartRelease{value: val, isSet: true}
}

func (v NullableV2controllersChartRelease) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2controllersChartRelease) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


