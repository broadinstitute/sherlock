/*
Sherlock

The Data Science Platform's source-of-truth service

API version: development
Contact: dsp-devops@broadinstitute.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sherlock

import (
	"encoding/json"
)

// V2controllersChartVersion struct for V2controllersChartVersion
type V2controllersChartVersion struct {
	// Required when creating
	Chart *string `json:"chart,omitempty"`
	ChartInfo *V2controllersChart `json:"chartInfo,omitempty"`
	// Required when creating
	ChartVersion *string `json:"chartVersion,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	Id *int32 `json:"id,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V2controllersChartVersion V2controllersChartVersion

// NewV2controllersChartVersion instantiates a new V2controllersChartVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2controllersChartVersion() *V2controllersChartVersion {
	this := V2controllersChartVersion{}
	return &this
}

// NewV2controllersChartVersionWithDefaults instantiates a new V2controllersChartVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2controllersChartVersionWithDefaults() *V2controllersChartVersion {
	this := V2controllersChartVersion{}
	return &this
}

// GetChart returns the Chart field value if set, zero value otherwise.
func (o *V2controllersChartVersion) GetChart() string {
	if o == nil || o.Chart == nil {
		var ret string
		return ret
	}
	return *o.Chart
}

// GetChartOk returns a tuple with the Chart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartVersion) GetChartOk() (*string, bool) {
	if o == nil || o.Chart == nil {
		return nil, false
	}
	return o.Chart, true
}

// HasChart returns a boolean if a field has been set.
func (o *V2controllersChartVersion) HasChart() bool {
	if o != nil && o.Chart != nil {
		return true
	}

	return false
}

// SetChart gets a reference to the given string and assigns it to the Chart field.
func (o *V2controllersChartVersion) SetChart(v string) {
	o.Chart = &v
}

// GetChartInfo returns the ChartInfo field value if set, zero value otherwise.
func (o *V2controllersChartVersion) GetChartInfo() V2controllersChart {
	if o == nil || o.ChartInfo == nil {
		var ret V2controllersChart
		return ret
	}
	return *o.ChartInfo
}

// GetChartInfoOk returns a tuple with the ChartInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartVersion) GetChartInfoOk() (*V2controllersChart, bool) {
	if o == nil || o.ChartInfo == nil {
		return nil, false
	}
	return o.ChartInfo, true
}

// HasChartInfo returns a boolean if a field has been set.
func (o *V2controllersChartVersion) HasChartInfo() bool {
	if o != nil && o.ChartInfo != nil {
		return true
	}

	return false
}

// SetChartInfo gets a reference to the given V2controllersChart and assigns it to the ChartInfo field.
func (o *V2controllersChartVersion) SetChartInfo(v V2controllersChart) {
	o.ChartInfo = &v
}

// GetChartVersion returns the ChartVersion field value if set, zero value otherwise.
func (o *V2controllersChartVersion) GetChartVersion() string {
	if o == nil || o.ChartVersion == nil {
		var ret string
		return ret
	}
	return *o.ChartVersion
}

// GetChartVersionOk returns a tuple with the ChartVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartVersion) GetChartVersionOk() (*string, bool) {
	if o == nil || o.ChartVersion == nil {
		return nil, false
	}
	return o.ChartVersion, true
}

// HasChartVersion returns a boolean if a field has been set.
func (o *V2controllersChartVersion) HasChartVersion() bool {
	if o != nil && o.ChartVersion != nil {
		return true
	}

	return false
}

// SetChartVersion gets a reference to the given string and assigns it to the ChartVersion field.
func (o *V2controllersChartVersion) SetChartVersion(v string) {
	o.ChartVersion = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *V2controllersChartVersion) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartVersion) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *V2controllersChartVersion) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *V2controllersChartVersion) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V2controllersChartVersion) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartVersion) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V2controllersChartVersion) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *V2controllersChartVersion) SetId(v int32) {
	o.Id = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *V2controllersChartVersion) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartVersion) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *V2controllersChartVersion) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *V2controllersChartVersion) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o V2controllersChartVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Chart != nil {
		toSerialize["chart"] = o.Chart
	}
	if o.ChartInfo != nil {
		toSerialize["chartInfo"] = o.ChartInfo
	}
	if o.ChartVersion != nil {
		toSerialize["chartVersion"] = o.ChartVersion
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *V2controllersChartVersion) UnmarshalJSON(bytes []byte) (err error) {
	varV2controllersChartVersion := _V2controllersChartVersion{}

	if err = json.Unmarshal(bytes, &varV2controllersChartVersion); err == nil {
		*o = V2controllersChartVersion(varV2controllersChartVersion)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "chart")
		delete(additionalProperties, "chartInfo")
		delete(additionalProperties, "chartVersion")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "id")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV2controllersChartVersion struct {
	value *V2controllersChartVersion
	isSet bool
}

func (v NullableV2controllersChartVersion) Get() *V2controllersChartVersion {
	return v.value
}

func (v *NullableV2controllersChartVersion) Set(val *V2controllersChartVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableV2controllersChartVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableV2controllersChartVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2controllersChartVersion(val *V2controllersChartVersion) *NullableV2controllersChartVersion {
	return &NullableV2controllersChartVersion{value: val, isSet: true}
}

func (v NullableV2controllersChartVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2controllersChartVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


