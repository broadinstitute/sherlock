/*
Sherlock

The Data Science Platform's source-of-truth service

API version: development
Contact: dsp-devops@broadinstitute.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sherlock

import (
	"encoding/json"
)

// V2controllersCreatableChart struct for V2controllersCreatableChart
type V2controllersCreatableChart struct {
	AppImageGitMainBranch *string `json:"appImageGitMainBranch,omitempty"`
	AppImageGitRepo *string `json:"appImageGitRepo,omitempty"`
	ChartRepo *string `json:"chartRepo,omitempty"`
	// Required when creating
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V2controllersCreatableChart V2controllersCreatableChart

// NewV2controllersCreatableChart instantiates a new V2controllersCreatableChart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2controllersCreatableChart() *V2controllersCreatableChart {
	this := V2controllersCreatableChart{}
	var chartRepo string = "terra-helm"
	this.ChartRepo = &chartRepo
	return &this
}

// NewV2controllersCreatableChartWithDefaults instantiates a new V2controllersCreatableChart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2controllersCreatableChartWithDefaults() *V2controllersCreatableChart {
	this := V2controllersCreatableChart{}
	var chartRepo string = "terra-helm"
	this.ChartRepo = &chartRepo
	return &this
}

// GetAppImageGitMainBranch returns the AppImageGitMainBranch field value if set, zero value otherwise.
func (o *V2controllersCreatableChart) GetAppImageGitMainBranch() string {
	if o == nil || o.AppImageGitMainBranch == nil {
		var ret string
		return ret
	}
	return *o.AppImageGitMainBranch
}

// GetAppImageGitMainBranchOk returns a tuple with the AppImageGitMainBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersCreatableChart) GetAppImageGitMainBranchOk() (*string, bool) {
	if o == nil || o.AppImageGitMainBranch == nil {
		return nil, false
	}
	return o.AppImageGitMainBranch, true
}

// HasAppImageGitMainBranch returns a boolean if a field has been set.
func (o *V2controllersCreatableChart) HasAppImageGitMainBranch() bool {
	if o != nil && o.AppImageGitMainBranch != nil {
		return true
	}

	return false
}

// SetAppImageGitMainBranch gets a reference to the given string and assigns it to the AppImageGitMainBranch field.
func (o *V2controllersCreatableChart) SetAppImageGitMainBranch(v string) {
	o.AppImageGitMainBranch = &v
}

// GetAppImageGitRepo returns the AppImageGitRepo field value if set, zero value otherwise.
func (o *V2controllersCreatableChart) GetAppImageGitRepo() string {
	if o == nil || o.AppImageGitRepo == nil {
		var ret string
		return ret
	}
	return *o.AppImageGitRepo
}

// GetAppImageGitRepoOk returns a tuple with the AppImageGitRepo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersCreatableChart) GetAppImageGitRepoOk() (*string, bool) {
	if o == nil || o.AppImageGitRepo == nil {
		return nil, false
	}
	return o.AppImageGitRepo, true
}

// HasAppImageGitRepo returns a boolean if a field has been set.
func (o *V2controllersCreatableChart) HasAppImageGitRepo() bool {
	if o != nil && o.AppImageGitRepo != nil {
		return true
	}

	return false
}

// SetAppImageGitRepo gets a reference to the given string and assigns it to the AppImageGitRepo field.
func (o *V2controllersCreatableChart) SetAppImageGitRepo(v string) {
	o.AppImageGitRepo = &v
}

// GetChartRepo returns the ChartRepo field value if set, zero value otherwise.
func (o *V2controllersCreatableChart) GetChartRepo() string {
	if o == nil || o.ChartRepo == nil {
		var ret string
		return ret
	}
	return *o.ChartRepo
}

// GetChartRepoOk returns a tuple with the ChartRepo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersCreatableChart) GetChartRepoOk() (*string, bool) {
	if o == nil || o.ChartRepo == nil {
		return nil, false
	}
	return o.ChartRepo, true
}

// HasChartRepo returns a boolean if a field has been set.
func (o *V2controllersCreatableChart) HasChartRepo() bool {
	if o != nil && o.ChartRepo != nil {
		return true
	}

	return false
}

// SetChartRepo gets a reference to the given string and assigns it to the ChartRepo field.
func (o *V2controllersCreatableChart) SetChartRepo(v string) {
	o.ChartRepo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2controllersCreatableChart) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersCreatableChart) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2controllersCreatableChart) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2controllersCreatableChart) SetName(v string) {
	o.Name = &v
}

func (o V2controllersCreatableChart) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppImageGitMainBranch != nil {
		toSerialize["appImageGitMainBranch"] = o.AppImageGitMainBranch
	}
	if o.AppImageGitRepo != nil {
		toSerialize["appImageGitRepo"] = o.AppImageGitRepo
	}
	if o.ChartRepo != nil {
		toSerialize["chartRepo"] = o.ChartRepo
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *V2controllersCreatableChart) UnmarshalJSON(bytes []byte) (err error) {
	varV2controllersCreatableChart := _V2controllersCreatableChart{}

	if err = json.Unmarshal(bytes, &varV2controllersCreatableChart); err == nil {
		*o = V2controllersCreatableChart(varV2controllersCreatableChart)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appImageGitMainBranch")
		delete(additionalProperties, "appImageGitRepo")
		delete(additionalProperties, "chartRepo")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV2controllersCreatableChart struct {
	value *V2controllersCreatableChart
	isSet bool
}

func (v NullableV2controllersCreatableChart) Get() *V2controllersCreatableChart {
	return v.value
}

func (v *NullableV2controllersCreatableChart) Set(val *V2controllersCreatableChart) {
	v.value = val
	v.isSet = true
}

func (v NullableV2controllersCreatableChart) IsSet() bool {
	return v.isSet
}

func (v *NullableV2controllersCreatableChart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2controllersCreatableChart(val *V2controllersCreatableChart) *NullableV2controllersCreatableChart {
	return &NullableV2controllersCreatableChart{value: val, isSet: true}
}

func (v NullableV2controllersCreatableChart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2controllersCreatableChart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


