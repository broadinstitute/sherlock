/*
Sherlock

The Data Science Platform's source-of-truth service

API version: development
Contact: dsp-devops@broadinstitute.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sherlock

import (
	"encoding/json"
)

// V2controllersChartDeployRecord struct for V2controllersChartDeployRecord
type V2controllersChartDeployRecord struct {
	// Required when creating
	ChartRelease *string `json:"chartRelease,omitempty"`
	ChartReleaseInfo *V2controllersChartRelease `json:"chartReleaseInfo,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	// When creating, will default to the value currently held by the chart release
	ExactAppVersion *string `json:"exactAppVersion,omitempty"`
	// When creating, will default to the value currently held by the chart release
	ExactChartVersion *string `json:"exactChartVersion,omitempty"`
	// When creating, will default to the value currently held by the chart release
	HelmfileRef *string `json:"helmfileRef,omitempty"`
	Id *int32 `json:"id,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V2controllersChartDeployRecord V2controllersChartDeployRecord

// NewV2controllersChartDeployRecord instantiates a new V2controllersChartDeployRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2controllersChartDeployRecord() *V2controllersChartDeployRecord {
	this := V2controllersChartDeployRecord{}
	return &this
}

// NewV2controllersChartDeployRecordWithDefaults instantiates a new V2controllersChartDeployRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2controllersChartDeployRecordWithDefaults() *V2controllersChartDeployRecord {
	this := V2controllersChartDeployRecord{}
	return &this
}

// GetChartRelease returns the ChartRelease field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetChartRelease() string {
	if o == nil || o.ChartRelease == nil {
		var ret string
		return ret
	}
	return *o.ChartRelease
}

// GetChartReleaseOk returns a tuple with the ChartRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetChartReleaseOk() (*string, bool) {
	if o == nil || o.ChartRelease == nil {
		return nil, false
	}
	return o.ChartRelease, true
}

// HasChartRelease returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasChartRelease() bool {
	if o != nil && o.ChartRelease != nil {
		return true
	}

	return false
}

// SetChartRelease gets a reference to the given string and assigns it to the ChartRelease field.
func (o *V2controllersChartDeployRecord) SetChartRelease(v string) {
	o.ChartRelease = &v
}

// GetChartReleaseInfo returns the ChartReleaseInfo field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetChartReleaseInfo() V2controllersChartRelease {
	if o == nil || o.ChartReleaseInfo == nil {
		var ret V2controllersChartRelease
		return ret
	}
	return *o.ChartReleaseInfo
}

// GetChartReleaseInfoOk returns a tuple with the ChartReleaseInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetChartReleaseInfoOk() (*V2controllersChartRelease, bool) {
	if o == nil || o.ChartReleaseInfo == nil {
		return nil, false
	}
	return o.ChartReleaseInfo, true
}

// HasChartReleaseInfo returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasChartReleaseInfo() bool {
	if o != nil && o.ChartReleaseInfo != nil {
		return true
	}

	return false
}

// SetChartReleaseInfo gets a reference to the given V2controllersChartRelease and assigns it to the ChartReleaseInfo field.
func (o *V2controllersChartDeployRecord) SetChartReleaseInfo(v V2controllersChartRelease) {
	o.ChartReleaseInfo = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *V2controllersChartDeployRecord) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetExactAppVersion returns the ExactAppVersion field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetExactAppVersion() string {
	if o == nil || o.ExactAppVersion == nil {
		var ret string
		return ret
	}
	return *o.ExactAppVersion
}

// GetExactAppVersionOk returns a tuple with the ExactAppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetExactAppVersionOk() (*string, bool) {
	if o == nil || o.ExactAppVersion == nil {
		return nil, false
	}
	return o.ExactAppVersion, true
}

// HasExactAppVersion returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasExactAppVersion() bool {
	if o != nil && o.ExactAppVersion != nil {
		return true
	}

	return false
}

// SetExactAppVersion gets a reference to the given string and assigns it to the ExactAppVersion field.
func (o *V2controllersChartDeployRecord) SetExactAppVersion(v string) {
	o.ExactAppVersion = &v
}

// GetExactChartVersion returns the ExactChartVersion field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetExactChartVersion() string {
	if o == nil || o.ExactChartVersion == nil {
		var ret string
		return ret
	}
	return *o.ExactChartVersion
}

// GetExactChartVersionOk returns a tuple with the ExactChartVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetExactChartVersionOk() (*string, bool) {
	if o == nil || o.ExactChartVersion == nil {
		return nil, false
	}
	return o.ExactChartVersion, true
}

// HasExactChartVersion returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasExactChartVersion() bool {
	if o != nil && o.ExactChartVersion != nil {
		return true
	}

	return false
}

// SetExactChartVersion gets a reference to the given string and assigns it to the ExactChartVersion field.
func (o *V2controllersChartDeployRecord) SetExactChartVersion(v string) {
	o.ExactChartVersion = &v
}

// GetHelmfileRef returns the HelmfileRef field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetHelmfileRef() string {
	if o == nil || o.HelmfileRef == nil {
		var ret string
		return ret
	}
	return *o.HelmfileRef
}

// GetHelmfileRefOk returns a tuple with the HelmfileRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetHelmfileRefOk() (*string, bool) {
	if o == nil || o.HelmfileRef == nil {
		return nil, false
	}
	return o.HelmfileRef, true
}

// HasHelmfileRef returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasHelmfileRef() bool {
	if o != nil && o.HelmfileRef != nil {
		return true
	}

	return false
}

// SetHelmfileRef gets a reference to the given string and assigns it to the HelmfileRef field.
func (o *V2controllersChartDeployRecord) SetHelmfileRef(v string) {
	o.HelmfileRef = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *V2controllersChartDeployRecord) SetId(v int32) {
	o.Id = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *V2controllersChartDeployRecord) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersChartDeployRecord) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *V2controllersChartDeployRecord) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *V2controllersChartDeployRecord) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o V2controllersChartDeployRecord) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChartRelease != nil {
		toSerialize["chartRelease"] = o.ChartRelease
	}
	if o.ChartReleaseInfo != nil {
		toSerialize["chartReleaseInfo"] = o.ChartReleaseInfo
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.ExactAppVersion != nil {
		toSerialize["exactAppVersion"] = o.ExactAppVersion
	}
	if o.ExactChartVersion != nil {
		toSerialize["exactChartVersion"] = o.ExactChartVersion
	}
	if o.HelmfileRef != nil {
		toSerialize["helmfileRef"] = o.HelmfileRef
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *V2controllersChartDeployRecord) UnmarshalJSON(bytes []byte) (err error) {
	varV2controllersChartDeployRecord := _V2controllersChartDeployRecord{}

	if err = json.Unmarshal(bytes, &varV2controllersChartDeployRecord); err == nil {
		*o = V2controllersChartDeployRecord(varV2controllersChartDeployRecord)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "chartRelease")
		delete(additionalProperties, "chartReleaseInfo")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "exactAppVersion")
		delete(additionalProperties, "exactChartVersion")
		delete(additionalProperties, "helmfileRef")
		delete(additionalProperties, "id")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV2controllersChartDeployRecord struct {
	value *V2controllersChartDeployRecord
	isSet bool
}

func (v NullableV2controllersChartDeployRecord) Get() *V2controllersChartDeployRecord {
	return v.value
}

func (v *NullableV2controllersChartDeployRecord) Set(val *V2controllersChartDeployRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableV2controllersChartDeployRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableV2controllersChartDeployRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2controllersChartDeployRecord(val *V2controllersChartDeployRecord) *NullableV2controllersChartDeployRecord {
	return &NullableV2controllersChartDeployRecord{value: val, isSet: true}
}

func (v NullableV2controllersChartDeployRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2controllersChartDeployRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


