/*
Sherlock

The Data Science Platform's source-of-truth service

API version: development
Contact: dsp-devops@broadinstitute.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sherlock

import (
	"encoding/json"
)

// V2controllersEditableCluster The subset of Cluster fields that can be edited after creation
type V2controllersEditableCluster struct {
	// Required when creating
	Address *string `json:"address,omitempty"`
	// Required when creating
	Base *string `json:"base,omitempty"`
	RequiresSuitability *bool `json:"requiresSuitability,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _V2controllersEditableCluster V2controllersEditableCluster

// NewV2controllersEditableCluster instantiates a new V2controllersEditableCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2controllersEditableCluster() *V2controllersEditableCluster {
	this := V2controllersEditableCluster{}
	var requiresSuitability bool = false
	this.RequiresSuitability = &requiresSuitability
	return &this
}

// NewV2controllersEditableClusterWithDefaults instantiates a new V2controllersEditableCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2controllersEditableClusterWithDefaults() *V2controllersEditableCluster {
	this := V2controllersEditableCluster{}
	var requiresSuitability bool = false
	this.RequiresSuitability = &requiresSuitability
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *V2controllersEditableCluster) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersEditableCluster) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *V2controllersEditableCluster) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *V2controllersEditableCluster) SetAddress(v string) {
	o.Address = &v
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *V2controllersEditableCluster) GetBase() string {
	if o == nil || o.Base == nil {
		var ret string
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersEditableCluster) GetBaseOk() (*string, bool) {
	if o == nil || o.Base == nil {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *V2controllersEditableCluster) HasBase() bool {
	if o != nil && o.Base != nil {
		return true
	}

	return false
}

// SetBase gets a reference to the given string and assigns it to the Base field.
func (o *V2controllersEditableCluster) SetBase(v string) {
	o.Base = &v
}

// GetRequiresSuitability returns the RequiresSuitability field value if set, zero value otherwise.
func (o *V2controllersEditableCluster) GetRequiresSuitability() bool {
	if o == nil || o.RequiresSuitability == nil {
		var ret bool
		return ret
	}
	return *o.RequiresSuitability
}

// GetRequiresSuitabilityOk returns a tuple with the RequiresSuitability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2controllersEditableCluster) GetRequiresSuitabilityOk() (*bool, bool) {
	if o == nil || o.RequiresSuitability == nil {
		return nil, false
	}
	return o.RequiresSuitability, true
}

// HasRequiresSuitability returns a boolean if a field has been set.
func (o *V2controllersEditableCluster) HasRequiresSuitability() bool {
	if o != nil && o.RequiresSuitability != nil {
		return true
	}

	return false
}

// SetRequiresSuitability gets a reference to the given bool and assigns it to the RequiresSuitability field.
func (o *V2controllersEditableCluster) SetRequiresSuitability(v bool) {
	o.RequiresSuitability = &v
}

func (o V2controllersEditableCluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Base != nil {
		toSerialize["base"] = o.Base
	}
	if o.RequiresSuitability != nil {
		toSerialize["requiresSuitability"] = o.RequiresSuitability
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *V2controllersEditableCluster) UnmarshalJSON(bytes []byte) (err error) {
	varV2controllersEditableCluster := _V2controllersEditableCluster{}

	if err = json.Unmarshal(bytes, &varV2controllersEditableCluster); err == nil {
		*o = V2controllersEditableCluster(varV2controllersEditableCluster)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "base")
		delete(additionalProperties, "requiresSuitability")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV2controllersEditableCluster struct {
	value *V2controllersEditableCluster
	isSet bool
}

func (v NullableV2controllersEditableCluster) Get() *V2controllersEditableCluster {
	return v.value
}

func (v *NullableV2controllersEditableCluster) Set(val *V2controllersEditableCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableV2controllersEditableCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableV2controllersEditableCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2controllersEditableCluster(val *V2controllersEditableCluster) *NullableV2controllersEditableCluster {
	return &NullableV2controllersEditableCluster{value: val, isSet: true}
}

func (v NullableV2controllersEditableCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2controllersEditableCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


