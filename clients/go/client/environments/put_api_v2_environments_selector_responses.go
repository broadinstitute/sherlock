// Code generated by go-swagger; DO NOT EDIT.

package environments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// PutAPIV2EnvironmentsSelectorReader is a Reader for the PutAPIV2EnvironmentsSelector structure.
type PutAPIV2EnvironmentsSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAPIV2EnvironmentsSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAPIV2EnvironmentsSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPutAPIV2EnvironmentsSelectorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutAPIV2EnvironmentsSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutAPIV2EnvironmentsSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutAPIV2EnvironmentsSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPutAPIV2EnvironmentsSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutAPIV2EnvironmentsSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutAPIV2EnvironmentsSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutAPIV2EnvironmentsSelectorOK creates a PutAPIV2EnvironmentsSelectorOK with default headers values
func NewPutAPIV2EnvironmentsSelectorOK() *PutAPIV2EnvironmentsSelectorOK {
	return &PutAPIV2EnvironmentsSelectorOK{}
}

/* PutAPIV2EnvironmentsSelectorOK describes a response with status code 200, with default header values.

OK
*/
type PutAPIV2EnvironmentsSelectorOK struct {
	Payload *models.V2controllersEnvironment
}

func (o *PutAPIV2EnvironmentsSelectorOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorOK  %+v", 200, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorOK) GetPayload() *models.V2controllersEnvironment {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersEnvironment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2EnvironmentsSelectorCreated creates a PutAPIV2EnvironmentsSelectorCreated with default headers values
func NewPutAPIV2EnvironmentsSelectorCreated() *PutAPIV2EnvironmentsSelectorCreated {
	return &PutAPIV2EnvironmentsSelectorCreated{}
}

/* PutAPIV2EnvironmentsSelectorCreated describes a response with status code 201, with default header values.

Created
*/
type PutAPIV2EnvironmentsSelectorCreated struct {
	Payload *models.V2controllersEnvironment
}

func (o *PutAPIV2EnvironmentsSelectorCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorCreated  %+v", 201, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorCreated) GetPayload() *models.V2controllersEnvironment {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersEnvironment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2EnvironmentsSelectorBadRequest creates a PutAPIV2EnvironmentsSelectorBadRequest with default headers values
func NewPutAPIV2EnvironmentsSelectorBadRequest() *PutAPIV2EnvironmentsSelectorBadRequest {
	return &PutAPIV2EnvironmentsSelectorBadRequest{}
}

/* PutAPIV2EnvironmentsSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutAPIV2EnvironmentsSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2EnvironmentsSelectorBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2EnvironmentsSelectorForbidden creates a PutAPIV2EnvironmentsSelectorForbidden with default headers values
func NewPutAPIV2EnvironmentsSelectorForbidden() *PutAPIV2EnvironmentsSelectorForbidden {
	return &PutAPIV2EnvironmentsSelectorForbidden{}
}

/* PutAPIV2EnvironmentsSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutAPIV2EnvironmentsSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2EnvironmentsSelectorForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorForbidden  %+v", 403, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2EnvironmentsSelectorNotFound creates a PutAPIV2EnvironmentsSelectorNotFound with default headers values
func NewPutAPIV2EnvironmentsSelectorNotFound() *PutAPIV2EnvironmentsSelectorNotFound {
	return &PutAPIV2EnvironmentsSelectorNotFound{}
}

/* PutAPIV2EnvironmentsSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutAPIV2EnvironmentsSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2EnvironmentsSelectorNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorNotFound  %+v", 404, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2EnvironmentsSelectorProxyAuthenticationRequired creates a PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired with default headers values
func NewPutAPIV2EnvironmentsSelectorProxyAuthenticationRequired() *PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired {
	return &PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired{}
}

/* PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2EnvironmentsSelectorConflict creates a PutAPIV2EnvironmentsSelectorConflict with default headers values
func NewPutAPIV2EnvironmentsSelectorConflict() *PutAPIV2EnvironmentsSelectorConflict {
	return &PutAPIV2EnvironmentsSelectorConflict{}
}

/* PutAPIV2EnvironmentsSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutAPIV2EnvironmentsSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2EnvironmentsSelectorConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorConflict  %+v", 409, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2EnvironmentsSelectorInternalServerError creates a PutAPIV2EnvironmentsSelectorInternalServerError with default headers values
func NewPutAPIV2EnvironmentsSelectorInternalServerError() *PutAPIV2EnvironmentsSelectorInternalServerError {
	return &PutAPIV2EnvironmentsSelectorInternalServerError{}
}

/* PutAPIV2EnvironmentsSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutAPIV2EnvironmentsSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2EnvironmentsSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/environments/{selector}][%d] putApiV2EnvironmentsSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PutAPIV2EnvironmentsSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2EnvironmentsSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
