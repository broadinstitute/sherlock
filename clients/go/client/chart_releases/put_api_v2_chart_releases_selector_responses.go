// Code generated by go-swagger; DO NOT EDIT.

package chart_releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// PutAPIV2ChartReleasesSelectorReader is a Reader for the PutAPIV2ChartReleasesSelector structure.
type PutAPIV2ChartReleasesSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAPIV2ChartReleasesSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAPIV2ChartReleasesSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPutAPIV2ChartReleasesSelectorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutAPIV2ChartReleasesSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutAPIV2ChartReleasesSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutAPIV2ChartReleasesSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPutAPIV2ChartReleasesSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutAPIV2ChartReleasesSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutAPIV2ChartReleasesSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutAPIV2ChartReleasesSelectorOK creates a PutAPIV2ChartReleasesSelectorOK with default headers values
func NewPutAPIV2ChartReleasesSelectorOK() *PutAPIV2ChartReleasesSelectorOK {
	return &PutAPIV2ChartReleasesSelectorOK{}
}

/* PutAPIV2ChartReleasesSelectorOK describes a response with status code 200, with default header values.

OK
*/
type PutAPIV2ChartReleasesSelectorOK struct {
	Payload *models.V2controllersChartRelease
}

func (o *PutAPIV2ChartReleasesSelectorOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorOK  %+v", 200, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorOK) GetPayload() *models.V2controllersChartRelease {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersChartRelease)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2ChartReleasesSelectorCreated creates a PutAPIV2ChartReleasesSelectorCreated with default headers values
func NewPutAPIV2ChartReleasesSelectorCreated() *PutAPIV2ChartReleasesSelectorCreated {
	return &PutAPIV2ChartReleasesSelectorCreated{}
}

/* PutAPIV2ChartReleasesSelectorCreated describes a response with status code 201, with default header values.

Created
*/
type PutAPIV2ChartReleasesSelectorCreated struct {
	Payload *models.V2controllersChartRelease
}

func (o *PutAPIV2ChartReleasesSelectorCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorCreated  %+v", 201, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorCreated) GetPayload() *models.V2controllersChartRelease {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersChartRelease)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2ChartReleasesSelectorBadRequest creates a PutAPIV2ChartReleasesSelectorBadRequest with default headers values
func NewPutAPIV2ChartReleasesSelectorBadRequest() *PutAPIV2ChartReleasesSelectorBadRequest {
	return &PutAPIV2ChartReleasesSelectorBadRequest{}
}

/* PutAPIV2ChartReleasesSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutAPIV2ChartReleasesSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2ChartReleasesSelectorBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2ChartReleasesSelectorForbidden creates a PutAPIV2ChartReleasesSelectorForbidden with default headers values
func NewPutAPIV2ChartReleasesSelectorForbidden() *PutAPIV2ChartReleasesSelectorForbidden {
	return &PutAPIV2ChartReleasesSelectorForbidden{}
}

/* PutAPIV2ChartReleasesSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutAPIV2ChartReleasesSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2ChartReleasesSelectorForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorForbidden  %+v", 403, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2ChartReleasesSelectorNotFound creates a PutAPIV2ChartReleasesSelectorNotFound with default headers values
func NewPutAPIV2ChartReleasesSelectorNotFound() *PutAPIV2ChartReleasesSelectorNotFound {
	return &PutAPIV2ChartReleasesSelectorNotFound{}
}

/* PutAPIV2ChartReleasesSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutAPIV2ChartReleasesSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2ChartReleasesSelectorNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorNotFound  %+v", 404, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2ChartReleasesSelectorProxyAuthenticationRequired creates a PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired with default headers values
func NewPutAPIV2ChartReleasesSelectorProxyAuthenticationRequired() *PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired {
	return &PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired{}
}

/* PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2ChartReleasesSelectorConflict creates a PutAPIV2ChartReleasesSelectorConflict with default headers values
func NewPutAPIV2ChartReleasesSelectorConflict() *PutAPIV2ChartReleasesSelectorConflict {
	return &PutAPIV2ChartReleasesSelectorConflict{}
}

/* PutAPIV2ChartReleasesSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutAPIV2ChartReleasesSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2ChartReleasesSelectorConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorConflict  %+v", 409, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2ChartReleasesSelectorInternalServerError creates a PutAPIV2ChartReleasesSelectorInternalServerError with default headers values
func NewPutAPIV2ChartReleasesSelectorInternalServerError() *PutAPIV2ChartReleasesSelectorInternalServerError {
	return &PutAPIV2ChartReleasesSelectorInternalServerError{}
}

/* PutAPIV2ChartReleasesSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutAPIV2ChartReleasesSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2ChartReleasesSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/chart-releases/{selector}][%d] putApiV2ChartReleasesSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PutAPIV2ChartReleasesSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2ChartReleasesSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
