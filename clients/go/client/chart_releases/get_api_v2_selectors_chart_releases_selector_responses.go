// Code generated by go-swagger; DO NOT EDIT.

package chart_releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// GetAPIV2SelectorsChartReleasesSelectorReader is a Reader for the GetAPIV2SelectorsChartReleasesSelector structure.
type GetAPIV2SelectorsChartReleasesSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2SelectorsChartReleasesSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2SelectorsChartReleasesSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2SelectorsChartReleasesSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2SelectorsChartReleasesSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2SelectorsChartReleasesSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2SelectorsChartReleasesSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2SelectorsChartReleasesSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2SelectorsChartReleasesSelectorOK creates a GetAPIV2SelectorsChartReleasesSelectorOK with default headers values
func NewGetAPIV2SelectorsChartReleasesSelectorOK() *GetAPIV2SelectorsChartReleasesSelectorOK {
	return &GetAPIV2SelectorsChartReleasesSelectorOK{}
}

/*
GetAPIV2SelectorsChartReleasesSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2SelectorsChartReleasesSelectorOK struct {
	Payload []string
}

// IsSuccess returns true when this get Api v2 selectors chart releases selector o k response has a 2xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v2 selectors chart releases selector o k response has a 3xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 selectors chart releases selector o k response has a 4xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v2 selectors chart releases selector o k response has a 5xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 selectors chart releases selector o k response a status code equal to that given
func (o *GetAPIV2SelectorsChartReleasesSelectorOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAPIV2SelectorsChartReleasesSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorOK  %+v", 200, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorOK) String() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorOK  %+v", 200, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartReleasesSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartReleasesSelectorBadRequest creates a GetAPIV2SelectorsChartReleasesSelectorBadRequest with default headers values
func NewGetAPIV2SelectorsChartReleasesSelectorBadRequest() *GetAPIV2SelectorsChartReleasesSelectorBadRequest {
	return &GetAPIV2SelectorsChartReleasesSelectorBadRequest{}
}

/*
GetAPIV2SelectorsChartReleasesSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2SelectorsChartReleasesSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 selectors chart releases selector bad request response has a 2xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 selectors chart releases selector bad request response has a 3xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 selectors chart releases selector bad request response has a 4xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 selectors chart releases selector bad request response has a 5xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 selectors chart releases selector bad request response a status code equal to that given
func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartReleasesSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartReleasesSelectorForbidden creates a GetAPIV2SelectorsChartReleasesSelectorForbidden with default headers values
func NewGetAPIV2SelectorsChartReleasesSelectorForbidden() *GetAPIV2SelectorsChartReleasesSelectorForbidden {
	return &GetAPIV2SelectorsChartReleasesSelectorForbidden{}
}

/*
GetAPIV2SelectorsChartReleasesSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2SelectorsChartReleasesSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 selectors chart releases selector forbidden response has a 2xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 selectors chart releases selector forbidden response has a 3xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 selectors chart releases selector forbidden response has a 4xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 selectors chart releases selector forbidden response has a 5xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 selectors chart releases selector forbidden response a status code equal to that given
func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorForbidden  %+v", 403, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorForbidden  %+v", 403, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartReleasesSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartReleasesSelectorNotFound creates a GetAPIV2SelectorsChartReleasesSelectorNotFound with default headers values
func NewGetAPIV2SelectorsChartReleasesSelectorNotFound() *GetAPIV2SelectorsChartReleasesSelectorNotFound {
	return &GetAPIV2SelectorsChartReleasesSelectorNotFound{}
}

/*
GetAPIV2SelectorsChartReleasesSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2SelectorsChartReleasesSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 selectors chart releases selector not found response has a 2xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 selectors chart releases selector not found response has a 3xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 selectors chart releases selector not found response has a 4xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 selectors chart releases selector not found response has a 5xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 selectors chart releases selector not found response a status code equal to that given
func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorNotFound  %+v", 404, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorNotFound  %+v", 404, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartReleasesSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired creates a GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired() *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired {
	return &GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired{}
}

/*
GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 selectors chart releases selector proxy authentication required response has a 2xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 selectors chart releases selector proxy authentication required response has a 3xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 selectors chart releases selector proxy authentication required response has a 4xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 selectors chart releases selector proxy authentication required response has a 5xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 selectors chart releases selector proxy authentication required response a status code equal to that given
func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) IsCode(code int) bool {
	return code == 407
}

func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) String() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartReleasesSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartReleasesSelectorConflict creates a GetAPIV2SelectorsChartReleasesSelectorConflict with default headers values
func NewGetAPIV2SelectorsChartReleasesSelectorConflict() *GetAPIV2SelectorsChartReleasesSelectorConflict {
	return &GetAPIV2SelectorsChartReleasesSelectorConflict{}
}

/*
GetAPIV2SelectorsChartReleasesSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2SelectorsChartReleasesSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 selectors chart releases selector conflict response has a 2xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 selectors chart releases selector conflict response has a 3xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 selectors chart releases selector conflict response has a 4xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 selectors chart releases selector conflict response has a 5xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 selectors chart releases selector conflict response a status code equal to that given
func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorConflict  %+v", 409, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) String() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorConflict  %+v", 409, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartReleasesSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartReleasesSelectorInternalServerError creates a GetAPIV2SelectorsChartReleasesSelectorInternalServerError with default headers values
func NewGetAPIV2SelectorsChartReleasesSelectorInternalServerError() *GetAPIV2SelectorsChartReleasesSelectorInternalServerError {
	return &GetAPIV2SelectorsChartReleasesSelectorInternalServerError{}
}

/*
GetAPIV2SelectorsChartReleasesSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2SelectorsChartReleasesSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 selectors chart releases selector internal server error response has a 2xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 selectors chart releases selector internal server error response has a 3xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 selectors chart releases selector internal server error response has a 4xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v2 selectors chart releases selector internal server error response has a 5xx status code
func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v2 selectors chart releases selector internal server error response a status code equal to that given
func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/selectors/chart-releases/{selector}][%d] getApiV2SelectorsChartReleasesSelectorInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartReleasesSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
