// Code generated by go-swagger; DO NOT EDIT.

package chart_deploy_records

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new chart deploy records API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for chart deploy records API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetAPIV2ChartDeployRecords(params *GetAPIV2ChartDeployRecordsParams, opts ...ClientOption) (*GetAPIV2ChartDeployRecordsOK, error)

	GetAPIV2ChartDeployRecordsSelector(params *GetAPIV2ChartDeployRecordsSelectorParams, opts ...ClientOption) (*GetAPIV2ChartDeployRecordsSelectorOK, error)

	GetAPIV2SelectorsChartDeployRecordsSelector(params *GetAPIV2SelectorsChartDeployRecordsSelectorParams, opts ...ClientOption) (*GetAPIV2SelectorsChartDeployRecordsSelectorOK, error)

	PostAPIV2ChartDeployRecords(params *PostAPIV2ChartDeployRecordsParams, opts ...ClientOption) (*PostAPIV2ChartDeployRecordsOK, *PostAPIV2ChartDeployRecordsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetAPIV2ChartDeployRecords lists chart deploy record entries

  List existing ChartDeployRecord entries, ordered by most recently updated.
*/
func (a *Client) GetAPIV2ChartDeployRecords(params *GetAPIV2ChartDeployRecordsParams, opts ...ClientOption) (*GetAPIV2ChartDeployRecordsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV2ChartDeployRecordsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIV2ChartDeployRecords",
		Method:             "GET",
		PathPattern:        "/api/v2/chart-deploy-records",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIV2ChartDeployRecordsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIV2ChartDeployRecordsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIV2ChartDeployRecords: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPIV2ChartDeployRecordsSelector gets a chart deploy record entry

  Get an existing ChartDeployRecord entry via one its "selector"--its numeric ID.
*/
func (a *Client) GetAPIV2ChartDeployRecordsSelector(params *GetAPIV2ChartDeployRecordsSelectorParams, opts ...ClientOption) (*GetAPIV2ChartDeployRecordsSelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV2ChartDeployRecordsSelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIV2ChartDeployRecordsSelector",
		Method:             "GET",
		PathPattern:        "/api/v2/chart-deploy-records/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIV2ChartDeployRecordsSelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIV2ChartDeployRecordsSelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIV2ChartDeployRecordsSelector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPIV2SelectorsChartDeployRecordsSelector lists chart deploy record selectors

  Validate a given ChartDeployRecord selector and provide any other selectors that would match the same ChartDeployRecord.
*/
func (a *Client) GetAPIV2SelectorsChartDeployRecordsSelector(params *GetAPIV2SelectorsChartDeployRecordsSelectorParams, opts ...ClientOption) (*GetAPIV2SelectorsChartDeployRecordsSelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV2SelectorsChartDeployRecordsSelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIV2SelectorsChartDeployRecordsSelector",
		Method:             "GET",
		PathPattern:        "/api/v2/selectors/chart-deploy-records/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIV2SelectorsChartDeployRecordsSelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIV2SelectorsChartDeployRecordsSelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIV2SelectorsChartDeployRecordsSelector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPIV2ChartDeployRecords creates a new chart deploy record entry

  Create a new ChartDeployRecord entry. Note that fields are immutable after creation.
*/
func (a *Client) PostAPIV2ChartDeployRecords(params *PostAPIV2ChartDeployRecordsParams, opts ...ClientOption) (*PostAPIV2ChartDeployRecordsOK, *PostAPIV2ChartDeployRecordsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPIV2ChartDeployRecordsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostAPIV2ChartDeployRecords",
		Method:             "POST",
		PathPattern:        "/api/v2/chart-deploy-records",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostAPIV2ChartDeployRecordsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PostAPIV2ChartDeployRecordsOK:
		return value, nil, nil
	case *PostAPIV2ChartDeployRecordsCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for chart_deploy_records: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
