// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// GetAPIV2UsersSelectorReader is a Reader for the GetAPIV2UsersSelector structure.
type GetAPIV2UsersSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2UsersSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2UsersSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2UsersSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2UsersSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2UsersSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2UsersSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2UsersSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2UsersSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2UsersSelectorOK creates a GetAPIV2UsersSelectorOK with default headers values
func NewGetAPIV2UsersSelectorOK() *GetAPIV2UsersSelectorOK {
	return &GetAPIV2UsersSelectorOK{}
}

/* GetAPIV2UsersSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2UsersSelectorOK struct {
	Payload *models.V2controllersUser
}

func (o *GetAPIV2UsersSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{selector}][%d] getApiV2UsersSelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIV2UsersSelectorOK) GetPayload() *models.V2controllersUser {
	return o.Payload
}

func (o *GetAPIV2UsersSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2UsersSelectorBadRequest creates a GetAPIV2UsersSelectorBadRequest with default headers values
func NewGetAPIV2UsersSelectorBadRequest() *GetAPIV2UsersSelectorBadRequest {
	return &GetAPIV2UsersSelectorBadRequest{}
}

/* GetAPIV2UsersSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2UsersSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2UsersSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{selector}][%d] getApiV2UsersSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIV2UsersSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2UsersSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2UsersSelectorForbidden creates a GetAPIV2UsersSelectorForbidden with default headers values
func NewGetAPIV2UsersSelectorForbidden() *GetAPIV2UsersSelectorForbidden {
	return &GetAPIV2UsersSelectorForbidden{}
}

/* GetAPIV2UsersSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2UsersSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2UsersSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{selector}][%d] getApiV2UsersSelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIV2UsersSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2UsersSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2UsersSelectorNotFound creates a GetAPIV2UsersSelectorNotFound with default headers values
func NewGetAPIV2UsersSelectorNotFound() *GetAPIV2UsersSelectorNotFound {
	return &GetAPIV2UsersSelectorNotFound{}
}

/* GetAPIV2UsersSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2UsersSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2UsersSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{selector}][%d] getApiV2UsersSelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIV2UsersSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2UsersSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2UsersSelectorProxyAuthenticationRequired creates a GetAPIV2UsersSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2UsersSelectorProxyAuthenticationRequired() *GetAPIV2UsersSelectorProxyAuthenticationRequired {
	return &GetAPIV2UsersSelectorProxyAuthenticationRequired{}
}

/* GetAPIV2UsersSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2UsersSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2UsersSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{selector}][%d] getApiV2UsersSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIV2UsersSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2UsersSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2UsersSelectorConflict creates a GetAPIV2UsersSelectorConflict with default headers values
func NewGetAPIV2UsersSelectorConflict() *GetAPIV2UsersSelectorConflict {
	return &GetAPIV2UsersSelectorConflict{}
}

/* GetAPIV2UsersSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2UsersSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2UsersSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{selector}][%d] getApiV2UsersSelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIV2UsersSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2UsersSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2UsersSelectorInternalServerError creates a GetAPIV2UsersSelectorInternalServerError with default headers values
func NewGetAPIV2UsersSelectorInternalServerError() *GetAPIV2UsersSelectorInternalServerError {
	return &GetAPIV2UsersSelectorInternalServerError{}
}

/* GetAPIV2UsersSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2UsersSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2UsersSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/users/{selector}][%d] getApiV2UsersSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIV2UsersSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2UsersSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
