// Code generated by go-swagger; DO NOT EDIT.

package database_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// GetAPIV2DatabaseInstancesSelectorReader is a Reader for the GetAPIV2DatabaseInstancesSelector structure.
type GetAPIV2DatabaseInstancesSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2DatabaseInstancesSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2DatabaseInstancesSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2DatabaseInstancesSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2DatabaseInstancesSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2DatabaseInstancesSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2DatabaseInstancesSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2DatabaseInstancesSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2DatabaseInstancesSelectorOK creates a GetAPIV2DatabaseInstancesSelectorOK with default headers values
func NewGetAPIV2DatabaseInstancesSelectorOK() *GetAPIV2DatabaseInstancesSelectorOK {
	return &GetAPIV2DatabaseInstancesSelectorOK{}
}

/* GetAPIV2DatabaseInstancesSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2DatabaseInstancesSelectorOK struct {
	Payload *models.V2controllersDatabaseInstance
}

func (o *GetAPIV2DatabaseInstancesSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/database-instances/{selector}][%d] getApiV2DatabaseInstancesSelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIV2DatabaseInstancesSelectorOK) GetPayload() *models.V2controllersDatabaseInstance {
	return o.Payload
}

func (o *GetAPIV2DatabaseInstancesSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersDatabaseInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2DatabaseInstancesSelectorBadRequest creates a GetAPIV2DatabaseInstancesSelectorBadRequest with default headers values
func NewGetAPIV2DatabaseInstancesSelectorBadRequest() *GetAPIV2DatabaseInstancesSelectorBadRequest {
	return &GetAPIV2DatabaseInstancesSelectorBadRequest{}
}

/* GetAPIV2DatabaseInstancesSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2DatabaseInstancesSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2DatabaseInstancesSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/database-instances/{selector}][%d] getApiV2DatabaseInstancesSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIV2DatabaseInstancesSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2DatabaseInstancesSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2DatabaseInstancesSelectorForbidden creates a GetAPIV2DatabaseInstancesSelectorForbidden with default headers values
func NewGetAPIV2DatabaseInstancesSelectorForbidden() *GetAPIV2DatabaseInstancesSelectorForbidden {
	return &GetAPIV2DatabaseInstancesSelectorForbidden{}
}

/* GetAPIV2DatabaseInstancesSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2DatabaseInstancesSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2DatabaseInstancesSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/database-instances/{selector}][%d] getApiV2DatabaseInstancesSelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIV2DatabaseInstancesSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2DatabaseInstancesSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2DatabaseInstancesSelectorNotFound creates a GetAPIV2DatabaseInstancesSelectorNotFound with default headers values
func NewGetAPIV2DatabaseInstancesSelectorNotFound() *GetAPIV2DatabaseInstancesSelectorNotFound {
	return &GetAPIV2DatabaseInstancesSelectorNotFound{}
}

/* GetAPIV2DatabaseInstancesSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2DatabaseInstancesSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2DatabaseInstancesSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/database-instances/{selector}][%d] getApiV2DatabaseInstancesSelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIV2DatabaseInstancesSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2DatabaseInstancesSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired creates a GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired() *GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired {
	return &GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired{}
}

/* GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/database-instances/{selector}][%d] getApiV2DatabaseInstancesSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2DatabaseInstancesSelectorConflict creates a GetAPIV2DatabaseInstancesSelectorConflict with default headers values
func NewGetAPIV2DatabaseInstancesSelectorConflict() *GetAPIV2DatabaseInstancesSelectorConflict {
	return &GetAPIV2DatabaseInstancesSelectorConflict{}
}

/* GetAPIV2DatabaseInstancesSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2DatabaseInstancesSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2DatabaseInstancesSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/database-instances/{selector}][%d] getApiV2DatabaseInstancesSelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIV2DatabaseInstancesSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2DatabaseInstancesSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2DatabaseInstancesSelectorInternalServerError creates a GetAPIV2DatabaseInstancesSelectorInternalServerError with default headers values
func NewGetAPIV2DatabaseInstancesSelectorInternalServerError() *GetAPIV2DatabaseInstancesSelectorInternalServerError {
	return &GetAPIV2DatabaseInstancesSelectorInternalServerError{}
}

/* GetAPIV2DatabaseInstancesSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2DatabaseInstancesSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2DatabaseInstancesSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/database-instances/{selector}][%d] getApiV2DatabaseInstancesSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIV2DatabaseInstancesSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2DatabaseInstancesSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
