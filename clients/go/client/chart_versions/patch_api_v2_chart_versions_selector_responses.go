// Code generated by go-swagger; DO NOT EDIT.

package chart_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// PatchAPIV2ChartVersionsSelectorReader is a Reader for the PatchAPIV2ChartVersionsSelector structure.
type PatchAPIV2ChartVersionsSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAPIV2ChartVersionsSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchAPIV2ChartVersionsSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAPIV2ChartVersionsSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchAPIV2ChartVersionsSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchAPIV2ChartVersionsSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchAPIV2ChartVersionsSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchAPIV2ChartVersionsSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchAPIV2ChartVersionsSelectorOK creates a PatchAPIV2ChartVersionsSelectorOK with default headers values
func NewPatchAPIV2ChartVersionsSelectorOK() *PatchAPIV2ChartVersionsSelectorOK {
	return &PatchAPIV2ChartVersionsSelectorOK{}
}

/*
PatchAPIV2ChartVersionsSelectorOK describes a response with status code 200, with default header values.

OK
*/
type PatchAPIV2ChartVersionsSelectorOK struct {
	Payload *models.V2controllersChartVersion
}

// IsSuccess returns true when this patch Api v2 chart versions selector o k response has a 2xx status code
func (o *PatchAPIV2ChartVersionsSelectorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch Api v2 chart versions selector o k response has a 3xx status code
func (o *PatchAPIV2ChartVersionsSelectorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch Api v2 chart versions selector o k response has a 4xx status code
func (o *PatchAPIV2ChartVersionsSelectorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch Api v2 chart versions selector o k response has a 5xx status code
func (o *PatchAPIV2ChartVersionsSelectorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch Api v2 chart versions selector o k response a status code equal to that given
func (o *PatchAPIV2ChartVersionsSelectorOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchAPIV2ChartVersionsSelectorOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorOK  %+v", 200, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorOK  %+v", 200, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorOK) GetPayload() *models.V2controllersChartVersion {
	return o.Payload
}

func (o *PatchAPIV2ChartVersionsSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersChartVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2ChartVersionsSelectorBadRequest creates a PatchAPIV2ChartVersionsSelectorBadRequest with default headers values
func NewPatchAPIV2ChartVersionsSelectorBadRequest() *PatchAPIV2ChartVersionsSelectorBadRequest {
	return &PatchAPIV2ChartVersionsSelectorBadRequest{}
}

/*
PatchAPIV2ChartVersionsSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchAPIV2ChartVersionsSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this patch Api v2 chart versions selector bad request response has a 2xx status code
func (o *PatchAPIV2ChartVersionsSelectorBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch Api v2 chart versions selector bad request response has a 3xx status code
func (o *PatchAPIV2ChartVersionsSelectorBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch Api v2 chart versions selector bad request response has a 4xx status code
func (o *PatchAPIV2ChartVersionsSelectorBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch Api v2 chart versions selector bad request response has a 5xx status code
func (o *PatchAPIV2ChartVersionsSelectorBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch Api v2 chart versions selector bad request response a status code equal to that given
func (o *PatchAPIV2ChartVersionsSelectorBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchAPIV2ChartVersionsSelectorBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorBadRequest  %+v", 400, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorBadRequest) String() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorBadRequest  %+v", 400, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2ChartVersionsSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2ChartVersionsSelectorForbidden creates a PatchAPIV2ChartVersionsSelectorForbidden with default headers values
func NewPatchAPIV2ChartVersionsSelectorForbidden() *PatchAPIV2ChartVersionsSelectorForbidden {
	return &PatchAPIV2ChartVersionsSelectorForbidden{}
}

/*
PatchAPIV2ChartVersionsSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchAPIV2ChartVersionsSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this patch Api v2 chart versions selector forbidden response has a 2xx status code
func (o *PatchAPIV2ChartVersionsSelectorForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch Api v2 chart versions selector forbidden response has a 3xx status code
func (o *PatchAPIV2ChartVersionsSelectorForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch Api v2 chart versions selector forbidden response has a 4xx status code
func (o *PatchAPIV2ChartVersionsSelectorForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch Api v2 chart versions selector forbidden response has a 5xx status code
func (o *PatchAPIV2ChartVersionsSelectorForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch Api v2 chart versions selector forbidden response a status code equal to that given
func (o *PatchAPIV2ChartVersionsSelectorForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchAPIV2ChartVersionsSelectorForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorForbidden  %+v", 403, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorForbidden  %+v", 403, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2ChartVersionsSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2ChartVersionsSelectorNotFound creates a PatchAPIV2ChartVersionsSelectorNotFound with default headers values
func NewPatchAPIV2ChartVersionsSelectorNotFound() *PatchAPIV2ChartVersionsSelectorNotFound {
	return &PatchAPIV2ChartVersionsSelectorNotFound{}
}

/*
PatchAPIV2ChartVersionsSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PatchAPIV2ChartVersionsSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this patch Api v2 chart versions selector not found response has a 2xx status code
func (o *PatchAPIV2ChartVersionsSelectorNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch Api v2 chart versions selector not found response has a 3xx status code
func (o *PatchAPIV2ChartVersionsSelectorNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch Api v2 chart versions selector not found response has a 4xx status code
func (o *PatchAPIV2ChartVersionsSelectorNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch Api v2 chart versions selector not found response has a 5xx status code
func (o *PatchAPIV2ChartVersionsSelectorNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch Api v2 chart versions selector not found response a status code equal to that given
func (o *PatchAPIV2ChartVersionsSelectorNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PatchAPIV2ChartVersionsSelectorNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorNotFound  %+v", 404, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorNotFound) String() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorNotFound  %+v", 404, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2ChartVersionsSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired creates a PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired with default headers values
func NewPatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired() *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired {
	return &PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired{}
}

/*
PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this patch Api v2 chart versions selector proxy authentication required response has a 2xx status code
func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch Api v2 chart versions selector proxy authentication required response has a 3xx status code
func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch Api v2 chart versions selector proxy authentication required response has a 4xx status code
func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch Api v2 chart versions selector proxy authentication required response has a 5xx status code
func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this patch Api v2 chart versions selector proxy authentication required response a status code equal to that given
func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) IsCode(code int) bool {
	return code == 407
}

func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) String() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2ChartVersionsSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2ChartVersionsSelectorConflict creates a PatchAPIV2ChartVersionsSelectorConflict with default headers values
func NewPatchAPIV2ChartVersionsSelectorConflict() *PatchAPIV2ChartVersionsSelectorConflict {
	return &PatchAPIV2ChartVersionsSelectorConflict{}
}

/*
PatchAPIV2ChartVersionsSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchAPIV2ChartVersionsSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this patch Api v2 chart versions selector conflict response has a 2xx status code
func (o *PatchAPIV2ChartVersionsSelectorConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch Api v2 chart versions selector conflict response has a 3xx status code
func (o *PatchAPIV2ChartVersionsSelectorConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch Api v2 chart versions selector conflict response has a 4xx status code
func (o *PatchAPIV2ChartVersionsSelectorConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch Api v2 chart versions selector conflict response has a 5xx status code
func (o *PatchAPIV2ChartVersionsSelectorConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this patch Api v2 chart versions selector conflict response a status code equal to that given
func (o *PatchAPIV2ChartVersionsSelectorConflict) IsCode(code int) bool {
	return code == 409
}

func (o *PatchAPIV2ChartVersionsSelectorConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorConflict  %+v", 409, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorConflict) String() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorConflict  %+v", 409, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2ChartVersionsSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2ChartVersionsSelectorInternalServerError creates a PatchAPIV2ChartVersionsSelectorInternalServerError with default headers values
func NewPatchAPIV2ChartVersionsSelectorInternalServerError() *PatchAPIV2ChartVersionsSelectorInternalServerError {
	return &PatchAPIV2ChartVersionsSelectorInternalServerError{}
}

/*
PatchAPIV2ChartVersionsSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchAPIV2ChartVersionsSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this patch Api v2 chart versions selector internal server error response has a 2xx status code
func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch Api v2 chart versions selector internal server error response has a 3xx status code
func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch Api v2 chart versions selector internal server error response has a 4xx status code
func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch Api v2 chart versions selector internal server error response has a 5xx status code
func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch Api v2 chart versions selector internal server error response a status code equal to that given
func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /api/v2/chart-versions/{selector}][%d] patchApiV2ChartVersionsSelectorInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2ChartVersionsSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
