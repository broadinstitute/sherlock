// Code generated by go-swagger; DO NOT EDIT.

package chart_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// GetAPIV2ChartVersionsReader is a Reader for the GetAPIV2ChartVersions structure.
type GetAPIV2ChartVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2ChartVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2ChartVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2ChartVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2ChartVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2ChartVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2ChartVersionsProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2ChartVersionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2ChartVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2ChartVersionsOK creates a GetAPIV2ChartVersionsOK with default headers values
func NewGetAPIV2ChartVersionsOK() *GetAPIV2ChartVersionsOK {
	return &GetAPIV2ChartVersionsOK{}
}

/*
GetAPIV2ChartVersionsOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2ChartVersionsOK struct {
	Payload []*models.V2controllersChartVersion
}

// IsSuccess returns true when this get Api v2 chart versions o k response has a 2xx status code
func (o *GetAPIV2ChartVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v2 chart versions o k response has a 3xx status code
func (o *GetAPIV2ChartVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 chart versions o k response has a 4xx status code
func (o *GetAPIV2ChartVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v2 chart versions o k response has a 5xx status code
func (o *GetAPIV2ChartVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 chart versions o k response a status code equal to that given
func (o *GetAPIV2ChartVersionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAPIV2ChartVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsOK  %+v", 200, o.Payload)
}

func (o *GetAPIV2ChartVersionsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsOK  %+v", 200, o.Payload)
}

func (o *GetAPIV2ChartVersionsOK) GetPayload() []*models.V2controllersChartVersion {
	return o.Payload
}

func (o *GetAPIV2ChartVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2ChartVersionsBadRequest creates a GetAPIV2ChartVersionsBadRequest with default headers values
func NewGetAPIV2ChartVersionsBadRequest() *GetAPIV2ChartVersionsBadRequest {
	return &GetAPIV2ChartVersionsBadRequest{}
}

/*
GetAPIV2ChartVersionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2ChartVersionsBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 chart versions bad request response has a 2xx status code
func (o *GetAPIV2ChartVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 chart versions bad request response has a 3xx status code
func (o *GetAPIV2ChartVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 chart versions bad request response has a 4xx status code
func (o *GetAPIV2ChartVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 chart versions bad request response has a 5xx status code
func (o *GetAPIV2ChartVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 chart versions bad request response a status code equal to that given
func (o *GetAPIV2ChartVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAPIV2ChartVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV2ChartVersionsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV2ChartVersionsBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2ChartVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2ChartVersionsForbidden creates a GetAPIV2ChartVersionsForbidden with default headers values
func NewGetAPIV2ChartVersionsForbidden() *GetAPIV2ChartVersionsForbidden {
	return &GetAPIV2ChartVersionsForbidden{}
}

/*
GetAPIV2ChartVersionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2ChartVersionsForbidden struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 chart versions forbidden response has a 2xx status code
func (o *GetAPIV2ChartVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 chart versions forbidden response has a 3xx status code
func (o *GetAPIV2ChartVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 chart versions forbidden response has a 4xx status code
func (o *GetAPIV2ChartVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 chart versions forbidden response has a 5xx status code
func (o *GetAPIV2ChartVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 chart versions forbidden response a status code equal to that given
func (o *GetAPIV2ChartVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAPIV2ChartVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAPIV2ChartVersionsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAPIV2ChartVersionsForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2ChartVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2ChartVersionsNotFound creates a GetAPIV2ChartVersionsNotFound with default headers values
func NewGetAPIV2ChartVersionsNotFound() *GetAPIV2ChartVersionsNotFound {
	return &GetAPIV2ChartVersionsNotFound{}
}

/*
GetAPIV2ChartVersionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2ChartVersionsNotFound struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 chart versions not found response has a 2xx status code
func (o *GetAPIV2ChartVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 chart versions not found response has a 3xx status code
func (o *GetAPIV2ChartVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 chart versions not found response has a 4xx status code
func (o *GetAPIV2ChartVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 chart versions not found response has a 5xx status code
func (o *GetAPIV2ChartVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 chart versions not found response a status code equal to that given
func (o *GetAPIV2ChartVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAPIV2ChartVersionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetAPIV2ChartVersionsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsNotFound  %+v", 404, o.Payload)
}

func (o *GetAPIV2ChartVersionsNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2ChartVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2ChartVersionsProxyAuthenticationRequired creates a GetAPIV2ChartVersionsProxyAuthenticationRequired with default headers values
func NewGetAPIV2ChartVersionsProxyAuthenticationRequired() *GetAPIV2ChartVersionsProxyAuthenticationRequired {
	return &GetAPIV2ChartVersionsProxyAuthenticationRequired{}
}

/*
GetAPIV2ChartVersionsProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2ChartVersionsProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 chart versions proxy authentication required response has a 2xx status code
func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 chart versions proxy authentication required response has a 3xx status code
func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 chart versions proxy authentication required response has a 4xx status code
func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 chart versions proxy authentication required response has a 5xx status code
func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 chart versions proxy authentication required response a status code equal to that given
func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) IsCode(code int) bool {
	return code == 407
}

func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsProxyAuthenticationRequired  %+v", 407, o.Payload)
}

func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) String() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsProxyAuthenticationRequired  %+v", 407, o.Payload)
}

func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2ChartVersionsProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2ChartVersionsConflict creates a GetAPIV2ChartVersionsConflict with default headers values
func NewGetAPIV2ChartVersionsConflict() *GetAPIV2ChartVersionsConflict {
	return &GetAPIV2ChartVersionsConflict{}
}

/*
GetAPIV2ChartVersionsConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2ChartVersionsConflict struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 chart versions conflict response has a 2xx status code
func (o *GetAPIV2ChartVersionsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 chart versions conflict response has a 3xx status code
func (o *GetAPIV2ChartVersionsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 chart versions conflict response has a 4xx status code
func (o *GetAPIV2ChartVersionsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v2 chart versions conflict response has a 5xx status code
func (o *GetAPIV2ChartVersionsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v2 chart versions conflict response a status code equal to that given
func (o *GetAPIV2ChartVersionsConflict) IsCode(code int) bool {
	return code == 409
}

func (o *GetAPIV2ChartVersionsConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsConflict  %+v", 409, o.Payload)
}

func (o *GetAPIV2ChartVersionsConflict) String() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsConflict  %+v", 409, o.Payload)
}

func (o *GetAPIV2ChartVersionsConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2ChartVersionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2ChartVersionsInternalServerError creates a GetAPIV2ChartVersionsInternalServerError with default headers values
func NewGetAPIV2ChartVersionsInternalServerError() *GetAPIV2ChartVersionsInternalServerError {
	return &GetAPIV2ChartVersionsInternalServerError{}
}

/*
GetAPIV2ChartVersionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2ChartVersionsInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

// IsSuccess returns true when this get Api v2 chart versions internal server error response has a 2xx status code
func (o *GetAPIV2ChartVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v2 chart versions internal server error response has a 3xx status code
func (o *GetAPIV2ChartVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v2 chart versions internal server error response has a 4xx status code
func (o *GetAPIV2ChartVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v2 chart versions internal server error response has a 5xx status code
func (o *GetAPIV2ChartVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v2 chart versions internal server error response a status code equal to that given
func (o *GetAPIV2ChartVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAPIV2ChartVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIV2ChartVersionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/chart-versions][%d] getApiV2ChartVersionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIV2ChartVersionsInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2ChartVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
