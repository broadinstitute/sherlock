// Code generated by go-swagger; DO NOT EDIT.

package app_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// GetAPIV2AppVersionsSelectorReader is a Reader for the GetAPIV2AppVersionsSelector structure.
type GetAPIV2AppVersionsSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2AppVersionsSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2AppVersionsSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2AppVersionsSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2AppVersionsSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2AppVersionsSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2AppVersionsSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2AppVersionsSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2AppVersionsSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2AppVersionsSelectorOK creates a GetAPIV2AppVersionsSelectorOK with default headers values
func NewGetAPIV2AppVersionsSelectorOK() *GetAPIV2AppVersionsSelectorOK {
	return &GetAPIV2AppVersionsSelectorOK{}
}

/* GetAPIV2AppVersionsSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2AppVersionsSelectorOK struct {
	Payload *models.V2controllersAppVersion
}

func (o *GetAPIV2AppVersionsSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/app-versions/{selector}][%d] getApiV2AppVersionsSelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIV2AppVersionsSelectorOK) GetPayload() *models.V2controllersAppVersion {
	return o.Payload
}

func (o *GetAPIV2AppVersionsSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersAppVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2AppVersionsSelectorBadRequest creates a GetAPIV2AppVersionsSelectorBadRequest with default headers values
func NewGetAPIV2AppVersionsSelectorBadRequest() *GetAPIV2AppVersionsSelectorBadRequest {
	return &GetAPIV2AppVersionsSelectorBadRequest{}
}

/* GetAPIV2AppVersionsSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2AppVersionsSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2AppVersionsSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/app-versions/{selector}][%d] getApiV2AppVersionsSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIV2AppVersionsSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2AppVersionsSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2AppVersionsSelectorForbidden creates a GetAPIV2AppVersionsSelectorForbidden with default headers values
func NewGetAPIV2AppVersionsSelectorForbidden() *GetAPIV2AppVersionsSelectorForbidden {
	return &GetAPIV2AppVersionsSelectorForbidden{}
}

/* GetAPIV2AppVersionsSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2AppVersionsSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2AppVersionsSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/app-versions/{selector}][%d] getApiV2AppVersionsSelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIV2AppVersionsSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2AppVersionsSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2AppVersionsSelectorNotFound creates a GetAPIV2AppVersionsSelectorNotFound with default headers values
func NewGetAPIV2AppVersionsSelectorNotFound() *GetAPIV2AppVersionsSelectorNotFound {
	return &GetAPIV2AppVersionsSelectorNotFound{}
}

/* GetAPIV2AppVersionsSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2AppVersionsSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2AppVersionsSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/app-versions/{selector}][%d] getApiV2AppVersionsSelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIV2AppVersionsSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2AppVersionsSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2AppVersionsSelectorProxyAuthenticationRequired creates a GetAPIV2AppVersionsSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2AppVersionsSelectorProxyAuthenticationRequired() *GetAPIV2AppVersionsSelectorProxyAuthenticationRequired {
	return &GetAPIV2AppVersionsSelectorProxyAuthenticationRequired{}
}

/* GetAPIV2AppVersionsSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2AppVersionsSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2AppVersionsSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/app-versions/{selector}][%d] getApiV2AppVersionsSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIV2AppVersionsSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2AppVersionsSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2AppVersionsSelectorConflict creates a GetAPIV2AppVersionsSelectorConflict with default headers values
func NewGetAPIV2AppVersionsSelectorConflict() *GetAPIV2AppVersionsSelectorConflict {
	return &GetAPIV2AppVersionsSelectorConflict{}
}

/* GetAPIV2AppVersionsSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2AppVersionsSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2AppVersionsSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/app-versions/{selector}][%d] getApiV2AppVersionsSelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIV2AppVersionsSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2AppVersionsSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2AppVersionsSelectorInternalServerError creates a GetAPIV2AppVersionsSelectorInternalServerError with default headers values
func NewGetAPIV2AppVersionsSelectorInternalServerError() *GetAPIV2AppVersionsSelectorInternalServerError {
	return &GetAPIV2AppVersionsSelectorInternalServerError{}
}

/* GetAPIV2AppVersionsSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2AppVersionsSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2AppVersionsSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/app-versions/{selector}][%d] getApiV2AppVersionsSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIV2AppVersionsSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2AppVersionsSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
