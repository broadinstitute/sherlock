// Code generated by go-swagger; DO NOT EDIT.

package ci_identifiers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAPIV2CiIdentifiersParams creates a new GetAPIV2CiIdentifiersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAPIV2CiIdentifiersParams() *GetAPIV2CiIdentifiersParams {
	return &GetAPIV2CiIdentifiersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPIV2CiIdentifiersParamsWithTimeout creates a new GetAPIV2CiIdentifiersParams object
// with the ability to set a timeout on a request.
func NewGetAPIV2CiIdentifiersParamsWithTimeout(timeout time.Duration) *GetAPIV2CiIdentifiersParams {
	return &GetAPIV2CiIdentifiersParams{
		timeout: timeout,
	}
}

// NewGetAPIV2CiIdentifiersParamsWithContext creates a new GetAPIV2CiIdentifiersParams object
// with the ability to set a context for a request.
func NewGetAPIV2CiIdentifiersParamsWithContext(ctx context.Context) *GetAPIV2CiIdentifiersParams {
	return &GetAPIV2CiIdentifiersParams{
		Context: ctx,
	}
}

// NewGetAPIV2CiIdentifiersParamsWithHTTPClient creates a new GetAPIV2CiIdentifiersParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAPIV2CiIdentifiersParamsWithHTTPClient(client *http.Client) *GetAPIV2CiIdentifiersParams {
	return &GetAPIV2CiIdentifiersParams{
		HTTPClient: client,
	}
}

/* GetAPIV2CiIdentifiersParams contains all the parameters to send to the API endpoint
   for the get API v2 ci identifiers operation.

   Typically these are written to a http.Request.
*/
type GetAPIV2CiIdentifiersParams struct {

	// CreatedAt.
	//
	// Format: date-time
	CreatedAt *strfmt.DateTime

	// ID.
	ID *int64

	/* Limit.

	   An optional limit to the number of entries returned
	*/
	Limit *int64

	// ResourceID.
	ResourceID *int64

	// ResourceType.
	ResourceType *string

	// UpdatedAt.
	//
	// Format: date-time
	UpdatedAt *strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get API v2 ci identifiers params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIV2CiIdentifiersParams) WithDefaults() *GetAPIV2CiIdentifiersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get API v2 ci identifiers params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIV2CiIdentifiersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithTimeout(timeout time.Duration) *GetAPIV2CiIdentifiersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithContext(ctx context.Context) *GetAPIV2CiIdentifiersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithHTTPClient(client *http.Client) *GetAPIV2CiIdentifiersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreatedAt adds the createdAt to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithCreatedAt(createdAt *strfmt.DateTime) *GetAPIV2CiIdentifiersParams {
	o.SetCreatedAt(createdAt)
	return o
}

// SetCreatedAt adds the createdAt to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetCreatedAt(createdAt *strfmt.DateTime) {
	o.CreatedAt = createdAt
}

// WithID adds the id to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithID(id *int64) *GetAPIV2CiIdentifiersParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetID(id *int64) {
	o.ID = id
}

// WithLimit adds the limit to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithLimit(limit *int64) *GetAPIV2CiIdentifiersParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithResourceID adds the resourceID to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithResourceID(resourceID *int64) *GetAPIV2CiIdentifiersParams {
	o.SetResourceID(resourceID)
	return o
}

// SetResourceID adds the resourceId to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetResourceID(resourceID *int64) {
	o.ResourceID = resourceID
}

// WithResourceType adds the resourceType to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithResourceType(resourceType *string) *GetAPIV2CiIdentifiersParams {
	o.SetResourceType(resourceType)
	return o
}

// SetResourceType adds the resourceType to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetResourceType(resourceType *string) {
	o.ResourceType = resourceType
}

// WithUpdatedAt adds the updatedAt to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) WithUpdatedAt(updatedAt *strfmt.DateTime) *GetAPIV2CiIdentifiersParams {
	o.SetUpdatedAt(updatedAt)
	return o
}

// SetUpdatedAt adds the updatedAt to the get API v2 ci identifiers params
func (o *GetAPIV2CiIdentifiersParams) SetUpdatedAt(updatedAt *strfmt.DateTime) {
	o.UpdatedAt = updatedAt
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPIV2CiIdentifiersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CreatedAt != nil {

		// query param createdAt
		var qrCreatedAt strfmt.DateTime

		if o.CreatedAt != nil {
			qrCreatedAt = *o.CreatedAt
		}
		qCreatedAt := qrCreatedAt.String()
		if qCreatedAt != "" {

			if err := r.SetQueryParam("createdAt", qCreatedAt); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID int64

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := swag.FormatInt64(qrID)
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.ResourceID != nil {

		// query param resourceID
		var qrResourceID int64

		if o.ResourceID != nil {
			qrResourceID = *o.ResourceID
		}
		qResourceID := swag.FormatInt64(qrResourceID)
		if qResourceID != "" {

			if err := r.SetQueryParam("resourceID", qResourceID); err != nil {
				return err
			}
		}
	}

	if o.ResourceType != nil {

		// query param resourceType
		var qrResourceType string

		if o.ResourceType != nil {
			qrResourceType = *o.ResourceType
		}
		qResourceType := qrResourceType
		if qResourceType != "" {

			if err := r.SetQueryParam("resourceType", qResourceType); err != nil {
				return err
			}
		}
	}

	if o.UpdatedAt != nil {

		// query param updatedAt
		var qrUpdatedAt strfmt.DateTime

		if o.UpdatedAt != nil {
			qrUpdatedAt = *o.UpdatedAt
		}
		qUpdatedAt := qrUpdatedAt.String()
		if qUpdatedAt != "" {

			if err := r.SetQueryParam("updatedAt", qUpdatedAt); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
