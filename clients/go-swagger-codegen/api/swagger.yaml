---
swagger: "2.0"
info:
  description: "The Data Science Platform's source-of-truth service"
  version: "development"
  title: "Sherlock"
  contact:
    name: "DSP DevOps"
    email: "dsp-devops@broadinstitute.org"
  license:
    name: "BSD-3-Clause"
    url: "https://github.com/broadinstitute/sherlock/blob/main/LICENSE.txt"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /api/v2/app-versions:
    get:
      tags:
      - "AppVersions"
      summary: "List AppVersion entries"
      description: "List existing AppVersion entries, ordered by most recently updated."
      produces:
      - "application/json"
      parameters:
      - name: "appVersion"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "AppVersion"
        x-optionalDataType: "String"
      - name: "chart"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "Chart"
        x-optionalDataType: "String"
      - name: "createdAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CreatedAt"
        x-optionalDataType: "String"
      - name: "gitBranch"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "GitBranch"
        x-optionalDataType: "String"
      - name: "gitCommit"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "GitCommit"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "updatedAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UpdatedAt"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "An optional limit to the number of entries returned"
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/v2controllers.AppVersion"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    post:
      tags:
      - "AppVersions"
      summary: "Create a new AppVersion entry"
      description: "Create a new AppVersion entry. Note that fields are immutable\
        \ after creation."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "app-version"
        description: "The AppVersion to create"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.CreatableAppVersion"
        x-exportParamName: "AppVersion"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/v2controllers.AppVersion"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/app-versions/{selector}:
    get:
      tags:
      - "AppVersions"
      summary: "Get a AppVersion entry"
      description: "Get an existing AppVersion entry via one its \"selector\"--its\
        \ numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The AppVersion to get's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.AppVersion"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/chart-deploy-records:
    get:
      tags:
      - "ChartDeployRecords"
      summary: "List ChartDeployRecord entries"
      description: "List existing ChartDeployRecord entries, ordered by most recently\
        \ updated."
      produces:
      - "application/json"
      parameters:
      - name: "chartRelease"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "ChartRelease"
        x-optionalDataType: "String"
      - name: "createdAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CreatedAt"
        x-optionalDataType: "String"
      - name: "exactAppVersion"
        in: "query"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
        required: false
        type: "string"
        x-exportParamName: "ExactAppVersion"
        x-optionalDataType: "String"
      - name: "exactChartVersion"
        in: "query"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
        required: false
        type: "string"
        x-exportParamName: "ExactChartVersion"
        x-optionalDataType: "String"
      - name: "helmfileRef"
        in: "query"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
        required: false
        type: "string"
        x-exportParamName: "HelmfileRef"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "updatedAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UpdatedAt"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "An optional limit to the number of entries returned"
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/v2controllers.ChartDeployRecord"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    post:
      tags:
      - "ChartDeployRecords"
      summary: "Create a new ChartDeployRecord entry"
      description: "Create a new ChartDeployRecord entry. Note that fields are immutable\
        \ after creation."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "chart-deploy-record"
        description: "The ChartDeployRecord to create"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.CreatableChartDeployRecord"
        x-exportParamName: "ChartDeployRecord"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/v2controllers.ChartDeployRecord"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/chart-deploy-records/{selector}:
    get:
      tags:
      - "ChartDeployRecords"
      summary: "Get a ChartDeployRecord entry"
      description: "Get an existing ChartDeployRecord entry via one its \"selector\"\
        --its numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The ChartDeployRecord to get's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.ChartDeployRecord"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/chart-releases:
    get:
      tags:
      - "ChartReleases"
      summary: "List ChartRelease entries"
      description: "List existing ChartRelease entries, ordered by most recently updated."
      produces:
      - "application/json"
      parameters:
      - name: "chart"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "Chart"
        x-optionalDataType: "String"
      - name: "cluster"
        in: "query"
        description: "When creating, will default the environment's default cluster,\
          \ if provided. Either this or environment must be provided."
        required: false
        type: "string"
        x-exportParamName: "Cluster"
        x-optionalDataType: "String"
      - name: "createdAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CreatedAt"
        x-optionalDataType: "String"
      - name: "currentAppVersionExact"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CurrentAppVersionExact"
        x-optionalDataType: "String"
      - name: "currentChartVersionExact"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CurrentChartVersionExact"
        x-optionalDataType: "String"
      - name: "destinationType"
        in: "query"
        description: "Calculated field"
        required: false
        type: "string"
        x-exportParamName: "DestinationType"
        x-optionalDataType: "String"
      - name: "environment"
        in: "query"
        description: "Either this or cluster must be provided."
        required: false
        type: "string"
        x-exportParamName: "Environment"
        x-optionalDataType: "String"
      - name: "helmfileRef"
        in: "query"
        required: false
        type: "string"
        default: "HEAD"
        x-exportParamName: "HelmfileRef"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "When creating, will be calculated if left empty"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "namespace"
        in: "query"
        description: "When creating, will default to the environment's default namespace,\
          \ if provided"
        required: false
        type: "string"
        x-exportParamName: "Namespace"
        x-optionalDataType: "String"
      - name: "targetAppVersionBranch"
        in: "query"
        description: "When creating, will default to the app's main branch if it has\
          \ one recorded"
        required: false
        type: "string"
        x-exportParamName: "TargetAppVersionBranch"
        x-optionalDataType: "String"
      - name: "targetAppVersionCommit"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TargetAppVersionCommit"
        x-optionalDataType: "String"
      - name: "targetAppVersionExact"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TargetAppVersionExact"
        x-optionalDataType: "String"
      - name: "targetAppVersionUse"
        in: "query"
        description: "When creating, will default to referencing any provided target\
          \ app version field (exact, then commit, then branch)"
        required: false
        type: "string"
        enum:
        - "branch"
        - "commit"
        - "exact"
        x-exportParamName: "TargetAppVersionUse"
        x-optionalDataType: "String"
      - name: "targetChartVersionExact"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TargetChartVersionExact"
        x-optionalDataType: "String"
      - name: "targetChartVersionUse"
        in: "query"
        description: "When creating, will default to latest unless an exact target\
          \ chart version is provided"
        required: false
        type: "string"
        enum:
        - "latest"
        - "exact"
        x-exportParamName: "TargetChartVersionUse"
        x-optionalDataType: "String"
      - name: "thelmaMode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ThelmaMode"
        x-optionalDataType: "String"
      - name: "updatedAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UpdatedAt"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "An optional limit to the number of entries returned"
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/v2controllers.ChartRelease"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    post:
      tags:
      - "ChartReleases"
      summary: "Create a new ChartRelease entry"
      description: "Create a new ChartRelease entry. Note that some fields are immutable\
        \ after creation; /edit lists mutable fields."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "chart-release"
        description: "The ChartRelease to create"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.CreatableChartRelease"
        x-exportParamName: "ChartRelease"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/v2controllers.ChartRelease"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/chart-releases/{selector}:
    get:
      tags:
      - "ChartReleases"
      summary: "Get a ChartRelease entry"
      description: "Get an existing ChartRelease entry via one of its \"selectors\"\
        : name, numeric ID, environment/chart, or cluster/namespace/chart."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The ChartRelease to get's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.ChartRelease"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    delete:
      tags:
      - "ChartReleases"
      summary: "Delete a ChartRelease entry"
      description: "Delete an existing ChartRelease entry via one of its \"selectors\"\
        : name, numeric ID, environment/chart, or cluster/namespace/chart."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The ChartRelease to delete's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.ChartRelease"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    patch:
      tags:
      - "ChartReleases"
      summary: "Edit a ChartRelease entry"
      description: "Edit an existing ChartRelease entry via one of its \"selectors\"\
        : name, numeric ID, environment/chart, or cluster/namespace/chart. Note that\
        \ only mutable fields are available here, immutable fields can only be set\
        \ using /create."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The ChartRelease to edit's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      - in: "body"
        name: "chart-release"
        description: "The edits to make to the ChartRelease"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.EditableChartRelease"
        x-exportParamName: "ChartRelease"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.ChartRelease"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/chart-versions:
    get:
      tags:
      - "ChartVersions"
      summary: "List ChartVersion entries"
      description: "List existing ChartVersion entries, ordered by most recently updated."
      produces:
      - "application/json"
      parameters:
      - name: "chart"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "Chart"
        x-optionalDataType: "String"
      - name: "chartVersion"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "ChartVersion"
        x-optionalDataType: "String"
      - name: "createdAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CreatedAt"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "updatedAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UpdatedAt"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "An optional limit to the number of entries returned"
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/v2controllers.ChartVersion"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    post:
      tags:
      - "ChartVersions"
      summary: "Create a new ChartVersion entry"
      description: "Create a new ChartVersion entry. Note that fields are immutable\
        \ after creation."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "chart-version"
        description: "The ChartVersion to create"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.CreatableChartVersion"
        x-exportParamName: "ChartVersion"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/v2controllers.ChartVersion"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/chart-versions/{selector}:
    get:
      tags:
      - "ChartVersions"
      summary: "Get a ChartVersion entry"
      description: "Get an existing ChartVersion entry via one its \"selector\"--its\
        \ numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The ChartVersion to get's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.ChartVersion"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/charts:
    get:
      tags:
      - "Charts"
      summary: "List Chart entries"
      description: "List existing Chart entries, ordered by most recently updated."
      produces:
      - "application/json"
      parameters:
      - name: "appImageGitMainBranch"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppImageGitMainBranch"
        x-optionalDataType: "String"
      - name: "appImageGitRepo"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "AppImageGitRepo"
        x-optionalDataType: "String"
      - name: "chartRepo"
        in: "query"
        required: false
        type: "string"
        default: "terra-helm"
        x-exportParamName: "ChartRepo"
        x-optionalDataType: "String"
      - name: "createdAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CreatedAt"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "updatedAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UpdatedAt"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "An optional limit to the number of entries returned"
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/v2controllers.Chart"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    post:
      tags:
      - "Charts"
      summary: "Create a new Chart entry"
      description: "Create a new Chart entry. Note that some fields are immutable\
        \ after creation; /edit lists mutable fields."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "chart"
        description: "The Chart to create"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.CreatableChart"
        x-exportParamName: "Chart"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/v2controllers.Chart"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/charts/{selector}:
    get:
      tags:
      - "Charts"
      summary: "Get a Chart entry"
      description: "Get an existing Chart entry via one of its \"selectors\": name\
        \ or numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Chart to get's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Chart"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    delete:
      tags:
      - "Charts"
      summary: "Delete a Chart entry"
      description: "Delete an existing Chart entry via one of its \"selectors\": name\
        \ or numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Chart to delete's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Chart"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    patch:
      tags:
      - "Charts"
      summary: "Edit a Chart entry"
      description: "Edit an existing Chart entry via one of its \"selectors\": name\
        \ or numeric ID. Note that only mutable fields are available here, immutable\
        \ fields can only be set using /create."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Chart to edit's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      - in: "body"
        name: "chart"
        description: "The edits to make to the Chart"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.EditableChart"
        x-exportParamName: "Chart"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Chart"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/clusters:
    get:
      tags:
      - "Clusters"
      summary: "List Cluster entries"
      description: "List existing Cluster entries, ordered by most recently updated."
      produces:
      - "application/json"
      parameters:
      - name: "address"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "Address"
        x-optionalDataType: "String"
      - name: "azureSubscription"
        in: "query"
        description: "Required when creating if providers is 'azure'"
        required: false
        type: "string"
        x-exportParamName: "AzureSubscription"
        x-optionalDataType: "String"
      - name: "base"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "Base"
        x-optionalDataType: "String"
      - name: "createdAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CreatedAt"
        x-optionalDataType: "String"
      - name: "googleProject"
        in: "query"
        description: "Required when creating if provider is 'google'"
        required: false
        type: "string"
        x-exportParamName: "GoogleProject"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        description: "Required when creating"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        required: false
        type: "string"
        default: "google"
        enum:
        - "google"
        - "azure"
        x-exportParamName: "Provider"
        x-optionalDataType: "String"
      - name: "requiresSuitability"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RequiresSuitability"
        x-optionalDataType: "Bool"
      - name: "updatedAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UpdatedAt"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "An optional limit to the number of entries returned"
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/v2controllers.Cluster"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    post:
      tags:
      - "Clusters"
      summary: "Create a new Cluster entry"
      description: "Create a new Cluster entry. Note that some fields are immutable\
        \ after creation; /edit lists mutable fields."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "cluster"
        description: "The Cluster to create"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.CreatableCluster"
        x-exportParamName: "Cluster"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/v2controllers.Cluster"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/clusters/{selector}:
    get:
      tags:
      - "Clusters"
      summary: "Get a Cluster entry"
      description: "Get an existing Cluster entry via one of its \"selectors\": name\
        \ or numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Cluster to get's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Cluster"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    delete:
      tags:
      - "Clusters"
      summary: "Delete a Cluster entry"
      description: "Delete an existing Cluster entry via one of its \"selectors\"\
        : name or numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Cluster to delete's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Cluster"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    patch:
      tags:
      - "Clusters"
      summary: "Edit a Cluster entry"
      description: "Edit an existing Cluster entry via one of its \"selectors\": name\
        \ or numeric ID. Note that only mutable fields are available here, immutable\
        \ fields can only be set using /create."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Cluster to edit's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      - in: "body"
        name: "cluster"
        description: "The edits to make to the Cluster"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.EditableCluster"
        x-exportParamName: "Cluster"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Cluster"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/environments:
    get:
      tags:
      - "Environments"
      summary: "List Environment entries"
      description: "List existing Environment entries, ordered by most recently updated."
      produces:
      - "application/json"
      parameters:
      - name: "base"
        in: "query"
        description: "Required when creating"
        required: false
        type: "string"
        x-exportParamName: "Base"
        x-optionalDataType: "String"
      - name: "chartReleasesFromTemplate"
        in: "query"
        description: "Upon creation of a dynamic environment, if this is true the\
          \ template's chart releases will be copied to the new environment"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "ChartReleasesFromTemplate"
        x-optionalDataType: "Bool"
      - name: "createdAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CreatedAt"
        x-optionalDataType: "String"
      - name: "defaultCluster"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DefaultCluster"
        x-optionalDataType: "String"
      - name: "defaultNamespace"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DefaultNamespace"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "Id"
        x-optionalDataType: "Int32"
      - name: "lifecycle"
        in: "query"
        required: false
        type: "string"
        default: "dynamic"
        x-exportParamName: "Lifecycle"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "When creating, will be calculated if dynamic, required otherwise"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "owner"
        in: "query"
        description: "When creating, will be set to your email"
        required: false
        type: "string"
        x-exportParamName: "Owner"
        x-optionalDataType: "String"
      - name: "requiresSuitability"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "RequiresSuitability"
        x-optionalDataType: "Bool"
      - name: "templateEnvironment"
        in: "query"
        description: "Required for dynamic environments"
        required: false
        type: "string"
        x-exportParamName: "TemplateEnvironment"
        x-optionalDataType: "String"
      - name: "updatedAt"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "UpdatedAt"
        x-optionalDataType: "String"
      - name: "valuesName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ValuesName"
        x-optionalDataType: "String"
      - name: "limit"
        in: "query"
        description: "An optional limit to the number of entries returned"
        required: false
        type: "integer"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/v2controllers.Environment"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    post:
      tags:
      - "Environments"
      summary: "Create a new Environment entry"
      description: "Create a new Environment entry. Note that some fields are immutable\
        \ after creation; /edit lists mutable fields.\nCreating a dynamic environment\
        \ based on a template will also copy ChartReleases from the template."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "environment"
        description: "The Environment to create"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.CreatableEnvironment"
        x-exportParamName: "Environment"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/v2controllers.Environment"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/environments/{selector}:
    get:
      tags:
      - "Environments"
      summary: "Get a Environment entry"
      description: "Get an existing Environment entry via one of its \"selectors\"\
        : name or numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Environment to get's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Environment"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    delete:
      tags:
      - "Environments"
      summary: "Delete a Environment entry"
      description: "Delete an existing Environment entry via one of its \"selectors\"\
        : name or numeric ID."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Environment to delete's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Environment"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
    patch:
      tags:
      - "Environments"
      summary: "Edit a Environment entry"
      description: "Edit an existing Environment entry via one of its \"selectors\"\
        : name or numeric ID. Note that only mutable fields are available here, immutable\
        \ fields can only be set using /create."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The Environment to edit's selector: name or numeric ID"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      - in: "body"
        name: "environment"
        description: "The edits to make to the Environment"
        required: true
        schema:
          $ref: "#/definitions/v2controllers.EditableEnvironment"
        x-exportParamName: "Environment"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/v2controllers.Environment"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/selectors/app-versions/{selector}:
    get:
      tags:
      - "AppVersions"
      summary: "List AppVersion selectors"
      description: "Validate a given AppVersion selector and provide any other selectors\
        \ that would match the same AppVersion."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The selector of the AppVersion to list other selectors for"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/selectors/chart-deploy-records/{selector}:
    get:
      tags:
      - "ChartDeployRecords"
      summary: "List ChartDeployRecord selectors"
      description: "Validate a given ChartDeployRecord selector and provide any other\
        \ selectors that would match the same ChartDeployRecord."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The selector of the ChartDeployRecord to list other selectors\
          \ for"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/selectors/chart-releases/{selector}:
    get:
      tags:
      - "ChartReleases"
      summary: "List ChartRelease selectors"
      description: "Validate a given ChartRelease selector and provide any other selectors\
        \ that would match the same ChartRelease."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The selector of the ChartRelease to list other selectors for"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/selectors/chart-versions/{selector}:
    get:
      tags:
      - "ChartVersions"
      summary: "List ChartVersion selectors"
      description: "Validate a given ChartVersion selector and provide any other selectors\
        \ that would match the same ChartVersion."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The selector of the ChartVersion to list other selectors for"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/selectors/charts/{selector}:
    get:
      tags:
      - "Charts"
      summary: "List Chart selectors"
      description: "Validate a given Chart selector and provide any other selectors\
        \ that would match the same Chart."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The selector of the Chart to list other selectors for"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/selectors/clusters/{selector}:
    get:
      tags:
      - "Clusters"
      summary: "List Cluster selectors"
      description: "Validate a given Cluster selector and provide any other selectors\
        \ that would match the same Cluster."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The selector of the Cluster to list other selectors for"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /api/v2/selectors/environments/{selector}:
    get:
      tags:
      - "Environments"
      summary: "List Environment selectors"
      description: "Validate a given Environment selector and provide any other selectors\
        \ that would match the same Environment."
      produces:
      - "application/json"
      parameters:
      - name: "selector"
        in: "path"
        description: "The selector of the Environment to list other selectors for"
        required: true
        type: "string"
        x-exportParamName: "Selector"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "409":
          description: "Conflict"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /my-user:
    get:
      tags:
      - "Misc"
      summary: "Get information about the calling user"
      description: "Get Sherlock's understanding of the calling user based on IAP\
        \ and the Firecloud.org Google Workspace organization."
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/misc.MyUserResponse"
        "407":
          description: "Proxy Authentication Required"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/errors.ErrorResponse"
  /status:
    get:
      tags:
      - "Misc"
      summary: "Get Sherlock's current status"
      description: "Get Sherlock's current status. Right now, this endpoint always\
        \ returned OK (if the server is online).\nThis endpoint is acceptable to use\
        \ for a readiness check."
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/misc.StatusResponse"
  /version:
    get:
      tags:
      - "Misc"
      summary: "Get Sherlock's own current version"
      description: "Get the build version of this Sherlock instance."
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/misc.VersionResponse"
definitions:
  auth.ExtraPermissions:
    type: "object"
    properties:
      suitable:
        type: "boolean"
    example:
      suitable: true
  auth.FirecloudAccount:
    type: "object"
    properties:
      acceptedGoogleTerms:
        type: "boolean"
      archived:
        type: "boolean"
      email:
        type: "string"
      enrolledIn2Fa:
        type: "boolean"
      groups:
        $ref: "#/definitions/auth.FirecloudGroupMembership"
      suspended:
        type: "boolean"
      suspensionReason:
        type: "string"
    example:
      archived: true
      enrolledIn2Fa: true
      suspensionReason: "suspensionReason"
      acceptedGoogleTerms: true
      groups:
        firecloud-project-owners: true
        fc-admins: true
      email: "email"
      suspended: true
  auth.FirecloudGroupMembership:
    type: "object"
    properties:
      fc-admins:
        type: "boolean"
      firecloud-project-owners:
        type: "boolean"
    example:
      firecloud-project-owners: true
      fc-admins: true
  auth.User:
    type: "object"
    properties:
      authenticatedEmail:
        type: "string"
      matchedExtraPermissions:
        $ref: "#/definitions/auth.ExtraPermissions"
      matchedFirecloudAccount:
        $ref: "#/definitions/auth.FirecloudAccount"
    example:
      matchedExtraPermissions:
        suitable: true
      matchedFirecloudAccount:
        archived: true
        enrolledIn2Fa: true
        suspensionReason: "suspensionReason"
        acceptedGoogleTerms: true
        groups:
          firecloud-project-owners: true
          fc-admins: true
        email: "email"
        suspended: true
      authenticatedEmail: "authenticatedEmail"
  errors.ErrorResponse:
    type: "object"
    properties:
      message:
        type: "string"
      toBlame:
        type: "string"
      type:
        type: "string"
  misc.MyUserResponse:
    type: "object"
    properties:
      email:
        type: "string"
      rawInfo:
        $ref: "#/definitions/auth.User"
      suitability:
        type: "string"
    example:
      suitability: "suitability"
      rawInfo:
        matchedExtraPermissions:
          suitable: true
        matchedFirecloudAccount:
          archived: true
          enrolledIn2Fa: true
          suspensionReason: "suspensionReason"
          acceptedGoogleTerms: true
          groups:
            firecloud-project-owners: true
            fc-admins: true
          email: "email"
          suspended: true
        authenticatedEmail: "authenticatedEmail"
      email: "email"
  misc.StatusResponse:
    type: "object"
    properties:
      ok:
        type: "boolean"
    example:
      ok: true
  misc.VersionResponse:
    type: "object"
    properties:
      buildInfo:
        type: "object"
        additionalProperties:
          type: "string"
      goVersion:
        type: "string"
      version:
        type: "string"
    example:
      buildInfo:
        key: "buildInfo"
      goVersion: "goVersion"
      version: "version"
  v2controllers.AppVersion:
    type: "object"
    properties:
      appVersion:
        type: "string"
        description: "Required when creating"
      chart:
        type: "string"
        description: "Required when creating"
      chartInfo:
        $ref: "#/definitions/v2controllers.Chart"
      createdAt:
        type: "string"
      gitBranch:
        type: "string"
      gitCommit:
        type: "string"
      id:
        type: "integer"
      updatedAt:
        type: "string"
    example:
      createdAt: "createdAt"
      appVersion: "appVersion"
      gitCommit: "gitCommit"
      chartInfo:
        appImageGitRepo: "appImageGitRepo"
        createdAt: "createdAt"
        name: "name"
        id: 0
        appImageGitMainBranch: "appImageGitMainBranch"
        chartRepo: "terra-helm"
        updatedAt: "updatedAt"
      id: 6
      chart: "chart"
      gitBranch: "gitBranch"
      updatedAt: "updatedAt"
  v2controllers.Chart:
    type: "object"
    properties:
      appImageGitMainBranch:
        type: "string"
      appImageGitRepo:
        type: "string"
      chartRepo:
        type: "string"
        default: "terra-helm"
      createdAt:
        type: "string"
      id:
        type: "integer"
      name:
        type: "string"
        description: "Required when creating"
      updatedAt:
        type: "string"
    example:
      appImageGitRepo: "appImageGitRepo"
      createdAt: "createdAt"
      name: "name"
      id: 0
      appImageGitMainBranch: "appImageGitMainBranch"
      chartRepo: "terra-helm"
      updatedAt: "updatedAt"
  v2controllers.ChartDeployRecord:
    type: "object"
    properties:
      chartRelease:
        type: "string"
        description: "Required when creating"
      chartReleaseInfo:
        $ref: "#/definitions/v2controllers.ChartRelease"
      createdAt:
        type: "string"
      exactAppVersion:
        type: "string"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
      exactChartVersion:
        type: "string"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
      helmfileRef:
        type: "string"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
      id:
        type: "integer"
      updatedAt:
        type: "string"
    example:
      createdAt: "createdAt"
      chartRelease: "chartRelease"
      helmfileRef: "helmfileRef"
      id: 5
      exactChartVersion: "exactChartVersion"
      chartReleaseInfo:
        cluster: "cluster"
        targetAppVersionBranch: "targetAppVersionBranch"
        targetChartVersionExact: "targetChartVersionExact"
        currentAppVersionExact: "currentAppVersionExact"
        environmentInfo:
          owner: "owner"
          defaultNamespace: "defaultNamespace"
          chartReleasesFromTemplate: true
          lifecycle: "dynamic"
          createdAt: "createdAt"
          defaultCluster: "defaultCluster"
          templateEnvironmentInfo: "{}"
          defaultClusterInfo:
            createdAt: "createdAt"
            googleProject: "googleProject"
            address: "address"
            azureSubscription: "azureSubscription"
            provider: "google"
            name: "name"
            requiresSuitability: false
            id: 0
            base: "base"
            updatedAt: "updatedAt"
          name: "name"
          templateEnvironment: "templateEnvironment"
          requiresSuitability: false
          id: 6
          valuesName: "valuesName"
          base: "base"
          updatedAt: "updatedAt"
        targetAppVersionCommit: "targetAppVersionCommit"
        targetChartVersionUse: "latest"
        createdAt: "createdAt"
        environment: "environment"
        helmfileRef: "HEAD"
        targetAppVersionExact: "targetAppVersionExact"
        currentChartVersionExact: "currentChartVersionExact"
        thelmaMode: "thelmaMode"
        chartInfo:
          appImageGitRepo: "appImageGitRepo"
          createdAt: "createdAt"
          name: "name"
          id: 0
          appImageGitMainBranch: "appImageGitMainBranch"
          chartRepo: "terra-helm"
          updatedAt: "updatedAt"
        clusterInfo:
          createdAt: "createdAt"
          googleProject: "googleProject"
          address: "address"
          azureSubscription: "azureSubscription"
          provider: "google"
          name: "name"
          requiresSuitability: false
          id: 0
          base: "base"
          updatedAt: "updatedAt"
        name: "name"
        namespace: "namespace"
        destinationType: "destinationType"
        targetAppVersionUse: "branch"
        id: 1
        chart: "chart"
        updatedAt: "updatedAt"
      exactAppVersion: "exactAppVersion"
      updatedAt: "updatedAt"
  v2controllers.ChartRelease:
    type: "object"
    properties:
      chart:
        type: "string"
        description: "Required when creating"
      chartInfo:
        $ref: "#/definitions/v2controllers.Chart"
      cluster:
        type: "string"
        description: "When creating, will default the environment's default cluster,\
          \ if provided. Either this or environment must be provided."
      clusterInfo:
        $ref: "#/definitions/v2controllers.Cluster"
      createdAt:
        type: "string"
      currentAppVersionExact:
        type: "string"
      currentChartVersionExact:
        type: "string"
      destinationType:
        type: "string"
        description: "Calculated field"
      environment:
        type: "string"
        description: "Either this or cluster must be provided."
      environmentInfo:
        $ref: "#/definitions/v2controllers.Environment"
      helmfileRef:
        type: "string"
        default: "HEAD"
      id:
        type: "integer"
      name:
        type: "string"
        description: "When creating, will be calculated if left empty"
      namespace:
        type: "string"
        description: "When creating, will default to the environment's default namespace,\
          \ if provided"
      targetAppVersionBranch:
        type: "string"
        description: "When creating, will default to the app's main branch if it has\
          \ one recorded"
      targetAppVersionCommit:
        type: "string"
      targetAppVersionExact:
        type: "string"
      targetAppVersionUse:
        type: "string"
        description: "When creating, will default to referencing any provided target\
          \ app version field (exact, then commit, then branch)"
        enum:
        - "branch"
        - "commit"
        - "exact"
      targetChartVersionExact:
        type: "string"
      targetChartVersionUse:
        type: "string"
        description: "When creating, will default to latest unless an exact target\
          \ chart version is provided"
        enum:
        - "latest"
        - "exact"
      thelmaMode:
        type: "string"
      updatedAt:
        type: "string"
    example:
      cluster: "cluster"
      targetAppVersionBranch: "targetAppVersionBranch"
      targetChartVersionExact: "targetChartVersionExact"
      currentAppVersionExact: "currentAppVersionExact"
      environmentInfo:
        owner: "owner"
        defaultNamespace: "defaultNamespace"
        chartReleasesFromTemplate: true
        lifecycle: "dynamic"
        createdAt: "createdAt"
        defaultCluster: "defaultCluster"
        templateEnvironmentInfo: "{}"
        defaultClusterInfo:
          createdAt: "createdAt"
          googleProject: "googleProject"
          address: "address"
          azureSubscription: "azureSubscription"
          provider: "google"
          name: "name"
          requiresSuitability: false
          id: 0
          base: "base"
          updatedAt: "updatedAt"
        name: "name"
        templateEnvironment: "templateEnvironment"
        requiresSuitability: false
        id: 6
        valuesName: "valuesName"
        base: "base"
        updatedAt: "updatedAt"
      targetAppVersionCommit: "targetAppVersionCommit"
      targetChartVersionUse: "latest"
      createdAt: "createdAt"
      environment: "environment"
      helmfileRef: "HEAD"
      targetAppVersionExact: "targetAppVersionExact"
      currentChartVersionExact: "currentChartVersionExact"
      thelmaMode: "thelmaMode"
      chartInfo:
        appImageGitRepo: "appImageGitRepo"
        createdAt: "createdAt"
        name: "name"
        id: 0
        appImageGitMainBranch: "appImageGitMainBranch"
        chartRepo: "terra-helm"
        updatedAt: "updatedAt"
      clusterInfo:
        createdAt: "createdAt"
        googleProject: "googleProject"
        address: "address"
        azureSubscription: "azureSubscription"
        provider: "google"
        name: "name"
        requiresSuitability: false
        id: 0
        base: "base"
        updatedAt: "updatedAt"
      name: "name"
      namespace: "namespace"
      destinationType: "destinationType"
      targetAppVersionUse: "branch"
      id: 1
      chart: "chart"
      updatedAt: "updatedAt"
  v2controllers.ChartVersion:
    type: "object"
    properties:
      chart:
        type: "string"
        description: "Required when creating"
      chartInfo:
        $ref: "#/definitions/v2controllers.Chart"
      chartVersion:
        type: "string"
        description: "Required when creating"
      createdAt:
        type: "string"
      id:
        type: "integer"
      updatedAt:
        type: "string"
    example:
      createdAt: "createdAt"
      chartVersion: "chartVersion"
      chartInfo:
        appImageGitRepo: "appImageGitRepo"
        createdAt: "createdAt"
        name: "name"
        id: 0
        appImageGitMainBranch: "appImageGitMainBranch"
        chartRepo: "terra-helm"
        updatedAt: "updatedAt"
      id: 0
      chart: "chart"
      updatedAt: "updatedAt"
  v2controllers.Cluster:
    type: "object"
    required:
    - "name"
    properties:
      address:
        type: "string"
        description: "Required when creating"
      azureSubscription:
        type: "string"
        description: "Required when creating if providers is 'azure'"
      base:
        type: "string"
        description: "Required when creating"
      createdAt:
        type: "string"
      googleProject:
        type: "string"
        description: "Required when creating if provider is 'google'"
      id:
        type: "integer"
      name:
        type: "string"
        description: "Required when creating"
      provider:
        type: "string"
        default: "google"
        enum:
        - "google"
        - "azure"
      requiresSuitability:
        type: "boolean"
        default: false
      updatedAt:
        type: "string"
    description: "The full set of Cluster fields that can be read or used for filtering\
      \ queries"
    example:
      createdAt: "createdAt"
      googleProject: "googleProject"
      address: "address"
      azureSubscription: "azureSubscription"
      provider: "google"
      name: "name"
      requiresSuitability: false
      id: 0
      base: "base"
      updatedAt: "updatedAt"
  v2controllers.CreatableAppVersion:
    type: "object"
    properties:
      appVersion:
        type: "string"
        description: "Required when creating"
      chart:
        type: "string"
        description: "Required when creating"
      gitBranch:
        type: "string"
      gitCommit:
        type: "string"
  v2controllers.CreatableChart:
    type: "object"
    properties:
      appImageGitMainBranch:
        type: "string"
      appImageGitRepo:
        type: "string"
      chartRepo:
        type: "string"
        default: "terra-helm"
      name:
        type: "string"
        description: "Required when creating"
  v2controllers.CreatableChartDeployRecord:
    type: "object"
    properties:
      chartRelease:
        type: "string"
        description: "Required when creating"
      exactAppVersion:
        type: "string"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
      exactChartVersion:
        type: "string"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
      helmfileRef:
        type: "string"
        description: "When creating, will default to the value currently held by the\
          \ chart release"
  v2controllers.CreatableChartRelease:
    type: "object"
    properties:
      chart:
        type: "string"
        description: "Required when creating"
      cluster:
        type: "string"
        description: "When creating, will default the environment's default cluster,\
          \ if provided. Either this or environment must be provided."
      currentAppVersionExact:
        type: "string"
      currentChartVersionExact:
        type: "string"
      environment:
        type: "string"
        description: "Either this or cluster must be provided."
      helmfileRef:
        type: "string"
        default: "HEAD"
      name:
        type: "string"
        description: "When creating, will be calculated if left empty"
      namespace:
        type: "string"
        description: "When creating, will default to the environment's default namespace,\
          \ if provided"
      targetAppVersionBranch:
        type: "string"
        description: "When creating, will default to the app's main branch if it has\
          \ one recorded"
      targetAppVersionCommit:
        type: "string"
      targetAppVersionExact:
        type: "string"
      targetAppVersionUse:
        type: "string"
        description: "When creating, will default to referencing any provided target\
          \ app version field (exact, then commit, then branch)"
        enum:
        - "branch"
        - "commit"
        - "exact"
      targetChartVersionExact:
        type: "string"
      targetChartVersionUse:
        type: "string"
        description: "When creating, will default to latest unless an exact target\
          \ chart version is provided"
        enum:
        - "latest"
        - "exact"
      thelmaMode:
        type: "string"
  v2controllers.CreatableChartVersion:
    type: "object"
    properties:
      chart:
        type: "string"
        description: "Required when creating"
      chartVersion:
        type: "string"
        description: "Required when creating"
  v2controllers.CreatableCluster:
    type: "object"
    required:
    - "name"
    properties:
      address:
        type: "string"
        description: "Required when creating"
      azureSubscription:
        type: "string"
        description: "Required when creating if providers is 'azure'"
      base:
        type: "string"
        description: "Required when creating"
      googleProject:
        type: "string"
        description: "Required when creating if provider is 'google'"
      name:
        type: "string"
        description: "Required when creating"
      provider:
        type: "string"
        default: "google"
        enum:
        - "google"
        - "azure"
      requiresSuitability:
        type: "boolean"
        default: false
    description: "The subset of Cluster fields that can be set upon creation"
  v2controllers.CreatableEnvironment:
    type: "object"
    properties:
      base:
        type: "string"
        description: "Required when creating"
      chartReleasesFromTemplate:
        type: "boolean"
        description: "Upon creation of a dynamic environment, if this is true the\
          \ template's chart releases will be copied to the new environment"
        default: true
      defaultCluster:
        type: "string"
      defaultNamespace:
        type: "string"
      lifecycle:
        type: "string"
        default: "dynamic"
      name:
        type: "string"
        description: "When creating, will be calculated if dynamic, required otherwise"
      owner:
        type: "string"
        description: "When creating, will be set to your email"
      requiresSuitability:
        type: "boolean"
        default: false
      templateEnvironment:
        type: "string"
        description: "Required for dynamic environments"
  v2controllers.EditableChart:
    type: "object"
    properties:
      appImageGitMainBranch:
        type: "string"
      appImageGitRepo:
        type: "string"
      chartRepo:
        type: "string"
        default: "terra-helm"
  v2controllers.EditableChartRelease:
    type: "object"
    properties:
      currentAppVersionExact:
        type: "string"
      currentChartVersionExact:
        type: "string"
      helmfileRef:
        type: "string"
        default: "HEAD"
      targetAppVersionBranch:
        type: "string"
        description: "When creating, will default to the app's main branch if it has\
          \ one recorded"
      targetAppVersionCommit:
        type: "string"
      targetAppVersionExact:
        type: "string"
      targetAppVersionUse:
        type: "string"
        description: "When creating, will default to referencing any provided target\
          \ app version field (exact, then commit, then branch)"
        enum:
        - "branch"
        - "commit"
        - "exact"
      targetChartVersionExact:
        type: "string"
      targetChartVersionUse:
        type: "string"
        description: "When creating, will default to latest unless an exact target\
          \ chart version is provided"
        enum:
        - "latest"
        - "exact"
      thelmaMode:
        type: "string"
  v2controllers.EditableCluster:
    type: "object"
    properties:
      address:
        type: "string"
        description: "Required when creating"
      base:
        type: "string"
        description: "Required when creating"
      requiresSuitability:
        type: "boolean"
        default: false
    description: "The subset of Cluster fields that can be edited after creation"
  v2controllers.EditableEnvironment:
    type: "object"
    properties:
      defaultCluster:
        type: "string"
      defaultNamespace:
        type: "string"
      owner:
        type: "string"
        description: "When creating, will be set to your email"
      requiresSuitability:
        type: "boolean"
        default: false
  v2controllers.Environment:
    type: "object"
    properties:
      base:
        type: "string"
        description: "Required when creating"
      chartReleasesFromTemplate:
        type: "boolean"
        description: "Upon creation of a dynamic environment, if this is true the\
          \ template's chart releases will be copied to the new environment"
        default: true
      createdAt:
        type: "string"
      defaultCluster:
        type: "string"
      defaultClusterInfo:
        $ref: "#/definitions/v2controllers.Cluster"
      defaultNamespace:
        type: "string"
      id:
        type: "integer"
      lifecycle:
        type: "string"
        default: "dynamic"
      name:
        type: "string"
        description: "When creating, will be calculated if dynamic, required otherwise"
      owner:
        type: "string"
        description: "When creating, will be set to your email"
      requiresSuitability:
        type: "boolean"
        default: false
      templateEnvironment:
        type: "string"
        description: "Required for dynamic environments"
      templateEnvironmentInfo:
        type: "object"
        description: "Single-layer recursive; provides info of the template environment\
          \ if this environment has one"
        properties: {}
      updatedAt:
        type: "string"
      valuesName:
        type: "string"
    example:
      owner: "owner"
      defaultNamespace: "defaultNamespace"
      chartReleasesFromTemplate: true
      lifecycle: "dynamic"
      createdAt: "createdAt"
      defaultCluster: "defaultCluster"
      templateEnvironmentInfo: "{}"
      defaultClusterInfo:
        createdAt: "createdAt"
        googleProject: "googleProject"
        address: "address"
        azureSubscription: "azureSubscription"
        provider: "google"
        name: "name"
        requiresSuitability: false
        id: 0
        base: "base"
        updatedAt: "updatedAt"
      name: "name"
      templateEnvironment: "templateEnvironment"
      requiresSuitability: false
      id: 6
      valuesName: "valuesName"
      base: "base"
      updatedAt: "updatedAt"
