/* tslint:disable */
/* eslint-disable */
/**
 * Sherlock
 * The Data Science Platform\'s source-of-truth service. Note: this API will try to load and return associations in responses, so clients won\'t need to make as many requests. This behavior isn\'t recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
 *
 * The version of the OpenAPI document: development
 * Contact: dsp-devops@broadinstitute.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V2controllersCreatableEnvironment
 */
export interface V2controllersCreatableEnvironment {
    /**
     * Required when creating
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    base?: string;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    baseDomain?: string;
    /**
     * Upon creation of a dynamic environment, if this is true the template's chart releases will be copied to the new environment
     * @type {boolean}
     * @memberof V2controllersCreatableEnvironment
     */
    chartReleasesFromTemplate?: boolean;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    defaultCluster?: string;
    /**
     * should be the environment branch for live envs. Is usually dev for template/dynamic but not necessarily
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    defaultFirecloudDevelopRef?: string;
    /**
     * When creating, will be calculated if left empty
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    defaultNamespace?: string;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    helmfileRef?: string;
    /**
     * 
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    lifecycle?: string;
    /**
     * When creating, will be calculated if dynamic, required otherwise
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    name?: string;
    /**
     * Used for dynamic environment name generation only, to override using the owner email handle and template name
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    namePrefix?: string;
    /**
     * 
     * @type {boolean}
     * @memberof V2controllersCreatableEnvironment
     */
    namePrefixesDomain?: boolean;
    /**
     * When creating, will be set to your email
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    owner?: string;
    /**
     * 
     * @type {boolean}
     * @memberof V2controllersCreatableEnvironment
     */
    requiresSuitability?: boolean;
    /**
     * Required for dynamic environments
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    templateEnvironment?: string;
    /**
     * When creating, will be calculated if left empty
     * @type {string}
     * @memberof V2controllersCreatableEnvironment
     */
    uniqueResourcePrefix?: string;
}

/**
 * Check if a given object implements the V2controllersCreatableEnvironment interface.
 */
export function instanceOfV2controllersCreatableEnvironment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V2controllersCreatableEnvironmentFromJSON(json: any): V2controllersCreatableEnvironment {
    return V2controllersCreatableEnvironmentFromJSONTyped(json, false);
}

export function V2controllersCreatableEnvironmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2controllersCreatableEnvironment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'base': !exists(json, 'base') ? undefined : json['base'],
        'baseDomain': !exists(json, 'baseDomain') ? undefined : json['baseDomain'],
        'chartReleasesFromTemplate': !exists(json, 'chartReleasesFromTemplate') ? undefined : json['chartReleasesFromTemplate'],
        'defaultCluster': !exists(json, 'defaultCluster') ? undefined : json['defaultCluster'],
        'defaultFirecloudDevelopRef': !exists(json, 'defaultFirecloudDevelopRef') ? undefined : json['defaultFirecloudDevelopRef'],
        'defaultNamespace': !exists(json, 'defaultNamespace') ? undefined : json['defaultNamespace'],
        'helmfileRef': !exists(json, 'helmfileRef') ? undefined : json['helmfileRef'],
        'lifecycle': !exists(json, 'lifecycle') ? undefined : json['lifecycle'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'namePrefix': !exists(json, 'namePrefix') ? undefined : json['namePrefix'],
        'namePrefixesDomain': !exists(json, 'namePrefixesDomain') ? undefined : json['namePrefixesDomain'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'requiresSuitability': !exists(json, 'requiresSuitability') ? undefined : json['requiresSuitability'],
        'templateEnvironment': !exists(json, 'templateEnvironment') ? undefined : json['templateEnvironment'],
        'uniqueResourcePrefix': !exists(json, 'uniqueResourcePrefix') ? undefined : json['uniqueResourcePrefix'],
    };
}

export function V2controllersCreatableEnvironmentToJSON(value?: V2controllersCreatableEnvironment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'base': value.base,
        'baseDomain': value.baseDomain,
        'chartReleasesFromTemplate': value.chartReleasesFromTemplate,
        'defaultCluster': value.defaultCluster,
        'defaultFirecloudDevelopRef': value.defaultFirecloudDevelopRef,
        'defaultNamespace': value.defaultNamespace,
        'helmfileRef': value.helmfileRef,
        'lifecycle': value.lifecycle,
        'name': value.name,
        'namePrefix': value.namePrefix,
        'namePrefixesDomain': value.namePrefixesDomain,
        'owner': value.owner,
        'requiresSuitability': value.requiresSuitability,
        'templateEnvironment': value.templateEnvironment,
        'uniqueResourcePrefix': value.uniqueResourcePrefix,
    };
}

