/* tslint:disable */
/* eslint-disable */
/**
 * Sherlock
 * The Data Science Platform\'s source-of-truth service. Note: this API will try to load and return associations in responses, so clients won\'t need to make as many requests. This behavior isn\'t recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).
 *
 * The version of the OpenAPI document: development
 * Contact: dsp-devops@broadinstitute.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V2controllersChangesetPlanRequestChartReleaseEntry } from './V2controllersChangesetPlanRequestChartReleaseEntry';
import {
    V2controllersChangesetPlanRequestChartReleaseEntryFromJSON,
    V2controllersChangesetPlanRequestChartReleaseEntryFromJSONTyped,
    V2controllersChangesetPlanRequestChartReleaseEntryToJSON,
} from './V2controllersChangesetPlanRequestChartReleaseEntry';
import type { V2controllersChangesetPlanRequestEnvironmentEntry } from './V2controllersChangesetPlanRequestEnvironmentEntry';
import {
    V2controllersChangesetPlanRequestEnvironmentEntryFromJSON,
    V2controllersChangesetPlanRequestEnvironmentEntryFromJSONTyped,
    V2controllersChangesetPlanRequestEnvironmentEntryToJSON,
} from './V2controllersChangesetPlanRequestEnvironmentEntry';

/**
 * 
 * @export
 * @interface V2controllersChangesetPlanRequest
 */
export interface V2controllersChangesetPlanRequest {
    /**
     * 
     * @type {Array<V2controllersChangesetPlanRequestChartReleaseEntry>}
     * @memberof V2controllersChangesetPlanRequest
     */
    chartReleases?: Array<V2controllersChangesetPlanRequestChartReleaseEntry>;
    /**
     * 
     * @type {Array<V2controllersChangesetPlanRequestEnvironmentEntry>}
     * @memberof V2controllersChangesetPlanRequest
     */
    environments?: Array<V2controllersChangesetPlanRequestEnvironmentEntry>;
}

/**
 * Check if a given object implements the V2controllersChangesetPlanRequest interface.
 */
export function instanceOfV2controllersChangesetPlanRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V2controllersChangesetPlanRequestFromJSON(json: any): V2controllersChangesetPlanRequest {
    return V2controllersChangesetPlanRequestFromJSONTyped(json, false);
}

export function V2controllersChangesetPlanRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2controllersChangesetPlanRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chartReleases': !exists(json, 'chartReleases') ? undefined : ((json['chartReleases'] as Array<any>).map(V2controllersChangesetPlanRequestChartReleaseEntryFromJSON)),
        'environments': !exists(json, 'environments') ? undefined : ((json['environments'] as Array<any>).map(V2controllersChangesetPlanRequestEnvironmentEntryFromJSON)),
    };
}

export function V2controllersChangesetPlanRequestToJSON(value?: V2controllersChangesetPlanRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chartReleases': value.chartReleases === undefined ? undefined : ((value.chartReleases as Array<any>).map(V2controllersChangesetPlanRequestChartReleaseEntryToJSON)),
        'environments': value.environments === undefined ? undefined : ((value.environments as Array<any>).map(V2controllersChangesetPlanRequestEnvironmentEntryToJSON)),
    };
}

