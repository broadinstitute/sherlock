// Code generated by go-swagger; DO NOT EDIT.

package chart_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAPIChartVersionsProceduresV3ChangelogParams creates a new GetAPIChartVersionsProceduresV3ChangelogParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAPIChartVersionsProceduresV3ChangelogParams() *GetAPIChartVersionsProceduresV3ChangelogParams {
	return &GetAPIChartVersionsProceduresV3ChangelogParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPIChartVersionsProceduresV3ChangelogParamsWithTimeout creates a new GetAPIChartVersionsProceduresV3ChangelogParams object
// with the ability to set a timeout on a request.
func NewGetAPIChartVersionsProceduresV3ChangelogParamsWithTimeout(timeout time.Duration) *GetAPIChartVersionsProceduresV3ChangelogParams {
	return &GetAPIChartVersionsProceduresV3ChangelogParams{
		timeout: timeout,
	}
}

// NewGetAPIChartVersionsProceduresV3ChangelogParamsWithContext creates a new GetAPIChartVersionsProceduresV3ChangelogParams object
// with the ability to set a context for a request.
func NewGetAPIChartVersionsProceduresV3ChangelogParamsWithContext(ctx context.Context) *GetAPIChartVersionsProceduresV3ChangelogParams {
	return &GetAPIChartVersionsProceduresV3ChangelogParams{
		Context: ctx,
	}
}

// NewGetAPIChartVersionsProceduresV3ChangelogParamsWithHTTPClient creates a new GetAPIChartVersionsProceduresV3ChangelogParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAPIChartVersionsProceduresV3ChangelogParamsWithHTTPClient(client *http.Client) *GetAPIChartVersionsProceduresV3ChangelogParams {
	return &GetAPIChartVersionsProceduresV3ChangelogParams{
		HTTPClient: client,
	}
}

/* GetAPIChartVersionsProceduresV3ChangelogParams contains all the parameters to send to the API endpoint
   for the get API chart versions procedures v3 changelog operation.

   Typically these are written to a http.Request.
*/
type GetAPIChartVersionsProceduresV3ChangelogParams struct {

	/* Child.

	   The selector of the newer ChartVersion for the changelog
	*/
	Child string

	/* Parent.

	   The selector of the older ChartVersion for the changelog
	*/
	Parent string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get API chart versions procedures v3 changelog params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) WithDefaults() *GetAPIChartVersionsProceduresV3ChangelogParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get API chart versions procedures v3 changelog params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) WithTimeout(timeout time.Duration) *GetAPIChartVersionsProceduresV3ChangelogParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) WithContext(ctx context.Context) *GetAPIChartVersionsProceduresV3ChangelogParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) WithHTTPClient(client *http.Client) *GetAPIChartVersionsProceduresV3ChangelogParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChild adds the child to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) WithChild(child string) *GetAPIChartVersionsProceduresV3ChangelogParams {
	o.SetChild(child)
	return o
}

// SetChild adds the child to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) SetChild(child string) {
	o.Child = child
}

// WithParent adds the parent to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) WithParent(parent string) *GetAPIChartVersionsProceduresV3ChangelogParams {
	o.SetParent(parent)
	return o
}

// SetParent adds the parent to the get API chart versions procedures v3 changelog params
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) SetParent(parent string) {
	o.Parent = parent
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPIChartVersionsProceduresV3ChangelogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param child
	qrChild := o.Child
	qChild := qrChild
	if qChild != "" {

		if err := r.SetQueryParam("child", qChild); err != nil {
			return err
		}
	}

	// query param parent
	qrParent := o.Parent
	qParent := qrParent
	if qParent != "" {

		if err := r.SetQueryParam("parent", qParent); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
