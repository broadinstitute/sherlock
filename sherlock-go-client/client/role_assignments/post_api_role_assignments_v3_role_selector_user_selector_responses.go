// Code generated by go-swagger; DO NOT EDIT.

package role_assignments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// PostAPIRoleAssignmentsV3RoleSelectorUserSelectorReader is a Reader for the PostAPIRoleAssignmentsV3RoleSelectorUserSelector structure.
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated creates a PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated with default headers values
func NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated() *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated {
	return &PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated{}
}

/* PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated describes a response with status code 201, with default header values.

Created
*/
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated struct {
	Payload *models.SherlockRoleAssignmentV3
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated) Error() string {
	return fmt.Sprintf("[POST /api/role-assignments/v3/{role-selector}/{user-selector}][%d] postApiRoleAssignmentsV3RoleSelectorUserSelectorCreated  %+v", 201, o.Payload)
}
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated) GetPayload() *models.SherlockRoleAssignmentV3 {
	return o.Payload
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SherlockRoleAssignmentV3)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest creates a PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest with default headers values
func NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest() *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest {
	return &PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest{}
}

/* PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/role-assignments/v3/{role-selector}/{user-selector}][%d] postApiRoleAssignmentsV3RoleSelectorUserSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden creates a PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden with default headers values
func NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden() *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden {
	return &PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden{}
}

/* PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden) Error() string {
	return fmt.Sprintf("[POST /api/role-assignments/v3/{role-selector}/{user-selector}][%d] postApiRoleAssignmentsV3RoleSelectorUserSelectorForbidden  %+v", 403, o.Payload)
}
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound creates a PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound with default headers values
func NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound() *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound {
	return &PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound{}
}

/* PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound) Error() string {
	return fmt.Sprintf("[POST /api/role-assignments/v3/{role-selector}/{user-selector}][%d] postApiRoleAssignmentsV3RoleSelectorUserSelectorNotFound  %+v", 404, o.Payload)
}
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired creates a PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired with default headers values
func NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired() *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired {
	return &PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired{}
}

/* PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[POST /api/role-assignments/v3/{role-selector}/{user-selector}][%d] postApiRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict creates a PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict with default headers values
func NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict() *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict {
	return &PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict{}
}

/* PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict) Error() string {
	return fmt.Sprintf("[POST /api/role-assignments/v3/{role-selector}/{user-selector}][%d] postApiRoleAssignmentsV3RoleSelectorUserSelectorConflict  %+v", 409, o.Payload)
}
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError creates a PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError with default headers values
func NewPostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError() *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError {
	return &PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError{}
}

/* PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/role-assignments/v3/{role-selector}/{user-selector}][%d] postApiRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIRoleAssignmentsV3RoleSelectorUserSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
