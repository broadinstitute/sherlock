// Code generated by go-swagger; DO NOT EDIT.

package role_assignments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams creates a new DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams() *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	return &DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParamsWithTimeout creates a new DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams object
// with the ability to set a timeout on a request.
func NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParamsWithTimeout(timeout time.Duration) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	return &DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams{
		timeout: timeout,
	}
}

// NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParamsWithContext creates a new DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams object
// with the ability to set a context for a request.
func NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParamsWithContext(ctx context.Context) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	return &DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams{
		Context: ctx,
	}
}

// NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParamsWithHTTPClient creates a new DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteAPIRoleAssignmentsV3RoleIDUserSelectorParamsWithHTTPClient(client *http.Client) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	return &DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams{
		HTTPClient: client,
	}
}

/* DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams contains all the parameters to send to the API endpoint
   for the delete API role assignments v3 role ID user selector operation.

   Typically these are written to a http.Request.
*/
type DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams struct {

	/* RoleID.

	   The numeric ID of the role
	*/
	RoleID int64

	/* UserSelector.

	   The selector of the User, which can be either a numeric ID, the email, 'google-id/{google subject ID}', 'github/{github username}', or 'github-id/{github numeric ID}'.
	*/
	UserSelector string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete API role assignments v3 role ID user selector params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) WithDefaults() *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete API role assignments v3 role ID user selector params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) WithTimeout(timeout time.Duration) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) WithContext(ctx context.Context) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) WithHTTPClient(client *http.Client) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRoleID adds the roleID to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) WithRoleID(roleID int64) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	o.SetRoleID(roleID)
	return o
}

// SetRoleID adds the roleId to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) SetRoleID(roleID int64) {
	o.RoleID = roleID
}

// WithUserSelector adds the userSelector to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) WithUserSelector(userSelector string) *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams {
	o.SetUserSelector(userSelector)
	return o
}

// SetUserSelector adds the userSelector to the delete API role assignments v3 role ID user selector params
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) SetUserSelector(userSelector string) {
	o.UserSelector = userSelector
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAPIRoleAssignmentsV3RoleIDUserSelectorParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param role-id
	if err := r.SetPathParam("role-id", swag.FormatInt64(o.RoleID)); err != nil {
		return err
	}

	// path param user-selector
	if err := r.SetPathParam("user-selector", o.UserSelector); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
