// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// PatchAPIClustersV3SelectorReader is a Reader for the PatchAPIClustersV3Selector structure.
type PatchAPIClustersV3SelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAPIClustersV3SelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchAPIClustersV3SelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAPIClustersV3SelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchAPIClustersV3SelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchAPIClustersV3SelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPatchAPIClustersV3SelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchAPIClustersV3SelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchAPIClustersV3SelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchAPIClustersV3SelectorOK creates a PatchAPIClustersV3SelectorOK with default headers values
func NewPatchAPIClustersV3SelectorOK() *PatchAPIClustersV3SelectorOK {
	return &PatchAPIClustersV3SelectorOK{}
}

/* PatchAPIClustersV3SelectorOK describes a response with status code 200, with default header values.

OK
*/
type PatchAPIClustersV3SelectorOK struct {
	Payload *models.SherlockClusterV3
}

func (o *PatchAPIClustersV3SelectorOK) Error() string {
	return fmt.Sprintf("[PATCH /api/clusters/v3/{selector}][%d] patchApiClustersV3SelectorOK  %+v", 200, o.Payload)
}
func (o *PatchAPIClustersV3SelectorOK) GetPayload() *models.SherlockClusterV3 {
	return o.Payload
}

func (o *PatchAPIClustersV3SelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SherlockClusterV3)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIClustersV3SelectorBadRequest creates a PatchAPIClustersV3SelectorBadRequest with default headers values
func NewPatchAPIClustersV3SelectorBadRequest() *PatchAPIClustersV3SelectorBadRequest {
	return &PatchAPIClustersV3SelectorBadRequest{}
}

/* PatchAPIClustersV3SelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchAPIClustersV3SelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIClustersV3SelectorBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/clusters/v3/{selector}][%d] patchApiClustersV3SelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PatchAPIClustersV3SelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIClustersV3SelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIClustersV3SelectorForbidden creates a PatchAPIClustersV3SelectorForbidden with default headers values
func NewPatchAPIClustersV3SelectorForbidden() *PatchAPIClustersV3SelectorForbidden {
	return &PatchAPIClustersV3SelectorForbidden{}
}

/* PatchAPIClustersV3SelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchAPIClustersV3SelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIClustersV3SelectorForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/clusters/v3/{selector}][%d] patchApiClustersV3SelectorForbidden  %+v", 403, o.Payload)
}
func (o *PatchAPIClustersV3SelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIClustersV3SelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIClustersV3SelectorNotFound creates a PatchAPIClustersV3SelectorNotFound with default headers values
func NewPatchAPIClustersV3SelectorNotFound() *PatchAPIClustersV3SelectorNotFound {
	return &PatchAPIClustersV3SelectorNotFound{}
}

/* PatchAPIClustersV3SelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PatchAPIClustersV3SelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIClustersV3SelectorNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/clusters/v3/{selector}][%d] patchApiClustersV3SelectorNotFound  %+v", 404, o.Payload)
}
func (o *PatchAPIClustersV3SelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIClustersV3SelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIClustersV3SelectorProxyAuthenticationRequired creates a PatchAPIClustersV3SelectorProxyAuthenticationRequired with default headers values
func NewPatchAPIClustersV3SelectorProxyAuthenticationRequired() *PatchAPIClustersV3SelectorProxyAuthenticationRequired {
	return &PatchAPIClustersV3SelectorProxyAuthenticationRequired{}
}

/* PatchAPIClustersV3SelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PatchAPIClustersV3SelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIClustersV3SelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[PATCH /api/clusters/v3/{selector}][%d] patchApiClustersV3SelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PatchAPIClustersV3SelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIClustersV3SelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIClustersV3SelectorConflict creates a PatchAPIClustersV3SelectorConflict with default headers values
func NewPatchAPIClustersV3SelectorConflict() *PatchAPIClustersV3SelectorConflict {
	return &PatchAPIClustersV3SelectorConflict{}
}

/* PatchAPIClustersV3SelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchAPIClustersV3SelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIClustersV3SelectorConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/clusters/v3/{selector}][%d] patchApiClustersV3SelectorConflict  %+v", 409, o.Payload)
}
func (o *PatchAPIClustersV3SelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIClustersV3SelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIClustersV3SelectorInternalServerError creates a PatchAPIClustersV3SelectorInternalServerError with default headers values
func NewPatchAPIClustersV3SelectorInternalServerError() *PatchAPIClustersV3SelectorInternalServerError {
	return &PatchAPIClustersV3SelectorInternalServerError{}
}

/* PatchAPIClustersV3SelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchAPIClustersV3SelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIClustersV3SelectorInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/clusters/v3/{selector}][%d] patchApiClustersV3SelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchAPIClustersV3SelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIClustersV3SelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
