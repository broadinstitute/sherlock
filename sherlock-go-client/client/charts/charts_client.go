// Code generated by go-swagger; DO NOT EDIT.

package charts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new charts API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for charts API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPIChartsV3Selector(params *DeleteAPIChartsV3SelectorParams, opts ...ClientOption) (*DeleteAPIChartsV3SelectorOK, error)

	DeleteAPIV2ChartsSelector(params *DeleteAPIV2ChartsSelectorParams, opts ...ClientOption) (*DeleteAPIV2ChartsSelectorOK, error)

	GetAPIChartsV3(params *GetAPIChartsV3Params, opts ...ClientOption) (*GetAPIChartsV3OK, error)

	GetAPIChartsV3Selector(params *GetAPIChartsV3SelectorParams, opts ...ClientOption) (*GetAPIChartsV3SelectorOK, error)

	GetAPIV2Charts(params *GetAPIV2ChartsParams, opts ...ClientOption) (*GetAPIV2ChartsOK, error)

	GetAPIV2ChartsSelector(params *GetAPIV2ChartsSelectorParams, opts ...ClientOption) (*GetAPIV2ChartsSelectorOK, error)

	GetAPIV2SelectorsChartsSelector(params *GetAPIV2SelectorsChartsSelectorParams, opts ...ClientOption) (*GetAPIV2SelectorsChartsSelectorOK, error)

	PatchAPIChartsV3Selector(params *PatchAPIChartsV3SelectorParams, opts ...ClientOption) (*PatchAPIChartsV3SelectorOK, error)

	PatchAPIV2ChartsSelector(params *PatchAPIV2ChartsSelectorParams, opts ...ClientOption) (*PatchAPIV2ChartsSelectorOK, error)

	PostAPIChartsV3(params *PostAPIChartsV3Params, opts ...ClientOption) (*PostAPIChartsV3Created, error)

	PostAPIV2Charts(params *PostAPIV2ChartsParams, opts ...ClientOption) (*PostAPIV2ChartsOK, *PostAPIV2ChartsCreated, error)

	PutAPIV2ChartsSelector(params *PutAPIV2ChartsSelectorParams, opts ...ClientOption) (*PutAPIV2ChartsSelectorOK, *PutAPIV2ChartsSelectorCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPIChartsV3Selector deletes an individual chart

  Delete an individual Chart by its ID.
*/
func (a *Client) DeleteAPIChartsV3Selector(params *DeleteAPIChartsV3SelectorParams, opts ...ClientOption) (*DeleteAPIChartsV3SelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPIChartsV3SelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteAPIChartsV3Selector",
		Method:             "DELETE",
		PathPattern:        "/api/charts/v3/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteAPIChartsV3SelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAPIChartsV3SelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPIChartsV3Selector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPIV2ChartsSelector deletes a chart entry

  Delete an existing Chart entry via one of its "selectors": name or numeric ID.
*/
func (a *Client) DeleteAPIV2ChartsSelector(params *DeleteAPIV2ChartsSelectorParams, opts ...ClientOption) (*DeleteAPIV2ChartsSelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPIV2ChartsSelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteAPIV2ChartsSelector",
		Method:             "DELETE",
		PathPattern:        "/api/v2/charts/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteAPIV2ChartsSelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAPIV2ChartsSelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPIV2ChartsSelector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPIChartsV3 lists charts matching a filter

  List Charts matching a filter.
*/
func (a *Client) GetAPIChartsV3(params *GetAPIChartsV3Params, opts ...ClientOption) (*GetAPIChartsV3OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIChartsV3Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIChartsV3",
		Method:             "GET",
		PathPattern:        "/api/charts/v3",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIChartsV3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIChartsV3OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIChartsV3: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPIChartsV3Selector gets an individual chart

  Get an individual Chart.
*/
func (a *Client) GetAPIChartsV3Selector(params *GetAPIChartsV3SelectorParams, opts ...ClientOption) (*GetAPIChartsV3SelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIChartsV3SelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIChartsV3Selector",
		Method:             "GET",
		PathPattern:        "/api/charts/v3/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIChartsV3SelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIChartsV3SelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIChartsV3Selector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPIV2Charts lists chart entries

  List existing Chart entries, ordered by most recently updated.
*/
func (a *Client) GetAPIV2Charts(params *GetAPIV2ChartsParams, opts ...ClientOption) (*GetAPIV2ChartsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV2ChartsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIV2Charts",
		Method:             "GET",
		PathPattern:        "/api/v2/charts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIV2ChartsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIV2ChartsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIV2Charts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPIV2ChartsSelector gets a chart entry

  Get an existing Chart entry via one of its "selectors": name or numeric ID.
*/
func (a *Client) GetAPIV2ChartsSelector(params *GetAPIV2ChartsSelectorParams, opts ...ClientOption) (*GetAPIV2ChartsSelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV2ChartsSelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIV2ChartsSelector",
		Method:             "GET",
		PathPattern:        "/api/v2/charts/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIV2ChartsSelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIV2ChartsSelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIV2ChartsSelector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPIV2SelectorsChartsSelector lists chart selectors

  Validate a given Chart selector and provide any other selectors that would match the same Chart.
*/
func (a *Client) GetAPIV2SelectorsChartsSelector(params *GetAPIV2SelectorsChartsSelectorParams, opts ...ClientOption) (*GetAPIV2SelectorsChartsSelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV2SelectorsChartsSelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetAPIV2SelectorsChartsSelector",
		Method:             "GET",
		PathPattern:        "/api/v2/selectors/charts/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAPIV2SelectorsChartsSelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAPIV2SelectorsChartsSelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPIV2SelectorsChartsSelector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPIChartsV3Selector edits an individual chart

  Edit an individual Chart.
*/
func (a *Client) PatchAPIChartsV3Selector(params *PatchAPIChartsV3SelectorParams, opts ...ClientOption) (*PatchAPIChartsV3SelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPIChartsV3SelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PatchAPIChartsV3Selector",
		Method:             "PATCH",
		PathPattern:        "/api/charts/v3/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchAPIChartsV3SelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAPIChartsV3SelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPIChartsV3Selector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPIV2ChartsSelector edits a chart entry

  Edit an existing Chart entry via one of its "selectors": name or numeric ID. Note that only mutable fields are available here, immutable fields can only be set using /create.
*/
func (a *Client) PatchAPIV2ChartsSelector(params *PatchAPIV2ChartsSelectorParams, opts ...ClientOption) (*PatchAPIV2ChartsSelectorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPIV2ChartsSelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PatchAPIV2ChartsSelector",
		Method:             "PATCH",
		PathPattern:        "/api/v2/charts/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchAPIV2ChartsSelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchAPIV2ChartsSelectorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPIV2ChartsSelector: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPIChartsV3 creates a chart

  Create a Chart.
*/
func (a *Client) PostAPIChartsV3(params *PostAPIChartsV3Params, opts ...ClientOption) (*PostAPIChartsV3Created, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPIChartsV3Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostAPIChartsV3",
		Method:             "POST",
		PathPattern:        "/api/charts/v3",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostAPIChartsV3Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostAPIChartsV3Created)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPIChartsV3: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPIV2Charts creates a new chart entry

  Create a new Chart entry. Note that some fields are immutable after creation; /edit lists mutable fields.
*/
func (a *Client) PostAPIV2Charts(params *PostAPIV2ChartsParams, opts ...ClientOption) (*PostAPIV2ChartsOK, *PostAPIV2ChartsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPIV2ChartsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostAPIV2Charts",
		Method:             "POST",
		PathPattern:        "/api/v2/charts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostAPIV2ChartsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PostAPIV2ChartsOK:
		return value, nil, nil
	case *PostAPIV2ChartsCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for charts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutAPIV2ChartsSelector creates or edit a chart entry

  Create or edit a Chart entry. Attempts to edit and will attempt to create upon an error.
If an edit was made or the creation process de-duplicates, this method will return normally with a 200.
*/
func (a *Client) PutAPIV2ChartsSelector(params *PutAPIV2ChartsSelectorParams, opts ...ClientOption) (*PutAPIV2ChartsSelectorOK, *PutAPIV2ChartsSelectorCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutAPIV2ChartsSelectorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PutAPIV2ChartsSelector",
		Method:             "PUT",
		PathPattern:        "/api/v2/charts/{selector}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutAPIV2ChartsSelectorReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *PutAPIV2ChartsSelectorOK:
		return value, nil, nil
	case *PutAPIV2ChartsSelectorCreated:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for charts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
