// Code generated by go-swagger; DO NOT EDIT.

package charts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// PatchAPIChartsV3SelectorReader is a Reader for the PatchAPIChartsV3Selector structure.
type PatchAPIChartsV3SelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAPIChartsV3SelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchAPIChartsV3SelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAPIChartsV3SelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchAPIChartsV3SelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchAPIChartsV3SelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPatchAPIChartsV3SelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchAPIChartsV3SelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchAPIChartsV3SelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchAPIChartsV3SelectorOK creates a PatchAPIChartsV3SelectorOK with default headers values
func NewPatchAPIChartsV3SelectorOK() *PatchAPIChartsV3SelectorOK {
	return &PatchAPIChartsV3SelectorOK{}
}

/* PatchAPIChartsV3SelectorOK describes a response with status code 200, with default header values.

OK
*/
type PatchAPIChartsV3SelectorOK struct {
	Payload *models.SherlockChartV3
}

func (o *PatchAPIChartsV3SelectorOK) Error() string {
	return fmt.Sprintf("[PATCH /api/charts/v3/{selector}][%d] patchApiChartsV3SelectorOK  %+v", 200, o.Payload)
}
func (o *PatchAPIChartsV3SelectorOK) GetPayload() *models.SherlockChartV3 {
	return o.Payload
}

func (o *PatchAPIChartsV3SelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SherlockChartV3)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIChartsV3SelectorBadRequest creates a PatchAPIChartsV3SelectorBadRequest with default headers values
func NewPatchAPIChartsV3SelectorBadRequest() *PatchAPIChartsV3SelectorBadRequest {
	return &PatchAPIChartsV3SelectorBadRequest{}
}

/* PatchAPIChartsV3SelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchAPIChartsV3SelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIChartsV3SelectorBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/charts/v3/{selector}][%d] patchApiChartsV3SelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PatchAPIChartsV3SelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIChartsV3SelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIChartsV3SelectorForbidden creates a PatchAPIChartsV3SelectorForbidden with default headers values
func NewPatchAPIChartsV3SelectorForbidden() *PatchAPIChartsV3SelectorForbidden {
	return &PatchAPIChartsV3SelectorForbidden{}
}

/* PatchAPIChartsV3SelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchAPIChartsV3SelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIChartsV3SelectorForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/charts/v3/{selector}][%d] patchApiChartsV3SelectorForbidden  %+v", 403, o.Payload)
}
func (o *PatchAPIChartsV3SelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIChartsV3SelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIChartsV3SelectorNotFound creates a PatchAPIChartsV3SelectorNotFound with default headers values
func NewPatchAPIChartsV3SelectorNotFound() *PatchAPIChartsV3SelectorNotFound {
	return &PatchAPIChartsV3SelectorNotFound{}
}

/* PatchAPIChartsV3SelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PatchAPIChartsV3SelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIChartsV3SelectorNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/charts/v3/{selector}][%d] patchApiChartsV3SelectorNotFound  %+v", 404, o.Payload)
}
func (o *PatchAPIChartsV3SelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIChartsV3SelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIChartsV3SelectorProxyAuthenticationRequired creates a PatchAPIChartsV3SelectorProxyAuthenticationRequired with default headers values
func NewPatchAPIChartsV3SelectorProxyAuthenticationRequired() *PatchAPIChartsV3SelectorProxyAuthenticationRequired {
	return &PatchAPIChartsV3SelectorProxyAuthenticationRequired{}
}

/* PatchAPIChartsV3SelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PatchAPIChartsV3SelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIChartsV3SelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[PATCH /api/charts/v3/{selector}][%d] patchApiChartsV3SelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PatchAPIChartsV3SelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIChartsV3SelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIChartsV3SelectorConflict creates a PatchAPIChartsV3SelectorConflict with default headers values
func NewPatchAPIChartsV3SelectorConflict() *PatchAPIChartsV3SelectorConflict {
	return &PatchAPIChartsV3SelectorConflict{}
}

/* PatchAPIChartsV3SelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchAPIChartsV3SelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIChartsV3SelectorConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/charts/v3/{selector}][%d] patchApiChartsV3SelectorConflict  %+v", 409, o.Payload)
}
func (o *PatchAPIChartsV3SelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIChartsV3SelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIChartsV3SelectorInternalServerError creates a PatchAPIChartsV3SelectorInternalServerError with default headers values
func NewPatchAPIChartsV3SelectorInternalServerError() *PatchAPIChartsV3SelectorInternalServerError {
	return &PatchAPIChartsV3SelectorInternalServerError{}
}

/* PatchAPIChartsV3SelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchAPIChartsV3SelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIChartsV3SelectorInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/charts/v3/{selector}][%d] patchApiChartsV3SelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchAPIChartsV3SelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIChartsV3SelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
