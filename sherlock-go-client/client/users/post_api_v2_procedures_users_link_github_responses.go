// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// PostAPIV2ProceduresUsersLinkGithubReader is a Reader for the PostAPIV2ProceduresUsersLinkGithub structure.
type PostAPIV2ProceduresUsersLinkGithubReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV2ProceduresUsersLinkGithubReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV2ProceduresUsersLinkGithubOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPostAPIV2ProceduresUsersLinkGithubAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV2ProceduresUsersLinkGithubBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAPIV2ProceduresUsersLinkGithubForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAPIV2ProceduresUsersLinkGithubNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostAPIV2ProceduresUsersLinkGithubConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV2ProceduresUsersLinkGithubInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAPIV2ProceduresUsersLinkGithubOK creates a PostAPIV2ProceduresUsersLinkGithubOK with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubOK() *PostAPIV2ProceduresUsersLinkGithubOK {
	return &PostAPIV2ProceduresUsersLinkGithubOK{}
}

/* PostAPIV2ProceduresUsersLinkGithubOK describes a response with status code 200, with default header values.

OK
*/
type PostAPIV2ProceduresUsersLinkGithubOK struct {
	Payload *models.V2controllersUser
}

func (o *PostAPIV2ProceduresUsersLinkGithubOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubOK  %+v", 200, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubOK) GetPayload() *models.V2controllersUser {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV2ProceduresUsersLinkGithubAccepted creates a PostAPIV2ProceduresUsersLinkGithubAccepted with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubAccepted() *PostAPIV2ProceduresUsersLinkGithubAccepted {
	return &PostAPIV2ProceduresUsersLinkGithubAccepted{}
}

/* PostAPIV2ProceduresUsersLinkGithubAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostAPIV2ProceduresUsersLinkGithubAccepted struct {
	Payload *models.V2controllersUser
}

func (o *PostAPIV2ProceduresUsersLinkGithubAccepted) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubAccepted  %+v", 202, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubAccepted) GetPayload() *models.V2controllersUser {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV2ProceduresUsersLinkGithubBadRequest creates a PostAPIV2ProceduresUsersLinkGithubBadRequest with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubBadRequest() *PostAPIV2ProceduresUsersLinkGithubBadRequest {
	return &PostAPIV2ProceduresUsersLinkGithubBadRequest{}
}

/* PostAPIV2ProceduresUsersLinkGithubBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostAPIV2ProceduresUsersLinkGithubBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIV2ProceduresUsersLinkGithubBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubBadRequest  %+v", 400, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV2ProceduresUsersLinkGithubForbidden creates a PostAPIV2ProceduresUsersLinkGithubForbidden with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubForbidden() *PostAPIV2ProceduresUsersLinkGithubForbidden {
	return &PostAPIV2ProceduresUsersLinkGithubForbidden{}
}

/* PostAPIV2ProceduresUsersLinkGithubForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostAPIV2ProceduresUsersLinkGithubForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIV2ProceduresUsersLinkGithubForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubForbidden  %+v", 403, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV2ProceduresUsersLinkGithubNotFound creates a PostAPIV2ProceduresUsersLinkGithubNotFound with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubNotFound() *PostAPIV2ProceduresUsersLinkGithubNotFound {
	return &PostAPIV2ProceduresUsersLinkGithubNotFound{}
}

/* PostAPIV2ProceduresUsersLinkGithubNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostAPIV2ProceduresUsersLinkGithubNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIV2ProceduresUsersLinkGithubNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubNotFound  %+v", 404, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired creates a PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired() *PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired {
	return &PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired{}
}

/* PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV2ProceduresUsersLinkGithubConflict creates a PostAPIV2ProceduresUsersLinkGithubConflict with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubConflict() *PostAPIV2ProceduresUsersLinkGithubConflict {
	return &PostAPIV2ProceduresUsersLinkGithubConflict{}
}

/* PostAPIV2ProceduresUsersLinkGithubConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostAPIV2ProceduresUsersLinkGithubConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIV2ProceduresUsersLinkGithubConflict) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubConflict  %+v", 409, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV2ProceduresUsersLinkGithubInternalServerError creates a PostAPIV2ProceduresUsersLinkGithubInternalServerError with default headers values
func NewPostAPIV2ProceduresUsersLinkGithubInternalServerError() *PostAPIV2ProceduresUsersLinkGithubInternalServerError {
	return &PostAPIV2ProceduresUsersLinkGithubInternalServerError{}
}

/* PostAPIV2ProceduresUsersLinkGithubInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostAPIV2ProceduresUsersLinkGithubInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIV2ProceduresUsersLinkGithubInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/procedures/users/link-github][%d] postApiV2ProceduresUsersLinkGithubInternalServerError  %+v", 500, o.Payload)
}
func (o *PostAPIV2ProceduresUsersLinkGithubInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIV2ProceduresUsersLinkGithubInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
