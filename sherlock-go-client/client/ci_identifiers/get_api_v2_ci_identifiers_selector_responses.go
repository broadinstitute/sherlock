// Code generated by go-swagger; DO NOT EDIT.

package ci_identifiers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// GetAPIV2CiIdentifiersSelectorReader is a Reader for the GetAPIV2CiIdentifiersSelector structure.
type GetAPIV2CiIdentifiersSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2CiIdentifiersSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2CiIdentifiersSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2CiIdentifiersSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2CiIdentifiersSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2CiIdentifiersSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2CiIdentifiersSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2CiIdentifiersSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2CiIdentifiersSelectorOK creates a GetAPIV2CiIdentifiersSelectorOK with default headers values
func NewGetAPIV2CiIdentifiersSelectorOK() *GetAPIV2CiIdentifiersSelectorOK {
	return &GetAPIV2CiIdentifiersSelectorOK{}
}

/* GetAPIV2CiIdentifiersSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2CiIdentifiersSelectorOK struct {
	Payload *models.V2controllersCiIdentifier
}

func (o *GetAPIV2CiIdentifiersSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/ci-identifiers/{selector}][%d] getApiV2CiIdentifiersSelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIV2CiIdentifiersSelectorOK) GetPayload() *models.V2controllersCiIdentifier {
	return o.Payload
}

func (o *GetAPIV2CiIdentifiersSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersCiIdentifier)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2CiIdentifiersSelectorBadRequest creates a GetAPIV2CiIdentifiersSelectorBadRequest with default headers values
func NewGetAPIV2CiIdentifiersSelectorBadRequest() *GetAPIV2CiIdentifiersSelectorBadRequest {
	return &GetAPIV2CiIdentifiersSelectorBadRequest{}
}

/* GetAPIV2CiIdentifiersSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2CiIdentifiersSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2CiIdentifiersSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/ci-identifiers/{selector}][%d] getApiV2CiIdentifiersSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIV2CiIdentifiersSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2CiIdentifiersSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2CiIdentifiersSelectorForbidden creates a GetAPIV2CiIdentifiersSelectorForbidden with default headers values
func NewGetAPIV2CiIdentifiersSelectorForbidden() *GetAPIV2CiIdentifiersSelectorForbidden {
	return &GetAPIV2CiIdentifiersSelectorForbidden{}
}

/* GetAPIV2CiIdentifiersSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2CiIdentifiersSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2CiIdentifiersSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/ci-identifiers/{selector}][%d] getApiV2CiIdentifiersSelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIV2CiIdentifiersSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2CiIdentifiersSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2CiIdentifiersSelectorNotFound creates a GetAPIV2CiIdentifiersSelectorNotFound with default headers values
func NewGetAPIV2CiIdentifiersSelectorNotFound() *GetAPIV2CiIdentifiersSelectorNotFound {
	return &GetAPIV2CiIdentifiersSelectorNotFound{}
}

/* GetAPIV2CiIdentifiersSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2CiIdentifiersSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2CiIdentifiersSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/ci-identifiers/{selector}][%d] getApiV2CiIdentifiersSelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIV2CiIdentifiersSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2CiIdentifiersSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired creates a GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired() *GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired {
	return &GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired{}
}

/* GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/ci-identifiers/{selector}][%d] getApiV2CiIdentifiersSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2CiIdentifiersSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2CiIdentifiersSelectorConflict creates a GetAPIV2CiIdentifiersSelectorConflict with default headers values
func NewGetAPIV2CiIdentifiersSelectorConflict() *GetAPIV2CiIdentifiersSelectorConflict {
	return &GetAPIV2CiIdentifiersSelectorConflict{}
}

/* GetAPIV2CiIdentifiersSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2CiIdentifiersSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2CiIdentifiersSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/ci-identifiers/{selector}][%d] getApiV2CiIdentifiersSelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIV2CiIdentifiersSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2CiIdentifiersSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2CiIdentifiersSelectorInternalServerError creates a GetAPIV2CiIdentifiersSelectorInternalServerError with default headers values
func NewGetAPIV2CiIdentifiersSelectorInternalServerError() *GetAPIV2CiIdentifiersSelectorInternalServerError {
	return &GetAPIV2CiIdentifiersSelectorInternalServerError{}
}

/* GetAPIV2CiIdentifiersSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2CiIdentifiersSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2CiIdentifiersSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/ci-identifiers/{selector}][%d] getApiV2CiIdentifiersSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIV2CiIdentifiersSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2CiIdentifiersSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
