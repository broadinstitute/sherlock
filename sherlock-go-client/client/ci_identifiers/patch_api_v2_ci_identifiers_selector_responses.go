// Code generated by go-swagger; DO NOT EDIT.

package ci_identifiers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// PatchAPIV2CiIdentifiersSelectorReader is a Reader for the PatchAPIV2CiIdentifiersSelector structure.
type PatchAPIV2CiIdentifiersSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAPIV2CiIdentifiersSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchAPIV2CiIdentifiersSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchAPIV2CiIdentifiersSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchAPIV2CiIdentifiersSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchAPIV2CiIdentifiersSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchAPIV2CiIdentifiersSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchAPIV2CiIdentifiersSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchAPIV2CiIdentifiersSelectorOK creates a PatchAPIV2CiIdentifiersSelectorOK with default headers values
func NewPatchAPIV2CiIdentifiersSelectorOK() *PatchAPIV2CiIdentifiersSelectorOK {
	return &PatchAPIV2CiIdentifiersSelectorOK{}
}

/* PatchAPIV2CiIdentifiersSelectorOK describes a response with status code 200, with default header values.

OK
*/
type PatchAPIV2CiIdentifiersSelectorOK struct {
	Payload *models.V2controllersCiIdentifier
}

func (o *PatchAPIV2CiIdentifiersSelectorOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/ci-identifiers/{selector}][%d] patchApiV2CiIdentifiersSelectorOK  %+v", 200, o.Payload)
}
func (o *PatchAPIV2CiIdentifiersSelectorOK) GetPayload() *models.V2controllersCiIdentifier {
	return o.Payload
}

func (o *PatchAPIV2CiIdentifiersSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersCiIdentifier)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2CiIdentifiersSelectorBadRequest creates a PatchAPIV2CiIdentifiersSelectorBadRequest with default headers values
func NewPatchAPIV2CiIdentifiersSelectorBadRequest() *PatchAPIV2CiIdentifiersSelectorBadRequest {
	return &PatchAPIV2CiIdentifiersSelectorBadRequest{}
}

/* PatchAPIV2CiIdentifiersSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchAPIV2CiIdentifiersSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIV2CiIdentifiersSelectorBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/ci-identifiers/{selector}][%d] patchApiV2CiIdentifiersSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PatchAPIV2CiIdentifiersSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2CiIdentifiersSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2CiIdentifiersSelectorForbidden creates a PatchAPIV2CiIdentifiersSelectorForbidden with default headers values
func NewPatchAPIV2CiIdentifiersSelectorForbidden() *PatchAPIV2CiIdentifiersSelectorForbidden {
	return &PatchAPIV2CiIdentifiersSelectorForbidden{}
}

/* PatchAPIV2CiIdentifiersSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchAPIV2CiIdentifiersSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIV2CiIdentifiersSelectorForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/ci-identifiers/{selector}][%d] patchApiV2CiIdentifiersSelectorForbidden  %+v", 403, o.Payload)
}
func (o *PatchAPIV2CiIdentifiersSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2CiIdentifiersSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2CiIdentifiersSelectorNotFound creates a PatchAPIV2CiIdentifiersSelectorNotFound with default headers values
func NewPatchAPIV2CiIdentifiersSelectorNotFound() *PatchAPIV2CiIdentifiersSelectorNotFound {
	return &PatchAPIV2CiIdentifiersSelectorNotFound{}
}

/* PatchAPIV2CiIdentifiersSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PatchAPIV2CiIdentifiersSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIV2CiIdentifiersSelectorNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/ci-identifiers/{selector}][%d] patchApiV2CiIdentifiersSelectorNotFound  %+v", 404, o.Payload)
}
func (o *PatchAPIV2CiIdentifiersSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2CiIdentifiersSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired creates a PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired with default headers values
func NewPatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired() *PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired {
	return &PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired{}
}

/* PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/ci-identifiers/{selector}][%d] patchApiV2CiIdentifiersSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2CiIdentifiersSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2CiIdentifiersSelectorConflict creates a PatchAPIV2CiIdentifiersSelectorConflict with default headers values
func NewPatchAPIV2CiIdentifiersSelectorConflict() *PatchAPIV2CiIdentifiersSelectorConflict {
	return &PatchAPIV2CiIdentifiersSelectorConflict{}
}

/* PatchAPIV2CiIdentifiersSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PatchAPIV2CiIdentifiersSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIV2CiIdentifiersSelectorConflict) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/ci-identifiers/{selector}][%d] patchApiV2CiIdentifiersSelectorConflict  %+v", 409, o.Payload)
}
func (o *PatchAPIV2CiIdentifiersSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2CiIdentifiersSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIV2CiIdentifiersSelectorInternalServerError creates a PatchAPIV2CiIdentifiersSelectorInternalServerError with default headers values
func NewPatchAPIV2CiIdentifiersSelectorInternalServerError() *PatchAPIV2CiIdentifiersSelectorInternalServerError {
	return &PatchAPIV2CiIdentifiersSelectorInternalServerError{}
}

/* PatchAPIV2CiIdentifiersSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchAPIV2CiIdentifiersSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PatchAPIV2CiIdentifiersSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/ci-identifiers/{selector}][%d] patchApiV2CiIdentifiersSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchAPIV2CiIdentifiersSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PatchAPIV2CiIdentifiersSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
