// Code generated by go-swagger; DO NOT EDIT.

package database_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// PutAPIV2DatabaseInstancesSelectorReader is a Reader for the PutAPIV2DatabaseInstancesSelector structure.
type PutAPIV2DatabaseInstancesSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAPIV2DatabaseInstancesSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutAPIV2DatabaseInstancesSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPutAPIV2DatabaseInstancesSelectorCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutAPIV2DatabaseInstancesSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutAPIV2DatabaseInstancesSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutAPIV2DatabaseInstancesSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutAPIV2DatabaseInstancesSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutAPIV2DatabaseInstancesSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutAPIV2DatabaseInstancesSelectorOK creates a PutAPIV2DatabaseInstancesSelectorOK with default headers values
func NewPutAPIV2DatabaseInstancesSelectorOK() *PutAPIV2DatabaseInstancesSelectorOK {
	return &PutAPIV2DatabaseInstancesSelectorOK{}
}

/* PutAPIV2DatabaseInstancesSelectorOK describes a response with status code 200, with default header values.

OK
*/
type PutAPIV2DatabaseInstancesSelectorOK struct {
	Payload *models.V2controllersDatabaseInstance
}

func (o *PutAPIV2DatabaseInstancesSelectorOK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorOK  %+v", 200, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorOK) GetPayload() *models.V2controllersDatabaseInstance {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersDatabaseInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2DatabaseInstancesSelectorCreated creates a PutAPIV2DatabaseInstancesSelectorCreated with default headers values
func NewPutAPIV2DatabaseInstancesSelectorCreated() *PutAPIV2DatabaseInstancesSelectorCreated {
	return &PutAPIV2DatabaseInstancesSelectorCreated{}
}

/* PutAPIV2DatabaseInstancesSelectorCreated describes a response with status code 201, with default header values.

Created
*/
type PutAPIV2DatabaseInstancesSelectorCreated struct {
	Payload *models.V2controllersDatabaseInstance
}

func (o *PutAPIV2DatabaseInstancesSelectorCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorCreated  %+v", 201, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorCreated) GetPayload() *models.V2controllersDatabaseInstance {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersDatabaseInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2DatabaseInstancesSelectorBadRequest creates a PutAPIV2DatabaseInstancesSelectorBadRequest with default headers values
func NewPutAPIV2DatabaseInstancesSelectorBadRequest() *PutAPIV2DatabaseInstancesSelectorBadRequest {
	return &PutAPIV2DatabaseInstancesSelectorBadRequest{}
}

/* PutAPIV2DatabaseInstancesSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutAPIV2DatabaseInstancesSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2DatabaseInstancesSelectorBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2DatabaseInstancesSelectorForbidden creates a PutAPIV2DatabaseInstancesSelectorForbidden with default headers values
func NewPutAPIV2DatabaseInstancesSelectorForbidden() *PutAPIV2DatabaseInstancesSelectorForbidden {
	return &PutAPIV2DatabaseInstancesSelectorForbidden{}
}

/* PutAPIV2DatabaseInstancesSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PutAPIV2DatabaseInstancesSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2DatabaseInstancesSelectorForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorForbidden  %+v", 403, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2DatabaseInstancesSelectorNotFound creates a PutAPIV2DatabaseInstancesSelectorNotFound with default headers values
func NewPutAPIV2DatabaseInstancesSelectorNotFound() *PutAPIV2DatabaseInstancesSelectorNotFound {
	return &PutAPIV2DatabaseInstancesSelectorNotFound{}
}

/* PutAPIV2DatabaseInstancesSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutAPIV2DatabaseInstancesSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2DatabaseInstancesSelectorNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorNotFound  %+v", 404, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired creates a PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired with default headers values
func NewPutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired() *PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired {
	return &PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired{}
}

/* PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2DatabaseInstancesSelectorConflict creates a PutAPIV2DatabaseInstancesSelectorConflict with default headers values
func NewPutAPIV2DatabaseInstancesSelectorConflict() *PutAPIV2DatabaseInstancesSelectorConflict {
	return &PutAPIV2DatabaseInstancesSelectorConflict{}
}

/* PutAPIV2DatabaseInstancesSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PutAPIV2DatabaseInstancesSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2DatabaseInstancesSelectorConflict) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorConflict  %+v", 409, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIV2DatabaseInstancesSelectorInternalServerError creates a PutAPIV2DatabaseInstancesSelectorInternalServerError with default headers values
func NewPutAPIV2DatabaseInstancesSelectorInternalServerError() *PutAPIV2DatabaseInstancesSelectorInternalServerError {
	return &PutAPIV2DatabaseInstancesSelectorInternalServerError{}
}

/* PutAPIV2DatabaseInstancesSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutAPIV2DatabaseInstancesSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PutAPIV2DatabaseInstancesSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v2/database-instances/{selector}][%d] putApiV2DatabaseInstancesSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PutAPIV2DatabaseInstancesSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PutAPIV2DatabaseInstancesSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
