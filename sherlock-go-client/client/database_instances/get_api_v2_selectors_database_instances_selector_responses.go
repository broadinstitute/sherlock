// Code generated by go-swagger; DO NOT EDIT.

package database_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// GetAPIV2SelectorsDatabaseInstancesSelectorReader is a Reader for the GetAPIV2SelectorsDatabaseInstancesSelector structure.
type GetAPIV2SelectorsDatabaseInstancesSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2SelectorsDatabaseInstancesSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2SelectorsDatabaseInstancesSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2SelectorsDatabaseInstancesSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2SelectorsDatabaseInstancesSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2SelectorsDatabaseInstancesSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2SelectorsDatabaseInstancesSelectorOK creates a GetAPIV2SelectorsDatabaseInstancesSelectorOK with default headers values
func NewGetAPIV2SelectorsDatabaseInstancesSelectorOK() *GetAPIV2SelectorsDatabaseInstancesSelectorOK {
	return &GetAPIV2SelectorsDatabaseInstancesSelectorOK{}
}

/* GetAPIV2SelectorsDatabaseInstancesSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2SelectorsDatabaseInstancesSelectorOK struct {
	Payload []string
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/database-instances/{selector}][%d] getApiV2SelectorsDatabaseInstancesSelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsDatabaseInstancesSelectorBadRequest creates a GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest with default headers values
func NewGetAPIV2SelectorsDatabaseInstancesSelectorBadRequest() *GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest {
	return &GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest{}
}

/* GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/database-instances/{selector}][%d] getApiV2SelectorsDatabaseInstancesSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsDatabaseInstancesSelectorForbidden creates a GetAPIV2SelectorsDatabaseInstancesSelectorForbidden with default headers values
func NewGetAPIV2SelectorsDatabaseInstancesSelectorForbidden() *GetAPIV2SelectorsDatabaseInstancesSelectorForbidden {
	return &GetAPIV2SelectorsDatabaseInstancesSelectorForbidden{}
}

/* GetAPIV2SelectorsDatabaseInstancesSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2SelectorsDatabaseInstancesSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/database-instances/{selector}][%d] getApiV2SelectorsDatabaseInstancesSelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsDatabaseInstancesSelectorNotFound creates a GetAPIV2SelectorsDatabaseInstancesSelectorNotFound with default headers values
func NewGetAPIV2SelectorsDatabaseInstancesSelectorNotFound() *GetAPIV2SelectorsDatabaseInstancesSelectorNotFound {
	return &GetAPIV2SelectorsDatabaseInstancesSelectorNotFound{}
}

/* GetAPIV2SelectorsDatabaseInstancesSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2SelectorsDatabaseInstancesSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/database-instances/{selector}][%d] getApiV2SelectorsDatabaseInstancesSelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired creates a GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired() *GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired {
	return &GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired{}
}

/* GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/database-instances/{selector}][%d] getApiV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsDatabaseInstancesSelectorConflict creates a GetAPIV2SelectorsDatabaseInstancesSelectorConflict with default headers values
func NewGetAPIV2SelectorsDatabaseInstancesSelectorConflict() *GetAPIV2SelectorsDatabaseInstancesSelectorConflict {
	return &GetAPIV2SelectorsDatabaseInstancesSelectorConflict{}
}

/* GetAPIV2SelectorsDatabaseInstancesSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2SelectorsDatabaseInstancesSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/database-instances/{selector}][%d] getApiV2SelectorsDatabaseInstancesSelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError creates a GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError with default headers values
func NewGetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError() *GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError {
	return &GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError{}
}

/* GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/database-instances/{selector}][%d] getApiV2SelectorsDatabaseInstancesSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsDatabaseInstancesSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
