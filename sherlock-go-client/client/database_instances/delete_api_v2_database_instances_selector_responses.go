// Code generated by go-swagger; DO NOT EDIT.

package database_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/clients/go/client/models"
)

// DeleteAPIV2DatabaseInstancesSelectorReader is a Reader for the DeleteAPIV2DatabaseInstancesSelector structure.
type DeleteAPIV2DatabaseInstancesSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIV2DatabaseInstancesSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAPIV2DatabaseInstancesSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAPIV2DatabaseInstancesSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAPIV2DatabaseInstancesSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAPIV2DatabaseInstancesSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewDeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteAPIV2DatabaseInstancesSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAPIV2DatabaseInstancesSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAPIV2DatabaseInstancesSelectorOK creates a DeleteAPIV2DatabaseInstancesSelectorOK with default headers values
func NewDeleteAPIV2DatabaseInstancesSelectorOK() *DeleteAPIV2DatabaseInstancesSelectorOK {
	return &DeleteAPIV2DatabaseInstancesSelectorOK{}
}

/* DeleteAPIV2DatabaseInstancesSelectorOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAPIV2DatabaseInstancesSelectorOK struct {
	Payload *models.V2controllersDatabaseInstance
}

func (o *DeleteAPIV2DatabaseInstancesSelectorOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/database-instances/{selector}][%d] deleteApiV2DatabaseInstancesSelectorOK  %+v", 200, o.Payload)
}
func (o *DeleteAPIV2DatabaseInstancesSelectorOK) GetPayload() *models.V2controllersDatabaseInstance {
	return o.Payload
}

func (o *DeleteAPIV2DatabaseInstancesSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2controllersDatabaseInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIV2DatabaseInstancesSelectorBadRequest creates a DeleteAPIV2DatabaseInstancesSelectorBadRequest with default headers values
func NewDeleteAPIV2DatabaseInstancesSelectorBadRequest() *DeleteAPIV2DatabaseInstancesSelectorBadRequest {
	return &DeleteAPIV2DatabaseInstancesSelectorBadRequest{}
}

/* DeleteAPIV2DatabaseInstancesSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAPIV2DatabaseInstancesSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIV2DatabaseInstancesSelectorBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/database-instances/{selector}][%d] deleteApiV2DatabaseInstancesSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteAPIV2DatabaseInstancesSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIV2DatabaseInstancesSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIV2DatabaseInstancesSelectorForbidden creates a DeleteAPIV2DatabaseInstancesSelectorForbidden with default headers values
func NewDeleteAPIV2DatabaseInstancesSelectorForbidden() *DeleteAPIV2DatabaseInstancesSelectorForbidden {
	return &DeleteAPIV2DatabaseInstancesSelectorForbidden{}
}

/* DeleteAPIV2DatabaseInstancesSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAPIV2DatabaseInstancesSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIV2DatabaseInstancesSelectorForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/database-instances/{selector}][%d] deleteApiV2DatabaseInstancesSelectorForbidden  %+v", 403, o.Payload)
}
func (o *DeleteAPIV2DatabaseInstancesSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIV2DatabaseInstancesSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIV2DatabaseInstancesSelectorNotFound creates a DeleteAPIV2DatabaseInstancesSelectorNotFound with default headers values
func NewDeleteAPIV2DatabaseInstancesSelectorNotFound() *DeleteAPIV2DatabaseInstancesSelectorNotFound {
	return &DeleteAPIV2DatabaseInstancesSelectorNotFound{}
}

/* DeleteAPIV2DatabaseInstancesSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAPIV2DatabaseInstancesSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIV2DatabaseInstancesSelectorNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/database-instances/{selector}][%d] deleteApiV2DatabaseInstancesSelectorNotFound  %+v", 404, o.Payload)
}
func (o *DeleteAPIV2DatabaseInstancesSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIV2DatabaseInstancesSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired creates a DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired with default headers values
func NewDeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired() *DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired {
	return &DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired{}
}

/* DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/database-instances/{selector}][%d] deleteApiV2DatabaseInstancesSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIV2DatabaseInstancesSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIV2DatabaseInstancesSelectorConflict creates a DeleteAPIV2DatabaseInstancesSelectorConflict with default headers values
func NewDeleteAPIV2DatabaseInstancesSelectorConflict() *DeleteAPIV2DatabaseInstancesSelectorConflict {
	return &DeleteAPIV2DatabaseInstancesSelectorConflict{}
}

/* DeleteAPIV2DatabaseInstancesSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteAPIV2DatabaseInstancesSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIV2DatabaseInstancesSelectorConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/database-instances/{selector}][%d] deleteApiV2DatabaseInstancesSelectorConflict  %+v", 409, o.Payload)
}
func (o *DeleteAPIV2DatabaseInstancesSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIV2DatabaseInstancesSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIV2DatabaseInstancesSelectorInternalServerError creates a DeleteAPIV2DatabaseInstancesSelectorInternalServerError with default headers values
func NewDeleteAPIV2DatabaseInstancesSelectorInternalServerError() *DeleteAPIV2DatabaseInstancesSelectorInternalServerError {
	return &DeleteAPIV2DatabaseInstancesSelectorInternalServerError{}
}

/* DeleteAPIV2DatabaseInstancesSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAPIV2DatabaseInstancesSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIV2DatabaseInstancesSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/database-instances/{selector}][%d] deleteApiV2DatabaseInstancesSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteAPIV2DatabaseInstancesSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIV2DatabaseInstancesSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
