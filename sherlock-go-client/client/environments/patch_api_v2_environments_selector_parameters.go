// Code generated by go-swagger; DO NOT EDIT.

package environments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// NewPatchAPIV2EnvironmentsSelectorParams creates a new PatchAPIV2EnvironmentsSelectorParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchAPIV2EnvironmentsSelectorParams() *PatchAPIV2EnvironmentsSelectorParams {
	return &PatchAPIV2EnvironmentsSelectorParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchAPIV2EnvironmentsSelectorParamsWithTimeout creates a new PatchAPIV2EnvironmentsSelectorParams object
// with the ability to set a timeout on a request.
func NewPatchAPIV2EnvironmentsSelectorParamsWithTimeout(timeout time.Duration) *PatchAPIV2EnvironmentsSelectorParams {
	return &PatchAPIV2EnvironmentsSelectorParams{
		timeout: timeout,
	}
}

// NewPatchAPIV2EnvironmentsSelectorParamsWithContext creates a new PatchAPIV2EnvironmentsSelectorParams object
// with the ability to set a context for a request.
func NewPatchAPIV2EnvironmentsSelectorParamsWithContext(ctx context.Context) *PatchAPIV2EnvironmentsSelectorParams {
	return &PatchAPIV2EnvironmentsSelectorParams{
		Context: ctx,
	}
}

// NewPatchAPIV2EnvironmentsSelectorParamsWithHTTPClient creates a new PatchAPIV2EnvironmentsSelectorParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchAPIV2EnvironmentsSelectorParamsWithHTTPClient(client *http.Client) *PatchAPIV2EnvironmentsSelectorParams {
	return &PatchAPIV2EnvironmentsSelectorParams{
		HTTPClient: client,
	}
}

/* PatchAPIV2EnvironmentsSelectorParams contains all the parameters to send to the API endpoint
   for the patch API v2 environments selector operation.

   Typically these are written to a http.Request.
*/
type PatchAPIV2EnvironmentsSelectorParams struct {

	/* Environment.

	   The edits to make to the Environment
	*/
	Environment *models.V2controllersEditableEnvironment

	/* Selector.

	   The Environment to edit's selector: name, numeric ID, or
	*/
	Selector string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch API v2 environments selector params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchAPIV2EnvironmentsSelectorParams) WithDefaults() *PatchAPIV2EnvironmentsSelectorParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch API v2 environments selector params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchAPIV2EnvironmentsSelectorParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) WithTimeout(timeout time.Duration) *PatchAPIV2EnvironmentsSelectorParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) WithContext(ctx context.Context) *PatchAPIV2EnvironmentsSelectorParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) WithHTTPClient(client *http.Client) *PatchAPIV2EnvironmentsSelectorParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironment adds the environment to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) WithEnvironment(environment *models.V2controllersEditableEnvironment) *PatchAPIV2EnvironmentsSelectorParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) SetEnvironment(environment *models.V2controllersEditableEnvironment) {
	o.Environment = environment
}

// WithSelector adds the selector to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) WithSelector(selector string) *PatchAPIV2EnvironmentsSelectorParams {
	o.SetSelector(selector)
	return o
}

// SetSelector adds the selector to the patch API v2 environments selector params
func (o *PatchAPIV2EnvironmentsSelectorParams) SetSelector(selector string) {
	o.Selector = selector
}

// WriteToRequest writes these params to a swagger request
func (o *PatchAPIV2EnvironmentsSelectorParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Environment != nil {
		if err := r.SetBodyParam(o.Environment); err != nil {
			return err
		}
	}

	// path param selector
	if err := r.SetPathParam("selector", o.Selector); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
