// Code generated by go-swagger; DO NOT EDIT.

package app_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// GetAPIAppVersionsV3SelectorReader is a Reader for the GetAPIAppVersionsV3Selector structure.
type GetAPIAppVersionsV3SelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIAppVersionsV3SelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIAppVersionsV3SelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIAppVersionsV3SelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIAppVersionsV3SelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIAppVersionsV3SelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIAppVersionsV3SelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIAppVersionsV3SelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIAppVersionsV3SelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIAppVersionsV3SelectorOK creates a GetAPIAppVersionsV3SelectorOK with default headers values
func NewGetAPIAppVersionsV3SelectorOK() *GetAPIAppVersionsV3SelectorOK {
	return &GetAPIAppVersionsV3SelectorOK{}
}

/* GetAPIAppVersionsV3SelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIAppVersionsV3SelectorOK struct {
	Payload *models.SherlockAppVersionV3
}

func (o *GetAPIAppVersionsV3SelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/app-versions/v3/{selector}][%d] getApiAppVersionsV3SelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIAppVersionsV3SelectorOK) GetPayload() *models.SherlockAppVersionV3 {
	return o.Payload
}

func (o *GetAPIAppVersionsV3SelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SherlockAppVersionV3)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIAppVersionsV3SelectorBadRequest creates a GetAPIAppVersionsV3SelectorBadRequest with default headers values
func NewGetAPIAppVersionsV3SelectorBadRequest() *GetAPIAppVersionsV3SelectorBadRequest {
	return &GetAPIAppVersionsV3SelectorBadRequest{}
}

/* GetAPIAppVersionsV3SelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIAppVersionsV3SelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIAppVersionsV3SelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/app-versions/v3/{selector}][%d] getApiAppVersionsV3SelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIAppVersionsV3SelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIAppVersionsV3SelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIAppVersionsV3SelectorForbidden creates a GetAPIAppVersionsV3SelectorForbidden with default headers values
func NewGetAPIAppVersionsV3SelectorForbidden() *GetAPIAppVersionsV3SelectorForbidden {
	return &GetAPIAppVersionsV3SelectorForbidden{}
}

/* GetAPIAppVersionsV3SelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIAppVersionsV3SelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIAppVersionsV3SelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/app-versions/v3/{selector}][%d] getApiAppVersionsV3SelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIAppVersionsV3SelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIAppVersionsV3SelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIAppVersionsV3SelectorNotFound creates a GetAPIAppVersionsV3SelectorNotFound with default headers values
func NewGetAPIAppVersionsV3SelectorNotFound() *GetAPIAppVersionsV3SelectorNotFound {
	return &GetAPIAppVersionsV3SelectorNotFound{}
}

/* GetAPIAppVersionsV3SelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIAppVersionsV3SelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIAppVersionsV3SelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/app-versions/v3/{selector}][%d] getApiAppVersionsV3SelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIAppVersionsV3SelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIAppVersionsV3SelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIAppVersionsV3SelectorProxyAuthenticationRequired creates a GetAPIAppVersionsV3SelectorProxyAuthenticationRequired with default headers values
func NewGetAPIAppVersionsV3SelectorProxyAuthenticationRequired() *GetAPIAppVersionsV3SelectorProxyAuthenticationRequired {
	return &GetAPIAppVersionsV3SelectorProxyAuthenticationRequired{}
}

/* GetAPIAppVersionsV3SelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIAppVersionsV3SelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIAppVersionsV3SelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/app-versions/v3/{selector}][%d] getApiAppVersionsV3SelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIAppVersionsV3SelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIAppVersionsV3SelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIAppVersionsV3SelectorConflict creates a GetAPIAppVersionsV3SelectorConflict with default headers values
func NewGetAPIAppVersionsV3SelectorConflict() *GetAPIAppVersionsV3SelectorConflict {
	return &GetAPIAppVersionsV3SelectorConflict{}
}

/* GetAPIAppVersionsV3SelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIAppVersionsV3SelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIAppVersionsV3SelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/app-versions/v3/{selector}][%d] getApiAppVersionsV3SelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIAppVersionsV3SelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIAppVersionsV3SelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIAppVersionsV3SelectorInternalServerError creates a GetAPIAppVersionsV3SelectorInternalServerError with default headers values
func NewGetAPIAppVersionsV3SelectorInternalServerError() *GetAPIAppVersionsV3SelectorInternalServerError {
	return &GetAPIAppVersionsV3SelectorInternalServerError{}
}

/* GetAPIAppVersionsV3SelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIAppVersionsV3SelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIAppVersionsV3SelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/app-versions/v3/{selector}][%d] getApiAppVersionsV3SelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIAppVersionsV3SelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIAppVersionsV3SelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
