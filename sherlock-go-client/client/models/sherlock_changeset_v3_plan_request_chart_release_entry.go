// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SherlockChangesetV3PlanRequestChartReleaseEntry sherlock changeset v3 plan request chart release entry
//
// swagger:model sherlock.ChangesetV3PlanRequestChartReleaseEntry
type SherlockChangesetV3PlanRequestChartReleaseEntry struct {

	// chart release
	ChartRelease string `json:"chartRelease,omitempty"`

	// follow versions from other chart release
	FollowVersionsFromOtherChartRelease string `json:"followVersionsFromOtherChartRelease,omitempty"`

	// to app version branch
	ToAppVersionBranch string `json:"toAppVersionBranch,omitempty"`

	// to app version commit
	ToAppVersionCommit string `json:"toAppVersionCommit,omitempty"`

	// to app version exact
	ToAppVersionExact string `json:"toAppVersionExact,omitempty"`

	// to app version follow chart release
	ToAppVersionFollowChartRelease string `json:"toAppVersionFollowChartRelease,omitempty"`

	// to app version resolver
	ToAppVersionResolver string `json:"toAppVersionResolver,omitempty"`

	// to chart version exact
	ToChartVersionExact string `json:"toChartVersionExact,omitempty"`

	// to chart version follow chart release
	ToChartVersionFollowChartRelease string `json:"toChartVersionFollowChartRelease,omitempty"`

	// to chart version resolver
	ToChartVersionResolver string `json:"toChartVersionResolver,omitempty"`

	// to helmfile ref
	ToHelmfileRef string `json:"toHelmfileRef,omitempty"`

	// to helmfile ref enabled
	ToHelmfileRefEnabled bool `json:"toHelmfileRefEnabled,omitempty"`

	// use exact versions from other chart release
	UseExactVersionsFromOtherChartRelease string `json:"useExactVersionsFromOtherChartRelease,omitempty"`
}

// Validate validates this sherlock changeset v3 plan request chart release entry
func (m *SherlockChangesetV3PlanRequestChartReleaseEntry) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this sherlock changeset v3 plan request chart release entry based on context it is used
func (m *SherlockChangesetV3PlanRequestChartReleaseEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SherlockChangesetV3PlanRequestChartReleaseEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SherlockChangesetV3PlanRequestChartReleaseEntry) UnmarshalBinary(b []byte) error {
	var res SherlockChangesetV3PlanRequestChartReleaseEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
