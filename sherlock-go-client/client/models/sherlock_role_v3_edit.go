// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SherlockRoleV3Edit sherlock role v3 edit
//
// swagger:model sherlock.RoleV3Edit
type SherlockRoleV3Edit struct {

	// When true, Sherlock will automatically assign all users to this role who do not already have a role assignment
	AutoAssignAllUsers bool `json:"autoAssignAllUsers,omitempty"`

	// can be glass broken by role
	CanBeGlassBrokenByRole int64 `json:"canBeGlassBrokenByRole,omitempty"`

	// default glass break duration
	DefaultGlassBreakDuration string `json:"defaultGlassBreakDuration,omitempty"`

	// grants broad institute group
	GrantsBroadInstituteGroup string `json:"grantsBroadInstituteGroup,omitempty"`

	// grants dev azure group
	GrantsDevAzureGroup string `json:"grantsDevAzureGroup,omitempty"`

	// grants dev firecloud folder owner
	GrantsDevFirecloudFolderOwner string `json:"grantsDevFirecloudFolderOwner,omitempty"`

	// grants dev firecloud group
	GrantsDevFirecloudGroup string `json:"grantsDevFirecloudGroup,omitempty"`

	// grants prod azure group
	GrantsProdAzureGroup string `json:"grantsProdAzureGroup,omitempty"`

	// grants prod firecloud folder owner
	GrantsProdFirecloudFolderOwner string `json:"grantsProdFirecloudFolderOwner,omitempty"`

	// grants prod firecloud group
	GrantsProdFirecloudGroup string `json:"grantsProdFirecloudGroup,omitempty"`

	// grants qa firecloud folder owner
	GrantsQaFirecloudFolderOwner string `json:"grantsQaFirecloudFolderOwner,omitempty"`

	// grants qa firecloud group
	GrantsQaFirecloudGroup string `json:"grantsQaFirecloudGroup,omitempty"`

	// grants sherlock super admin
	GrantsSherlockSuperAdmin bool `json:"grantsSherlockSuperAdmin,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// When true, the "suspended" field on role assignments will be computed by Sherlock based on suitability instead of being a mutable API field
	SuspendNonSuitableUsers bool `json:"suspendNonSuitableUsers,omitempty"`
}

// Validate validates this sherlock role v3 edit
func (m *SherlockRoleV3Edit) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this sherlock role v3 edit based on context it is used
func (m *SherlockRoleV3Edit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SherlockRoleV3Edit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SherlockRoleV3Edit) UnmarshalBinary(b []byte) error {
	var res SherlockRoleV3Edit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
