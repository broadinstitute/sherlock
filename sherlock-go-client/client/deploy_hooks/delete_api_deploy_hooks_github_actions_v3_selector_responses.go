// Code generated by go-swagger; DO NOT EDIT.

package deploy_hooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// DeleteAPIDeployHooksGithubActionsV3SelectorReader is a Reader for the DeleteAPIDeployHooksGithubActionsV3Selector structure.
type DeleteAPIDeployHooksGithubActionsV3SelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAPIDeployHooksGithubActionsV3SelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAPIDeployHooksGithubActionsV3SelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAPIDeployHooksGithubActionsV3SelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAPIDeployHooksGithubActionsV3SelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewDeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteAPIDeployHooksGithubActionsV3SelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAPIDeployHooksGithubActionsV3SelectorOK creates a DeleteAPIDeployHooksGithubActionsV3SelectorOK with default headers values
func NewDeleteAPIDeployHooksGithubActionsV3SelectorOK() *DeleteAPIDeployHooksGithubActionsV3SelectorOK {
	return &DeleteAPIDeployHooksGithubActionsV3SelectorOK{}
}

/* DeleteAPIDeployHooksGithubActionsV3SelectorOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAPIDeployHooksGithubActionsV3SelectorOK struct {
	Payload *models.SherlockGithubActionsDeployHookV3
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorOK) Error() string {
	return fmt.Sprintf("[DELETE /api/deploy-hooks/github-actions/v3/{selector}][%d] deleteApiDeployHooksGithubActionsV3SelectorOK  %+v", 200, o.Payload)
}
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorOK) GetPayload() *models.SherlockGithubActionsDeployHookV3 {
	return o.Payload
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SherlockGithubActionsDeployHookV3)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIDeployHooksGithubActionsV3SelectorBadRequest creates a DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest with default headers values
func NewDeleteAPIDeployHooksGithubActionsV3SelectorBadRequest() *DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest {
	return &DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest{}
}

/* DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/deploy-hooks/github-actions/v3/{selector}][%d] deleteApiDeployHooksGithubActionsV3SelectorBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIDeployHooksGithubActionsV3SelectorForbidden creates a DeleteAPIDeployHooksGithubActionsV3SelectorForbidden with default headers values
func NewDeleteAPIDeployHooksGithubActionsV3SelectorForbidden() *DeleteAPIDeployHooksGithubActionsV3SelectorForbidden {
	return &DeleteAPIDeployHooksGithubActionsV3SelectorForbidden{}
}

/* DeleteAPIDeployHooksGithubActionsV3SelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAPIDeployHooksGithubActionsV3SelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/deploy-hooks/github-actions/v3/{selector}][%d] deleteApiDeployHooksGithubActionsV3SelectorForbidden  %+v", 403, o.Payload)
}
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIDeployHooksGithubActionsV3SelectorNotFound creates a DeleteAPIDeployHooksGithubActionsV3SelectorNotFound with default headers values
func NewDeleteAPIDeployHooksGithubActionsV3SelectorNotFound() *DeleteAPIDeployHooksGithubActionsV3SelectorNotFound {
	return &DeleteAPIDeployHooksGithubActionsV3SelectorNotFound{}
}

/* DeleteAPIDeployHooksGithubActionsV3SelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAPIDeployHooksGithubActionsV3SelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/deploy-hooks/github-actions/v3/{selector}][%d] deleteApiDeployHooksGithubActionsV3SelectorNotFound  %+v", 404, o.Payload)
}
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired creates a DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired with default headers values
func NewDeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired() *DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired {
	return &DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired{}
}

/* DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[DELETE /api/deploy-hooks/github-actions/v3/{selector}][%d] deleteApiDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIDeployHooksGithubActionsV3SelectorConflict creates a DeleteAPIDeployHooksGithubActionsV3SelectorConflict with default headers values
func NewDeleteAPIDeployHooksGithubActionsV3SelectorConflict() *DeleteAPIDeployHooksGithubActionsV3SelectorConflict {
	return &DeleteAPIDeployHooksGithubActionsV3SelectorConflict{}
}

/* DeleteAPIDeployHooksGithubActionsV3SelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteAPIDeployHooksGithubActionsV3SelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorConflict) Error() string {
	return fmt.Sprintf("[DELETE /api/deploy-hooks/github-actions/v3/{selector}][%d] deleteApiDeployHooksGithubActionsV3SelectorConflict  %+v", 409, o.Payload)
}
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError creates a DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError with default headers values
func NewDeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError() *DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError {
	return &DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError{}
}

/* DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/deploy-hooks/github-actions/v3/{selector}][%d] deleteApiDeployHooksGithubActionsV3SelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *DeleteAPIDeployHooksGithubActionsV3SelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
