// Code generated by go-swagger; DO NOT EDIT.

package deploy_hooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// PostAPIDeployHooksGithubActionsProceduresV3TestSelectorReader is a Reader for the PostAPIDeployHooksGithubActionsProceduresV3TestSelector structure.
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK creates a PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK with default headers values
func NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK() *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK {
	return &PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK{}
}

/* PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK describes a response with status code 200, with default header values.

OK
*/
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK struct {
	Payload *models.SherlockGithubActionsDeployHookTestRunResponse
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/github-actions/procedures/v3/test/{selector}][%d] postApiDeployHooksGithubActionsProceduresV3TestSelectorOK  %+v", 200, o.Payload)
}
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK) GetPayload() *models.SherlockGithubActionsDeployHookTestRunResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SherlockGithubActionsDeployHookTestRunResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest creates a PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest with default headers values
func NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest() *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest {
	return &PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest{}
}

/* PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/github-actions/procedures/v3/test/{selector}][%d] postApiDeployHooksGithubActionsProceduresV3TestSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden creates a PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden with default headers values
func NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden() *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden {
	return &PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden{}
}

/* PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/github-actions/procedures/v3/test/{selector}][%d] postApiDeployHooksGithubActionsProceduresV3TestSelectorForbidden  %+v", 403, o.Payload)
}
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound creates a PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound with default headers values
func NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound() *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound {
	return &PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound{}
}

/* PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/github-actions/procedures/v3/test/{selector}][%d] postApiDeployHooksGithubActionsProceduresV3TestSelectorNotFound  %+v", 404, o.Payload)
}
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired creates a PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired with default headers values
func NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired() *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired {
	return &PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired{}
}

/* PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/github-actions/procedures/v3/test/{selector}][%d] postApiDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict creates a PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict with default headers values
func NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict() *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict {
	return &PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict{}
}

/* PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/github-actions/procedures/v3/test/{selector}][%d] postApiDeployHooksGithubActionsProceduresV3TestSelectorConflict  %+v", 409, o.Payload)
}
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError creates a PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError with default headers values
func NewPostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError() *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError {
	return &PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError{}
}

/* PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/github-actions/procedures/v3/test/{selector}][%d] postApiDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksGithubActionsProceduresV3TestSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
