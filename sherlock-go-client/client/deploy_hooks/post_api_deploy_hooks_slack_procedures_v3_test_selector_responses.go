// Code generated by go-swagger; DO NOT EDIT.

package deploy_hooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// PostAPIDeployHooksSlackProceduresV3TestSelectorReader is a Reader for the PostAPIDeployHooksSlackProceduresV3TestSelector structure.
type PostAPIDeployHooksSlackProceduresV3TestSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIDeployHooksSlackProceduresV3TestSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAPIDeployHooksSlackProceduresV3TestSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAPIDeployHooksSlackProceduresV3TestSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewPostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostAPIDeployHooksSlackProceduresV3TestSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAPIDeployHooksSlackProceduresV3TestSelectorOK creates a PostAPIDeployHooksSlackProceduresV3TestSelectorOK with default headers values
func NewPostAPIDeployHooksSlackProceduresV3TestSelectorOK() *PostAPIDeployHooksSlackProceduresV3TestSelectorOK {
	return &PostAPIDeployHooksSlackProceduresV3TestSelectorOK{}
}

/* PostAPIDeployHooksSlackProceduresV3TestSelectorOK describes a response with status code 200, with default header values.

OK
*/
type PostAPIDeployHooksSlackProceduresV3TestSelectorOK struct {
	Payload *models.SherlockSlackDeployHookTestRunResponse
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorOK) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/slack/procedures/v3/test/{selector}][%d] postApiDeployHooksSlackProceduresV3TestSelectorOK  %+v", 200, o.Payload)
}
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorOK) GetPayload() *models.SherlockSlackDeployHookTestRunResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SherlockSlackDeployHookTestRunResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest creates a PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest with default headers values
func NewPostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest() *PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest {
	return &PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest{}
}

/* PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/slack/procedures/v3/test/{selector}][%d] postApiDeployHooksSlackProceduresV3TestSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksSlackProceduresV3TestSelectorForbidden creates a PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden with default headers values
func NewPostAPIDeployHooksSlackProceduresV3TestSelectorForbidden() *PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden {
	return &PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden{}
}

/* PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/slack/procedures/v3/test/{selector}][%d] postApiDeployHooksSlackProceduresV3TestSelectorForbidden  %+v", 403, o.Payload)
}
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksSlackProceduresV3TestSelectorNotFound creates a PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound with default headers values
func NewPostAPIDeployHooksSlackProceduresV3TestSelectorNotFound() *PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound {
	return &PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound{}
}

/* PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/slack/procedures/v3/test/{selector}][%d] postApiDeployHooksSlackProceduresV3TestSelectorNotFound  %+v", 404, o.Payload)
}
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired creates a PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired with default headers values
func NewPostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired() *PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired {
	return &PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired{}
}

/* PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/slack/procedures/v3/test/{selector}][%d] postApiDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksSlackProceduresV3TestSelectorConflict creates a PostAPIDeployHooksSlackProceduresV3TestSelectorConflict with default headers values
func NewPostAPIDeployHooksSlackProceduresV3TestSelectorConflict() *PostAPIDeployHooksSlackProceduresV3TestSelectorConflict {
	return &PostAPIDeployHooksSlackProceduresV3TestSelectorConflict{}
}

/* PostAPIDeployHooksSlackProceduresV3TestSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostAPIDeployHooksSlackProceduresV3TestSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorConflict) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/slack/procedures/v3/test/{selector}][%d] postApiDeployHooksSlackProceduresV3TestSelectorConflict  %+v", 409, o.Payload)
}
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError creates a PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError with default headers values
func NewPostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError() *PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError {
	return &PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError{}
}

/* PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/deploy-hooks/slack/procedures/v3/test/{selector}][%d] postApiDeployHooksSlackProceduresV3TestSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *PostAPIDeployHooksSlackProceduresV3TestSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
