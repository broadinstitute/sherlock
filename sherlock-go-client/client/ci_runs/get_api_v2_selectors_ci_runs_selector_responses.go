// Code generated by go-swagger; DO NOT EDIT.

package ci_runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/sherlock-go-client/client/models"
)

// GetAPIV2SelectorsCiRunsSelectorReader is a Reader for the GetAPIV2SelectorsCiRunsSelector structure.
type GetAPIV2SelectorsCiRunsSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2SelectorsCiRunsSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2SelectorsCiRunsSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2SelectorsCiRunsSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2SelectorsCiRunsSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2SelectorsCiRunsSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2SelectorsCiRunsSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2SelectorsCiRunsSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2SelectorsCiRunsSelectorOK creates a GetAPIV2SelectorsCiRunsSelectorOK with default headers values
func NewGetAPIV2SelectorsCiRunsSelectorOK() *GetAPIV2SelectorsCiRunsSelectorOK {
	return &GetAPIV2SelectorsCiRunsSelectorOK{}
}

/* GetAPIV2SelectorsCiRunsSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2SelectorsCiRunsSelectorOK struct {
	Payload []string
}

func (o *GetAPIV2SelectorsCiRunsSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/ci-runs/{selector}][%d] getApiV2SelectorsCiRunsSelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIV2SelectorsCiRunsSelectorOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAPIV2SelectorsCiRunsSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsCiRunsSelectorBadRequest creates a GetAPIV2SelectorsCiRunsSelectorBadRequest with default headers values
func NewGetAPIV2SelectorsCiRunsSelectorBadRequest() *GetAPIV2SelectorsCiRunsSelectorBadRequest {
	return &GetAPIV2SelectorsCiRunsSelectorBadRequest{}
}

/* GetAPIV2SelectorsCiRunsSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2SelectorsCiRunsSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsCiRunsSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/ci-runs/{selector}][%d] getApiV2SelectorsCiRunsSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIV2SelectorsCiRunsSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsCiRunsSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsCiRunsSelectorForbidden creates a GetAPIV2SelectorsCiRunsSelectorForbidden with default headers values
func NewGetAPIV2SelectorsCiRunsSelectorForbidden() *GetAPIV2SelectorsCiRunsSelectorForbidden {
	return &GetAPIV2SelectorsCiRunsSelectorForbidden{}
}

/* GetAPIV2SelectorsCiRunsSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2SelectorsCiRunsSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsCiRunsSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/ci-runs/{selector}][%d] getApiV2SelectorsCiRunsSelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIV2SelectorsCiRunsSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsCiRunsSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsCiRunsSelectorNotFound creates a GetAPIV2SelectorsCiRunsSelectorNotFound with default headers values
func NewGetAPIV2SelectorsCiRunsSelectorNotFound() *GetAPIV2SelectorsCiRunsSelectorNotFound {
	return &GetAPIV2SelectorsCiRunsSelectorNotFound{}
}

/* GetAPIV2SelectorsCiRunsSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2SelectorsCiRunsSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsCiRunsSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/ci-runs/{selector}][%d] getApiV2SelectorsCiRunsSelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIV2SelectorsCiRunsSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsCiRunsSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired creates a GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired() *GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired {
	return &GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired{}
}

/* GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/ci-runs/{selector}][%d] getApiV2SelectorsCiRunsSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsCiRunsSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsCiRunsSelectorConflict creates a GetAPIV2SelectorsCiRunsSelectorConflict with default headers values
func NewGetAPIV2SelectorsCiRunsSelectorConflict() *GetAPIV2SelectorsCiRunsSelectorConflict {
	return &GetAPIV2SelectorsCiRunsSelectorConflict{}
}

/* GetAPIV2SelectorsCiRunsSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2SelectorsCiRunsSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsCiRunsSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/ci-runs/{selector}][%d] getApiV2SelectorsCiRunsSelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIV2SelectorsCiRunsSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsCiRunsSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsCiRunsSelectorInternalServerError creates a GetAPIV2SelectorsCiRunsSelectorInternalServerError with default headers values
func NewGetAPIV2SelectorsCiRunsSelectorInternalServerError() *GetAPIV2SelectorsCiRunsSelectorInternalServerError {
	return &GetAPIV2SelectorsCiRunsSelectorInternalServerError{}
}

/* GetAPIV2SelectorsCiRunsSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2SelectorsCiRunsSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsCiRunsSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/ci-runs/{selector}][%d] getApiV2SelectorsCiRunsSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIV2SelectorsCiRunsSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsCiRunsSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
