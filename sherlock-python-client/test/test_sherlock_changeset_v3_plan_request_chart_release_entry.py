# coding: utf-8

"""
    Sherlock

    The Data Science Platform's source-of-truth service. Note: this API will try to load and return associations in responses, so clients won't need to make as many requests. This behavior isn't recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).

    The version of the OpenAPI document: development
    Contact: dsp-devops@broadinstitute.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sherlock_python_client.models.sherlock_changeset_v3_plan_request_chart_release_entry import SherlockChangesetV3PlanRequestChartReleaseEntry

class TestSherlockChangesetV3PlanRequestChartReleaseEntry(unittest.TestCase):
    """SherlockChangesetV3PlanRequestChartReleaseEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SherlockChangesetV3PlanRequestChartReleaseEntry:
        """Test SherlockChangesetV3PlanRequestChartReleaseEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SherlockChangesetV3PlanRequestChartReleaseEntry`
        """
        model = SherlockChangesetV3PlanRequestChartReleaseEntry()
        if include_optional:
            return SherlockChangesetV3PlanRequestChartReleaseEntry(
                chart_release = '',
                follow_versions_from_other_chart_release = '',
                to_app_version_branch = '',
                to_app_version_commit = '',
                to_app_version_exact = '',
                to_app_version_follow_chart_release = '',
                to_app_version_resolver = '',
                to_chart_version_exact = '',
                to_chart_version_follow_chart_release = '',
                to_chart_version_resolver = '',
                to_helmfile_ref = '',
                to_helmfile_ref_enabled = True,
                use_exact_versions_from_other_chart_release = ''
            )
        else:
            return SherlockChangesetV3PlanRequestChartReleaseEntry(
        )
        """

    def testSherlockChangesetV3PlanRequestChartReleaseEntry(self):
        """Test SherlockChangesetV3PlanRequestChartReleaseEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
