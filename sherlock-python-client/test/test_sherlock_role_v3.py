# coding: utf-8

"""
    Sherlock

    The Data Science Platform's source-of-truth service. Note: this API will try to load and return associations in responses, so clients won't need to make as many requests. This behavior isn't recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).

    The version of the OpenAPI document: development
    Contact: dsp-devops@broadinstitute.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sherlock_python_client.models.sherlock_role_v3 import SherlockRoleV3

class TestSherlockRoleV3(unittest.TestCase):
    """SherlockRoleV3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SherlockRoleV3:
        """Test SherlockRoleV3
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SherlockRoleV3`
        """
        model = SherlockRoleV3()
        if include_optional:
            return SherlockRoleV3(
                assignments = [
                    sherlock_python_client.models.sherlock/role_assignment_v3.sherlock.RoleAssignmentV3(
                        expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        expires_in = '', 
                        role_info = sherlock_python_client.models.role_info.roleInfo(), 
                        suspended = True, 
                        user_info = sherlock_python_client.models.user_info.userInfo(), )
                    ],
                auto_assign_all_users = True,
                can_be_glass_broken_by_role = 56,
                can_be_glass_broken_by_role_info = sherlock_python_client.models.can_be_glass_broken_by_role_info.canBeGlassBrokenByRoleInfo(),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                default_glass_break_duration = '',
                grants_broad_institute_group = '',
                grants_dev_azure_account = True,
                grants_dev_azure_directory_roles = True,
                grants_dev_azure_group = '',
                grants_dev_firecloud_folder_owner = '',
                grants_dev_firecloud_group = '',
                grants_prod_azure_account = True,
                grants_prod_azure_directory_roles = True,
                grants_prod_azure_group = '',
                grants_prod_firecloud_folder_owner = '',
                grants_prod_firecloud_group = '',
                grants_qa_firecloud_folder_owner = '',
                grants_qa_firecloud_group = '',
                grants_sherlock_super_admin = True,
                id = 56,
                name = '',
                suspend_non_suitable_users = True,
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return SherlockRoleV3(
        )
        """

    def testSherlockRoleV3(self):
        """Test SherlockRoleV3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
