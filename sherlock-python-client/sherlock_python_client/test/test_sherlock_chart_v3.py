# coding: utf-8

"""
    Sherlock

    The Data Science Platform's source-of-truth service. Note: this API will try to load and return associations in responses, so clients won't need to make as many requests. This behavior isn't recursive, though, so associations of associations are *not* fully loaded (even if it might seem that way from looking at the data types).

    The version of the OpenAPI document: development
    Contact: dsp-devops@broadinstitute.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sherlock_python_client.models.sherlock_chart_v3 import SherlockChartV3

class TestSherlockChartV3(unittest.TestCase):
    """SherlockChartV3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SherlockChartV3:
        """Test SherlockChartV3
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SherlockChartV3`
        """
        model = SherlockChartV3()
        if include_optional:
            return SherlockChartV3(
                app_image_git_main_branch = '',
                app_image_git_repo = '',
                chart_exposes_endpoint = True,
                chart_repo = 'terra-helm',
                ci_identifier = sherlock_python_client.models.sherlock/ci_identifier_v3.sherlock.CiIdentifierV3(
                    ci_runs = [
                        sherlock_python_client.models.sherlock/ci_run_v3.sherlock.CiRunV3(
                            argo_workflows_name = '', 
                            argo_workflows_namespace = '', 
                            argo_workflows_template = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            github_actions_attempt_number = 56, 
                            github_actions_owner = '', 
                            github_actions_repo = '', 
                            github_actions_run_id = 56, 
                            github_actions_workflow_path = '', 
                            id = 56, 
                            notify_slack_channels_upon_failure = [
                                ''
                                ], 
                            notify_slack_channels_upon_retry = [
                                ''
                                ], 
                            notify_slack_channels_upon_success = [
                                ''
                                ], 
                            notify_slack_custom_icon = '', 
                            platform = '', 
                            related_resources = [
                                sherlock_python_client.models.sherlock/ci_identifier_v3.sherlock.CiIdentifierV3(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = 56, 
                                    resource_id = 56, 
                                    resource_status = '', 
                                    resource_type = '', 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            resource_status = '', 
                            started_at = '', 
                            status = '', 
                            terminal_at = '', 
                            termination_hooks_dispatched_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = 56, 
                    resource_id = 56, 
                    resource_status = '', 
                    resource_type = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                default_port = 56,
                default_protocol = 'https',
                default_subdomain = '',
                description = '',
                id = 56,
                name = '',
                pact_participant = True,
                playbook_url = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return SherlockChartV3(
        )
        """

    def testSherlockChartV3(self):
        """Test SherlockChartV3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
