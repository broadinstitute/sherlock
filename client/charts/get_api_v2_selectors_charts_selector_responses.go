// Code generated by go-swagger; DO NOT EDIT.

package charts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/broadinstitute/sherlock/client/models"
)

// GetAPIV2SelectorsChartsSelectorReader is a Reader for the GetAPIV2SelectorsChartsSelector structure.
type GetAPIV2SelectorsChartsSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2SelectorsChartsSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2SelectorsChartsSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV2SelectorsChartsSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV2SelectorsChartsSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIV2SelectorsChartsSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 407:
		result := NewGetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAPIV2SelectorsChartsSelectorConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV2SelectorsChartsSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2SelectorsChartsSelectorOK creates a GetAPIV2SelectorsChartsSelectorOK with default headers values
func NewGetAPIV2SelectorsChartsSelectorOK() *GetAPIV2SelectorsChartsSelectorOK {
	return &GetAPIV2SelectorsChartsSelectorOK{}
}

/* GetAPIV2SelectorsChartsSelectorOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV2SelectorsChartsSelectorOK struct {
	Payload []string
}

func (o *GetAPIV2SelectorsChartsSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/charts/{selector}][%d] getApiV2SelectorsChartsSelectorOK  %+v", 200, o.Payload)
}
func (o *GetAPIV2SelectorsChartsSelectorOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartsSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartsSelectorBadRequest creates a GetAPIV2SelectorsChartsSelectorBadRequest with default headers values
func NewGetAPIV2SelectorsChartsSelectorBadRequest() *GetAPIV2SelectorsChartsSelectorBadRequest {
	return &GetAPIV2SelectorsChartsSelectorBadRequest{}
}

/* GetAPIV2SelectorsChartsSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV2SelectorsChartsSelectorBadRequest struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsChartsSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/charts/{selector}][%d] getApiV2SelectorsChartsSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *GetAPIV2SelectorsChartsSelectorBadRequest) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartsSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartsSelectorForbidden creates a GetAPIV2SelectorsChartsSelectorForbidden with default headers values
func NewGetAPIV2SelectorsChartsSelectorForbidden() *GetAPIV2SelectorsChartsSelectorForbidden {
	return &GetAPIV2SelectorsChartsSelectorForbidden{}
}

/* GetAPIV2SelectorsChartsSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV2SelectorsChartsSelectorForbidden struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsChartsSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/charts/{selector}][%d] getApiV2SelectorsChartsSelectorForbidden  %+v", 403, o.Payload)
}
func (o *GetAPIV2SelectorsChartsSelectorForbidden) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartsSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartsSelectorNotFound creates a GetAPIV2SelectorsChartsSelectorNotFound with default headers values
func NewGetAPIV2SelectorsChartsSelectorNotFound() *GetAPIV2SelectorsChartsSelectorNotFound {
	return &GetAPIV2SelectorsChartsSelectorNotFound{}
}

/* GetAPIV2SelectorsChartsSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAPIV2SelectorsChartsSelectorNotFound struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsChartsSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/charts/{selector}][%d] getApiV2SelectorsChartsSelectorNotFound  %+v", 404, o.Payload)
}
func (o *GetAPIV2SelectorsChartsSelectorNotFound) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartsSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired creates a GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired with default headers values
func NewGetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired() *GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired {
	return &GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired{}
}

/* GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired describes a response with status code 407, with default header values.

Proxy Authentication Required
*/
type GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/charts/{selector}][%d] getApiV2SelectorsChartsSelectorProxyAuthenticationRequired  %+v", 407, o.Payload)
}
func (o *GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartsSelectorProxyAuthenticationRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartsSelectorConflict creates a GetAPIV2SelectorsChartsSelectorConflict with default headers values
func NewGetAPIV2SelectorsChartsSelectorConflict() *GetAPIV2SelectorsChartsSelectorConflict {
	return &GetAPIV2SelectorsChartsSelectorConflict{}
}

/* GetAPIV2SelectorsChartsSelectorConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetAPIV2SelectorsChartsSelectorConflict struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsChartsSelectorConflict) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/charts/{selector}][%d] getApiV2SelectorsChartsSelectorConflict  %+v", 409, o.Payload)
}
func (o *GetAPIV2SelectorsChartsSelectorConflict) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartsSelectorConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV2SelectorsChartsSelectorInternalServerError creates a GetAPIV2SelectorsChartsSelectorInternalServerError with default headers values
func NewGetAPIV2SelectorsChartsSelectorInternalServerError() *GetAPIV2SelectorsChartsSelectorInternalServerError {
	return &GetAPIV2SelectorsChartsSelectorInternalServerError{}
}

/* GetAPIV2SelectorsChartsSelectorInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV2SelectorsChartsSelectorInternalServerError struct {
	Payload *models.ErrorsErrorResponse
}

func (o *GetAPIV2SelectorsChartsSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/selectors/charts/{selector}][%d] getApiV2SelectorsChartsSelectorInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAPIV2SelectorsChartsSelectorInternalServerError) GetPayload() *models.ErrorsErrorResponse {
	return o.Payload
}

func (o *GetAPIV2SelectorsChartsSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
